{"id":"206b8f01665b242cf74b2f272b499b64","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotesUpgradeable {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * _Available since v4.1._\n */\ninterface IERC3156FlashBorrowerUpgradeable {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"IERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC3156FlashBorrowerUpgradeable.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * _Available since v4.1._\n */\ninterface IERC3156FlashLenderUpgradeable {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrowerUpgradeable receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20PermitUpgradeable.sol\";\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20PermitUpgradeable, EIP712Upgradeable {\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    mapping(address => CountersUpgradeable.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSAUpgradeable.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        CountersUpgradeable.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../../interfaces/IERC3156FlashBorrowerUpgradeable.sol\";\nimport \"../../../interfaces/IERC3156FlashLenderUpgradeable.sol\";\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * _Available since v4.1._\n */\nabstract contract ERC20FlashMintUpgradeable is Initializable, ERC20Upgradeable, IERC3156FlashLenderUpgradeable {\n    function __ERC20FlashMint_init() internal onlyInitializing {\n    }\n\n    function __ERC20FlashMint_init_unchained() internal onlyInitializing {\n    }\n    bytes32 private constant _RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     */\n    function maxFlashLoan(address token) public view virtual override returns (uint256) {\n        return token == address(this) ? type(uint256).max - ERC20Upgradeable.totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param amount The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 amount) public view virtual override returns (uint256) {\n        require(token == address(this), \"ERC20FlashMint: wrong token\");\n        return _flashFee(token, amount);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param amount The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 amount) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        amount;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * amount + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param amount The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrowerUpgradeable receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override returns (bool) {\n        require(amount <= maxFlashLoan(token), \"ERC20FlashMint: amount exceeds maxFlashLoan\");\n        uint256 fee = flashFee(token, amount);\n        _mint(address(receiver), amount);\n        require(\n            receiver.onFlashLoan(msg.sender, token, amount, fee, data) == _RETURN_VALUE,\n            \"ERC20FlashMint: invalid return value\"\n        );\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), amount + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), amount + fee);\n        } else {\n            _burn(address(receiver), amount);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/extensions/ERC20Snapshot.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ArraysUpgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n * total supply at the time are recorded for later access.\n *\n * This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n * In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n * accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n * used to create an efficient ERC20 forking mechanism.\n *\n * Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n * snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n * id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n * and the account address.\n *\n * NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n * return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n * function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n *\n * Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n * alternative consider {ERC20Votes}.\n *\n * ==== Gas Costs\n *\n * Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n * n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n * smaller since identical balances in subsequent snapshots are stored as a single entry.\n *\n * There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n * only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n * transfers will have normal cost until the next snapshot, and so on.\n */\n\nabstract contract ERC20SnapshotUpgradeable is Initializable, ERC20Upgradeable {\n    function __ERC20Snapshot_init() internal onlyInitializing {\n    }\n\n    function __ERC20Snapshot_init_unchained() internal onlyInitializing {\n    }\n    // Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n    // https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n\n    using ArraysUpgradeable for uint256[];\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    // Snapshotted values have arrays of ids and the value corresponding to that id. These could be an array of a\n    // Snapshot struct, but that would impede usage of functions that work on an array.\n    struct Snapshots {\n        uint256[] ids;\n        uint256[] values;\n    }\n\n    mapping(address => Snapshots) private _accountBalanceSnapshots;\n    Snapshots private _totalSupplySnapshots;\n\n    // Snapshot ids increase monotonically, with the first value being 1. An id of 0 is invalid.\n    CountersUpgradeable.Counter private _currentSnapshotId;\n\n    /**\n     * @dev Emitted by {_snapshot} when a snapshot identified by `id` is created.\n     */\n    event Snapshot(uint256 id);\n\n    /**\n     * @dev Creates a new snapshot and returns its snapshot id.\n     *\n     * Emits a {Snapshot} event that contains the same id.\n     *\n     * {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n     * set of accounts, for example using {AccessControl}, or it may be open to the public.\n     *\n     * [WARNING]\n     * ====\n     * While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n     * you must consider that it can potentially be used by attackers in two ways.\n     *\n     * First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n     * logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n     * specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n     * section above.\n     *\n     * We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n     * ====\n     */\n    function _snapshot() internal virtual returns (uint256) {\n        _currentSnapshotId.increment();\n\n        uint256 currentId = _getCurrentSnapshotId();\n        emit Snapshot(currentId);\n        return currentId;\n    }\n\n    /**\n     * @dev Get the current snapshotId\n     */\n    function _getCurrentSnapshotId() internal view virtual returns (uint256) {\n        return _currentSnapshotId.current();\n    }\n\n    /**\n     * @dev Retrieves the balance of `account` at the time `snapshotId` was created.\n     */\n    function balanceOfAt(address account, uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _accountBalanceSnapshots[account]);\n\n        return snapshotted ? value : balanceOf(account);\n    }\n\n    /**\n     * @dev Retrieves the total supply at the time `snapshotId` was created.\n     */\n    function totalSupplyAt(uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _totalSupplySnapshots);\n\n        return snapshotted ? value : totalSupply();\n    }\n\n    // Update balance and/or total supply snapshots before the values are modified. This is implemented\n    // in the _beforeTokenTransfer hook, which is executed for _mint, _burn, and _transfer operations.\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        if (from == address(0)) {\n            // mint\n            _updateAccountSnapshot(to);\n            _updateTotalSupplySnapshot();\n        } else if (to == address(0)) {\n            // burn\n            _updateAccountSnapshot(from);\n            _updateTotalSupplySnapshot();\n        } else {\n            // transfer\n            _updateAccountSnapshot(from);\n            _updateAccountSnapshot(to);\n        }\n    }\n\n    function _valueAt(uint256 snapshotId, Snapshots storage snapshots) private view returns (bool, uint256) {\n        require(snapshotId > 0, \"ERC20Snapshot: id is 0\");\n        require(snapshotId <= _getCurrentSnapshotId(), \"ERC20Snapshot: nonexistent id\");\n\n        // When a valid snapshot is queried, there are three possibilities:\n        //  a) The queried value was not modified after the snapshot was taken. Therefore, a snapshot entry was never\n        //  created for this id, and all stored snapshot ids are smaller than the requested one. The value that corresponds\n        //  to this id is the current one.\n        //  b) The queried value was modified after the snapshot was taken. Therefore, there will be an entry with the\n        //  requested id, and its value is the one to return.\n        //  c) More snapshots were created after the requested one, and the queried value was later modified. There will be\n        //  no entry for the requested id: the value that corresponds to it is that of the smallest snapshot id that is\n        //  larger than the requested one.\n        //\n        // In summary, we need to find an element in an array, returning the index of the smallest value that is larger if\n        // it is not found, unless said value doesn't exist (e.g. when all values are smaller). Arrays.findUpperBound does\n        // exactly this.\n\n        uint256 index = snapshots.ids.findUpperBound(snapshotId);\n\n        if (index == snapshots.ids.length) {\n            return (false, 0);\n        } else {\n            return (true, snapshots.values[index]);\n        }\n    }\n\n    function _updateAccountSnapshot(address account) private {\n        _updateSnapshot(_accountBalanceSnapshots[account], balanceOf(account));\n    }\n\n    function _updateTotalSupplySnapshot() private {\n        _updateSnapshot(_totalSupplySnapshots, totalSupply());\n    }\n\n    function _updateSnapshot(Snapshots storage snapshots, uint256 currentValue) private {\n        uint256 currentId = _getCurrentSnapshotId();\n        if (_lastSnapshotId(snapshots.ids) < currentId) {\n            snapshots.ids.push(currentId);\n            snapshots.values.push(currentValue);\n        }\n    }\n\n    function _lastSnapshotId(uint256[] storage ids) private view returns (uint256) {\n        if (ids.length == 0) {\n            return 0;\n        } else {\n            return ids[ids.length - 1];\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[46] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20PermitUpgradeable.sol\";\nimport \"../../../utils/math/MathUpgradeable.sol\";\nimport \"../../../governance/utils/IVotesUpgradeable.sol\";\nimport \"../../../utils/math/SafeCastUpgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20VotesUpgradeable is Initializable, IVotesUpgradeable, ERC20PermitUpgradeable {\n    function __ERC20Votes_init() internal onlyInitializing {\n    }\n\n    function __ERC20Votes_init_unchained() internal onlyInitializing {\n    }\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCastUpgradeable.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - MathUpgradeable.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = MathUpgradeable.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSAUpgradeable.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n        oldWeight = oldCkpt.votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && oldCkpt.fromBlock == block.number) {\n            _unsafeAccess(ckpts, pos - 1).votes = SafeCastUpgradeable.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./StorageSlotUpgradeable.sol\";\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary ArraysUpgradeable {\n    using StorageSlotUpgradeable for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        if (array.length == 0) {\n            return 0;\n        }\n\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        while (low < high) {\n            uint256 mid = MathUpgradeable.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds down (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlotUpgradeable.AddressSlot storage) {\n        bytes32 slot;\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlotUpgradeable.Bytes32Slot storage) {\n        bytes32 slot;\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlotUpgradeable.Uint256Slot storage) {\n        bytes32 slot;\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSAUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 52\n */\nabstract contract EIP712Upgradeable is Initializable {\n    /* solhint-disable var-name-mixedcase */\n    bytes32 private _HASHED_NAME;\n    bytes32 private _HASHED_VERSION;\n    bytes32 private constant _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash());\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712NameHash() internal virtual view returns (bytes32) {\n        return _HASHED_NAME;\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712VersionHash() internal virtual view returns (bytes32) {\n        return _HASHED_VERSION;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCastUpgradeable {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/PKDR.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/// @custom:security-contact zohaib10092001@gmail.com\ncontract PKDR is\n    Initializable,\n    ERC20Upgradeable,\n    ERC20BurnableUpgradeable,\n    ERC20SnapshotUpgradeable,\n    OwnableUpgradeable,\n    PausableUpgradeable,\n    ERC20PermitUpgradeable,\n    ERC20VotesUpgradeable,\n    ERC20FlashMintUpgradeable\n{\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize() public initializer {\n        __ERC20_init(\"PKDR\", \"PKDR\");\n        __ERC20Burnable_init();\n        __ERC20Snapshot_init();\n        __Ownable_init();\n        __Pausable_init();\n        __ERC20Permit_init(\"PKDR\");\n        __ERC20Votes_init();\n        __ERC20FlashMint_init();\n    }\n\n    function snapshot() public onlyOwner {\n        _snapshot();\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    )\n        internal\n        override(ERC20Upgradeable, ERC20SnapshotUpgradeable)\n        whenNotPaused\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20Upgradeable, ERC20VotesUpgradeable) {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(\n        address to,\n        uint256 amount\n    ) internal override(ERC20Upgradeable, ERC20VotesUpgradeable) {\n        super._mint(to, amount);\n    }\n\n    function _burn(\n        address account,\n        uint256 amount\n    ) internal override(ERC20Upgradeable, ERC20VotesUpgradeable) {\n        super._burn(account, amount);\n    }\n}\n"},"contracts/Profiles.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n\n//states variables\n//error\n//events\n//modifier\n// constructor\n// receive\n// fallback\n// external\n// public\n// internal\n// private\n// view or pure\n\n\n\n//createProfile\n//getVerifiedUser\n// revokeVerifiedUser\n// retainVerification\ncontract Profiles {\n\n\nstruct users{\n    bool verificationStatus;\n\n}\nmapping (address => users) name;\n\n\nconstructor(){\n\n}\n\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"Initializable":[436],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":3355,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":437,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3354,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,3354,436],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","exportedSymbols":{"IVotesUpgradeable":[209]},"id":210,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotesUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":209,"linearizedBaseContracts":[209],"name":"IVotesUpgradeable","nameLocation":"278:17:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"302:71:1","text":" @dev Emitted when an account changes their delegate."},"id":143,"name":"DelegateChanged","nameLocation":"384:15:1","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"416:9:1","nodeType":"VariableDeclaration","scope":143,"src":"400:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"443:12:1","nodeType":"VariableDeclaration","scope":143,"src":"427:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"473:10:1","nodeType":"VariableDeclaration","scope":143,"src":"457:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:85:1"},"src":"378:107:1"},{"anonymous":false,"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"491:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":152,"name":"DelegateVotesChanged","nameLocation":"626:20:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"663:8:1","nodeType":"VariableDeclaration","scope":152,"src":"647:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"681:15:1","nodeType":"VariableDeclaration","scope":152,"src":"673:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"706:10:1","nodeType":"VariableDeclaration","scope":152,"src":"698:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:71:1"},"src":"620:98:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"724:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":160,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"817:8:1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"account","nameLocation":"834:7:1","nodeType":"VariableDeclaration","scope":160,"src":"826:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:17:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"866:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:9:1"},"scope":209,"src":"808:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"881:114:1","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1009:12:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"account","nameLocation":"1030:7:1","nodeType":"VariableDeclaration","scope":170,"src":"1022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"blockNumber","nameLocation":"1047:11:1","nodeType":"VariableDeclaration","scope":170,"src":"1039:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1021:38:1"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"1083:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:1"},"scope":209,"src":"1000:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1098:365:1","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":178,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1477:18:1","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"blockNumber","nameLocation":"1504:11:1","nodeType":"VariableDeclaration","scope":178,"src":"1496:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:21:1"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":178,"src":"1540:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1540:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1539:9:1"},"scope":209,"src":"1468:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1555:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1640:9:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"account","nameLocation":"1658:7:1","nodeType":"VariableDeclaration","scope":186,"src":"1650:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:17:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"1690:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1689:9:1"},"scope":209,"src":"1631:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1705:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1790:8:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"delegatee","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":192,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"1826:0:1"},"scope":209,"src":"1781:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1833:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1914:13:1","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"delegatee","nameLocation":"1945:9:1","nodeType":"VariableDeclaration","scope":208,"src":"1937:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1937:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"nonce","nameLocation":"1972:5:1","nodeType":"VariableDeclaration","scope":208,"src":"1964:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"expiry","nameLocation":"1995:6:1","nodeType":"VariableDeclaration","scope":208,"src":"1987:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"v","nameLocation":"2017:1:1","nodeType":"VariableDeclaration","scope":208,"src":"2011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":200,"name":"uint8","nodeType":"ElementaryTypeName","src":"2011:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"r","nameLocation":"2036:1:1","nodeType":"VariableDeclaration","scope":208,"src":"2028:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"s","nameLocation":"2055:1:1","nodeType":"VariableDeclaration","scope":208,"src":"2047:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2047:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1927:135:1"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"2071:0:1"},"scope":209,"src":"1905:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":210,"src":"268:1806:1","usedErrors":[]}],"src":"110:1965:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol","exportedSymbols":{"IERC3156FlashBorrowerUpgradeable":[229]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":211,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"120:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrowerUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"145:153:2","text":" @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n _Available since v4.1._"},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229],"name":"IERC3156FlashBorrowerUpgradeable","nameLocation":"309:32:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"348:406:2","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"IERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"768:11:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"initiator","nameLocation":"797:9:2","nodeType":"VariableDeclaration","scope":228,"src":"789:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"token","nameLocation":"824:5:2","nodeType":"VariableDeclaration","scope":228,"src":"816:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"amount","nameLocation":"847:6:2","nodeType":"VariableDeclaration","scope":228,"src":"839:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"fee","nameLocation":"871:3:2","nodeType":"VariableDeclaration","scope":228,"src":"863:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"899:4:2","nodeType":"VariableDeclaration","scope":228,"src":"884:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"884:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"779:130:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"928:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"928:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"927:9:2"},"scope":229,"src":"759:178:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"299:640:2","usedErrors":[]}],"src":"120:820:2"},"id":2},"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol","exportedSymbols":{"IERC3156FlashBorrowerUpgradeable":[229],"IERC3156FlashLenderUpgradeable":[267]},"id":268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol","file":"./IERC3156FlashBorrowerUpgradeable.sol","id":232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":268,"sourceUnit":230,"src":"128:48:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLenderUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"178:151:3","text":" @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n _Available since v4.1._"},"fullyImplemented":false,"id":267,"linearizedBaseContracts":[267],"name":"IERC3156FlashLenderUpgradeable","nameLocation":"340:30:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"377:168:3","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":241,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"559:12:3","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"token","nameLocation":"580:5:3","nodeType":"VariableDeclaration","scope":241,"src":"572:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"571:15:3"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"610:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:9:3"},"scope":267,"src":"550:69:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"625:249:3","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":251,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"888:8:3","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"token","nameLocation":"905:5:3","nodeType":"VariableDeclaration","scope":251,"src":"897:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"amount","nameLocation":"920:6:3","nodeType":"VariableDeclaration","scope":251,"src":"912:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:31:3"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":251,"src":"951:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:9:3"},"scope":267,"src":"879:81:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"966:320:3","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":266,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1300:9:3","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"receiver","nameLocation":"1352:8:3","nodeType":"VariableDeclaration","scope":266,"src":"1319:41:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"},"typeName":{"id":254,"nodeType":"UserDefinedTypeName","pathNode":{"id":253,"name":"IERC3156FlashBorrowerUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":229,"src":"1319:32:3"},"referencedDeclaration":229,"src":"1319:32:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"token","nameLocation":"1378:5:3","nodeType":"VariableDeclaration","scope":266,"src":"1370:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1370:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"1401:6:3","nodeType":"VariableDeclaration","scope":266,"src":"1393:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1393:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"data","nameLocation":"1432:4:3","nodeType":"VariableDeclaration","scope":266,"src":"1417:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":260,"name":"bytes","nodeType":"ElementaryTypeName","src":"1417:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1309:133:3"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":266,"src":"1461:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"1461:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1460:6:3"},"scope":267,"src":"1291:176:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":268,"src":"330:1139:3","usedErrors":[]}],"src":"103:1367:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"Initializable":[436]},"id":437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":269,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":437,"sourceUnit":3157,"src":"138:44:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"184:2198:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":436,"linearizedBaseContracts":[436],"name":"Initializable","nameLocation":"2401:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"2421:109:4","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":274,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:4","nodeType":"VariableDeclaration","scope":436,"src":"2535:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":273,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"2568:91:4","text":" @dev Indicates that the contract is in the process of being initialized."},"id":277,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:4","nodeType":"VariableDeclaration","scope":436,"src":"2664:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":276,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2697:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":282,"name":"Initialized","nameLocation":"2798:11:4","nodeType":"EventDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:4","nodeType":"VariableDeclaration","scope":282,"src":"2810:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":279,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:4"},"src":"2792:33:4"},{"body":{"id":337,"nodeType":"Block","src":"3258:483:4","statements":[{"assignments":[286],"declarations":[{"constant":false,"id":286,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:4","nodeType":"VariableDeclaration","scope":337,"src":"3268:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":289,"initialValue":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:4","subExpression":{"id":287,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3291:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3336:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":292,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"3354:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:4","subExpression":{"arguments":[{"arguments":[{"id":301,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$436","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$436","typeString":"contract Initializable"}],"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:4","typeDescriptions":{}}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3407:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":297,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3377:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3156_$","typeString":"type(library AddressUpgradeable)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2890,"src":"3377:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3377:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"3425:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3314:201:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"3314:201:4"},{"expression":{"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":314,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"3525:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":317,"nodeType":"ExpressionStatement","src":"3525:16:4"},{"condition":{"id":318,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3555:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"3551:65:4","trueBody":{"id":323,"nodeType":"Block","src":"3571:45:4","statements":[{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":319,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3585:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":322,"nodeType":"ExpressionStatement","src":"3585:20:4"}]}},{"id":325,"nodeType":"PlaceholderStatement","src":"3625:1:4"},{"condition":{"id":326,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3640:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"IfStatement","src":"3636:99:4","trueBody":{"id":335,"nodeType":"Block","src":"3656:79:4","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3670:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":330,"nodeType":"ExpressionStatement","src":"3670:21:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":331,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3710:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"EmitStatement","src":"3705:19:4"}]}}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"2831:399:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":338,"name":"initializer","nameLocation":"3244:11:4","nodeType":"ModifierDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"3255:2:4"},"src":"3235:506:4","virtual":false,"visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"4852:255:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:4","subExpression":{"id":344,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4871:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":346,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"4888:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":347,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4903:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4862:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"4862:99:4"},{"expression":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":353,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"4971:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":354,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4986:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":356,"nodeType":"ExpressionStatement","src":"4971:22:4"},{"expression":{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":357,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5003:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":360,"nodeType":"ExpressionStatement","src":"5003:20:4"},{"id":361,"nodeType":"PlaceholderStatement","src":"5033:1:4"},{"expression":{"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":362,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5044:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":365,"nodeType":"ExpressionStatement","src":"5044:21:4"},{"eventCall":{"arguments":[{"id":367,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5092:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":366,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5080:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5080:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"EmitStatement","src":"5075:25:4"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"3747:1062:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":371,"name":"reinitializer","nameLocation":"4823:13:4","nodeType":"ModifierDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"version","nameLocation":"4843:7:4","nodeType":"VariableDeclaration","scope":371,"src":"4837:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":340,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:4"},"src":"4814:293:4","virtual":false,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"5345:97:4","statements":[{"expression":{"arguments":[{"id":375,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5363:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"5355:69:4"},{"id":379,"nodeType":"PlaceholderStatement","src":"5434:1:4"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"5113:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":381,"name":"onlyInitializing","nameLocation":"5326:16:4","nodeType":"ModifierDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"5342:2:4"},"src":"5317:125:4","virtual":false,"visibility":"internal"},{"body":{"id":416,"nodeType":"Block","src":"5977:230:4","statements":[{"expression":{"arguments":[{"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:4","subExpression":{"id":386,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5996:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5987:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"5987:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6067:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":393,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6082:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6082:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":415,"nodeType":"IfStatement","src":"6063:138:4","trueBody":{"id":414,"nodeType":"Block","src":"6099:102:4","statements":[{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":398,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6113:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":400,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6128:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6128:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":405,"nodeType":"ExpressionStatement","src":"6113:30:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":408,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":407,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6174:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":406,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"6162:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6162:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"EmitStatement","src":"6157:33:4"}]}}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5448:475:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":417,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:4","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"5957:2:4"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"5977:0:4"},"scope":436,"src":"5928:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":425,"nodeType":"Block","src":"6381:36:4","statements":[{"expression":{"id":423,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6398:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":422,"id":424,"nodeType":"Return","src":"6391:19:4"}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"6213:99:4","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":426,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6326:22:4","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"6348:2:4"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"6374:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":420,"name":"uint8","nodeType":"ElementaryTypeName","src":"6374:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6373:7:4"},"scope":436,"src":"6317:100:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":434,"nodeType":"Block","src":"6589:37:4","statements":[{"expression":{"id":432,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"6606:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"6599:20:4"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"6423:105:4","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":435,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6542:15:4","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"6557:2:4"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"6583:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":429,"name":"bool","nodeType":"ElementaryTypeName","src":"6583:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6582:6:4"},"scope":436,"src":"6533:93:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":437,"src":"2383:4245:4","usedErrors":[]}],"src":"113:6516:4"},"id":4},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"Initializable":[436],"PausableUpgradeable":[563]},"id":564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":438,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":3355,"src":"130:41:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":437,"src":"172:42:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":442,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"697:13:5"},"id":443,"nodeType":"InheritanceSpecifier","src":"697:13:5"},{"baseName":{"id":444,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3354,"src":"712:18:5"},"id":445,"nodeType":"InheritanceSpecifier","src":"712:18:5"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"216:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":563,"linearizedBaseContracts":[563,3354,436],"name":"PausableUpgradeable","nameLocation":"674:19:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"737:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"id":450,"name":"Paused","nameLocation":"821:6:5","nodeType":"EventDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:5","nodeType":"VariableDeclaration","scope":450,"src":"828:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:5"},"src":"815:30:5"},{"anonymous":false,"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"851:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"id":455,"name":"Unpaused","nameLocation":"932:8:5","nodeType":"EventDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:5","nodeType":"VariableDeclaration","scope":455,"src":"941:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:5"},"src":"926:32:5"},{"constant":false,"id":457,"mutability":"mutable","name":"_paused","nameLocation":"977:7:5","nodeType":"VariableDeclaration","scope":563,"src":"964:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":466,"nodeType":"Block","src":"1116:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"1126:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"1126:27:5"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"991:67:5","text":" @dev Initializes the contract in unpaused state."},"id":467,"implemented":true,"kind":"function","modifiers":[{"id":461,"kind":"modifierInvocation","modifierName":{"id":460,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1099:16:5"},"nodeType":"ModifierInvocation","src":"1099:16:5"}],"name":"__Pausable_init","nameLocation":"1072:15:5","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"1087:2:5"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1116:0:5"},"scope":563,"src":"1063:97:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"1229:32:5","statements":[{"expression":{"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":472,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1239:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":475,"nodeType":"ExpressionStatement","src":"1239:15:5"}]},"id":477,"implemented":true,"kind":"function","modifiers":[{"id":470,"kind":"modifierInvocation","modifierName":{"id":469,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1212:16:5"},"nodeType":"ModifierInvocation","src":"1212:16:5"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:5","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"1200:2:5"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"1229:0:5"},"scope":563,"src":"1166:95:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"1472:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1482:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"ExpressionStatement","src":"1482:19:5"},{"id":483,"nodeType":"PlaceholderStatement","src":"1511:1:5"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"1267:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":485,"name":"whenNotPaused","nameLocation":"1456:13:5","nodeType":"ModifierDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"1469:2:5"},"src":"1447:72:5","virtual":false,"visibility":"internal"},{"body":{"id":492,"nodeType":"Block","src":"1719:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1729:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"ExpressionStatement","src":"1729:16:5"},{"id":491,"nodeType":"PlaceholderStatement","src":"1755:1:5"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"1525:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":493,"name":"whenPaused","nameLocation":"1706:10:5","nodeType":"ModifierDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"1716:2:5"},"src":"1697:66:5","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"1911:31:5","statements":[{"expression":{"id":499,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1928:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":498,"id":500,"nodeType":"Return","src":"1921:14:5"}]},"documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"1769:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":502,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:5","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1873:2:5"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":502,"src":"1905:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:5"},"scope":563,"src":"1858:84:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"2061:55:5","statements":[{"expression":{"arguments":[{"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":507,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2080:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"2071:38:5"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"1948:57:5","text":" @dev Throws if the contract is paused."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:5","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2036:2:5"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"2061:0:5"},"scope":563,"src":"2010:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"2236:58:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":519,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2254:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"2246:41:5"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2122:61:5","text":" @dev Throws if the contract is not paused."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:5","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"2211:2:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2236:0:5"},"scope":563,"src":"2188:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"2478:66:5","statements":[{"expression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":531,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2488:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":534,"nodeType":"ExpressionStatement","src":"2488:14:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":536,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"2524:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2517:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"EmitStatement","src":"2512:25:5"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"2300:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":541,"implemented":true,"kind":"function","modifiers":[{"id":529,"kind":"modifierInvocation","modifierName":{"id":528,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":485,"src":"2464:13:5"},"nodeType":"ModifierInvocation","src":"2464:13:5"}],"name":"_pause","nameLocation":"2438:6:5","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2444:2:5"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"2478:0:5"},"scope":563,"src":"2429:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"2724:69:5","statements":[{"expression":{"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":547,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2734:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"nodeType":"ExpressionStatement","src":"2734:15:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"2773:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":551,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2764:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"EmitStatement","src":"2759:27:5"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"2550:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":557,"implemented":true,"kind":"function","modifiers":[{"id":545,"kind":"modifierInvocation","modifierName":{"id":544,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":493,"src":"2713:10:5"},"nodeType":"ModifierInvocation","src":"2713:10:5"}],"name":"_unpause","nameLocation":"2685:8:5","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"2693:2:5"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"2724:0:5"},"scope":563,"src":"2676:117:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"2799:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":562,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:5","nodeType":"VariableDeclaration","scope":563,"src":"3058:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"length":{"hexValue":"3439","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":564,"src":"656:2430:5","usedErrors":[]}],"src":"105:2982:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"ERC20Upgradeable":[1175],"IERC20MetadataUpgradeable":[2645],"IERC20Upgradeable":[1253],"Initializable":[436]},"id":1176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":565,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":1254,"src":"130:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":2646,"src":"164:52:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":3355,"src":"217:44:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":437,"src":"262:45:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":571,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1509:13:6"},"id":572,"nodeType":"InheritanceSpecifier","src":"1509:13:6"},{"baseName":{"id":573,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3354,"src":"1524:18:6"},"id":574,"nodeType":"InheritanceSpecifier","src":"1524:18:6"},{"baseName":{"id":575,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"1544:17:6"},"id":576,"nodeType":"InheritanceSpecifier","src":"1544:17:6"},{"baseName":{"id":577,"name":"IERC20MetadataUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2645,"src":"1563:25:6"},"id":578,"nodeType":"InheritanceSpecifier","src":"1563:25:6"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"309:1170:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1175,"linearizedBaseContracts":[1175,2645,1253,3354,436],"name":"ERC20Upgradeable","nameLocation":"1489:16:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":582,"mutability":"mutable","name":"_balances","nameLocation":"1631:9:6","nodeType":"VariableDeclaration","scope":1175,"src":"1595:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":581,"keyType":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1595:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":588,"mutability":"mutable","name":"_allowances","nameLocation":"1703:11:6","nodeType":"VariableDeclaration","scope":1175,"src":"1647:67:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":587,"keyType":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1655:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1647:47:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":586,"keyType":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"1674:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1666:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":590,"mutability":"mutable","name":"_totalSupply","nameLocation":"1737:12:6","nodeType":"VariableDeclaration","scope":1175,"src":"1721:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":592,"mutability":"mutable","name":"_name","nameLocation":"1771:5:6","nodeType":"VariableDeclaration","scope":1175,"src":"1756:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":591,"name":"string","nodeType":"ElementaryTypeName","src":"1756:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":594,"mutability":"mutable","name":"_symbol","nameLocation":"1797:7:6","nodeType":"VariableDeclaration","scope":1175,"src":"1782:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":593,"name":"string","nodeType":"ElementaryTypeName","src":"1782:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":609,"nodeType":"Block","src":"2206:55:6","statements":[{"expression":{"arguments":[{"id":605,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"2239:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":606,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"2246:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":604,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"2216:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2216:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"2216:38:6"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"1811:298:6","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":610,"implemented":true,"kind":"function","modifiers":[{"id":602,"kind":"modifierInvocation","modifierName":{"id":601,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2189:16:6"},"nodeType":"ModifierInvocation","src":"2189:16:6"}],"name":"__ERC20_init","nameLocation":"2123:12:6","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"name_","nameLocation":"2150:5:6","nodeType":"VariableDeclaration","scope":610,"src":"2136:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":596,"name":"string","nodeType":"ElementaryTypeName","src":"2136:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"symbol_","nameLocation":"2171:7:6","nodeType":"VariableDeclaration","scope":610,"src":"2157:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":598,"name":"string","nodeType":"ElementaryTypeName","src":"2157:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2135:44:6"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"2206:0:6"},"scope":1175,"src":"2114:147:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"2369:57:6","statements":[{"expression":{"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":619,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"2379:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":620,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"2387:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2379:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":622,"nodeType":"ExpressionStatement","src":"2379:13:6"},{"expression":{"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":623,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2402:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":624,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"2412:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2402:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":626,"nodeType":"ExpressionStatement","src":"2402:17:6"}]},"id":628,"implemented":true,"kind":"function","modifiers":[{"id":617,"kind":"modifierInvocation","modifierName":{"id":616,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2352:16:6"},"nodeType":"ModifierInvocation","src":"2352:16:6"}],"name":"__ERC20_init_unchained","nameLocation":"2276:22:6","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"name_","nameLocation":"2313:5:6","nodeType":"VariableDeclaration","scope":628,"src":"2299:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":611,"name":"string","nodeType":"ElementaryTypeName","src":"2299:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"symbol_","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":628,"src":"2320:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":613,"name":"string","nodeType":"ElementaryTypeName","src":"2320:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2298:44:6"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"2369:0:6"},"scope":1175,"src":"2267:159:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2632],"body":{"id":637,"nodeType":"Block","src":"2560:29:6","statements":[{"expression":{"id":635,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"2577:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":634,"id":636,"nodeType":"Return","src":"2570:12:6"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"2432:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":638,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2500:4:6","nodeType":"FunctionDefinition","overrides":{"id":631,"nodeType":"OverrideSpecifier","overrides":[],"src":"2527:8:6"},"parameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"2504:2:6"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":638,"src":"2545:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":632,"name":"string","nodeType":"ElementaryTypeName","src":"2545:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2544:15:6"},"scope":1175,"src":"2491:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2638],"body":{"id":647,"nodeType":"Block","src":"2773:31:6","statements":[{"expression":{"id":645,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2790:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":644,"id":646,"nodeType":"Return","src":"2783:14:6"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"2595:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":648,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2711:6:6","nodeType":"FunctionDefinition","overrides":{"id":641,"nodeType":"OverrideSpecifier","overrides":[],"src":"2740:8:6"},"parameters":{"id":640,"nodeType":"ParameterList","parameters":[],"src":"2717:2:6"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":648,"src":"2758:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":642,"name":"string","nodeType":"ElementaryTypeName","src":"2758:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2757:15:6"},"scope":1175,"src":"2702:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2644],"body":{"id":657,"nodeType":"Block","src":"3493:26:6","statements":[{"expression":{"hexValue":"3138","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3510:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":654,"id":656,"nodeType":"Return","src":"3503:9:6"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"2810:613:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3437:8:6","nodeType":"FunctionDefinition","overrides":{"id":651,"nodeType":"OverrideSpecifier","overrides":[],"src":"3468:8:6"},"parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"3445:2:6"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"3486:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":652,"name":"uint8","nodeType":"ElementaryTypeName","src":"3486:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3485:7:6"},"scope":1175,"src":"3428:91:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1202],"body":{"id":667,"nodeType":"Block","src":"3649:36:6","statements":[{"expression":{"id":665,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3666:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":664,"id":666,"nodeType":"Return","src":"3659:19:6"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"3525:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":668,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3588:11:6","nodeType":"FunctionDefinition","overrides":{"id":661,"nodeType":"OverrideSpecifier","overrides":[],"src":"3622:8:6"},"parameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"3599:2:6"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"3640:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3639:9:6"},"scope":1175,"src":"3579:106:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1210],"body":{"id":681,"nodeType":"Block","src":"3826:42:6","statements":[{"expression":{"baseExpression":{"id":677,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3843:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":679,"indexExpression":{"id":678,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3853:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3843:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":676,"id":680,"nodeType":"Return","src":"3836:25:6"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"3691:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":682,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3752:9:6","nodeType":"FunctionDefinition","overrides":{"id":673,"nodeType":"OverrideSpecifier","overrides":[],"src":"3799:8:6"},"parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"account","nameLocation":"3770:7:6","nodeType":"VariableDeclaration","scope":682,"src":"3762:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"3762:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3761:17:6"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"3817:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:9:6"},"scope":1175,"src":"3743:125:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1220],"body":{"id":706,"nodeType":"Block","src":"4149:104:6","statements":[{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"owner","nameLocation":"4167:5:6","nodeType":"VariableDeclaration","scope":706,"src":"4159:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":695,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"4175:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4175:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4159:28:6"},{"expression":{"arguments":[{"id":699,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"4207:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4214:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4218:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4197:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4197:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"4197:28:6"},{"expression":{"hexValue":"74727565","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4242:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":692,"id":705,"nodeType":"Return","src":"4235:11:6"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"3874:185:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":707,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4073:8:6","nodeType":"FunctionDefinition","overrides":{"id":689,"nodeType":"OverrideSpecifier","overrides":[],"src":"4125:8:6"},"parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"to","nameLocation":"4090:2:6","nodeType":"VariableDeclaration","scope":707,"src":"4082:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"amount","nameLocation":"4102:6:6","nodeType":"VariableDeclaration","scope":707,"src":"4094:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4081:28:6"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"4143:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"4143:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4142:6:6"},"scope":1175,"src":"4064:189:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1230],"body":{"id":724,"nodeType":"Block","src":"4409:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":718,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4426:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":720,"indexExpression":{"id":719,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4438:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":722,"indexExpression":{"id":721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4445:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":717,"id":723,"nodeType":"Return","src":"4419:34:6"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"4259:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":725,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4320:9:6","nodeType":"FunctionDefinition","overrides":{"id":714,"nodeType":"OverrideSpecifier","overrides":[],"src":"4382:8:6"},"parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"4338:5:6","nodeType":"VariableDeclaration","scope":725,"src":"4330:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"4330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"spender","nameLocation":"4353:7:6","nodeType":"VariableDeclaration","scope":725,"src":"4345:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"4345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4329:32:6"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":725,"src":"4400:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"4400:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4399:9:6"},"scope":1175,"src":"4311:149:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1240],"body":{"id":749,"nodeType":"Block","src":"4857:108:6","statements":[{"assignments":[737],"declarations":[{"constant":false,"id":737,"mutability":"mutable","name":"owner","nameLocation":"4875:5:6","nodeType":"VariableDeclaration","scope":749,"src":"4867:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":740,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":738,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"4883:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4883:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4867:28:6"},{"expression":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"4914:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"4921:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"4930:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"4905:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4905:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"4905:32:6"},{"expression":{"hexValue":"74727565","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4954:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":735,"id":748,"nodeType":"Return","src":"4947:11:6"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"4466:297:6","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":750,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4777:7:6","nodeType":"FunctionDefinition","overrides":{"id":732,"nodeType":"OverrideSpecifier","overrides":[],"src":"4833:8:6"},"parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"spender","nameLocation":"4793:7:6","nodeType":"VariableDeclaration","scope":750,"src":"4785:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"amount","nameLocation":"4810:6:6","nodeType":"VariableDeclaration","scope":750,"src":"4802:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:33:6"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"4851:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":733,"name":"bool","nodeType":"ElementaryTypeName","src":"4851:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4850:6:6"},"scope":1175,"src":"4768:197:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1252],"body":{"id":782,"nodeType":"Block","src":"5660:153:6","statements":[{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"spender","nameLocation":"5678:7:6","nodeType":"VariableDeclaration","scope":782,"src":"5670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":767,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":765,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"5688:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5688:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5670:30:6"},{"expression":{"arguments":[{"id":769,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5726:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":770,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"5732:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"5741:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":768,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5710:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5710:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"5710:38:6"},{"expression":{"arguments":[{"id":775,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5768:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"5774:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"5778:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5758:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5758:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"5758:27:6"},{"expression":{"hexValue":"74727565","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5802:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":762,"id":781,"nodeType":"Return","src":"5795:11:6"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"4971:551:6","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5536:12:6","nodeType":"FunctionDefinition","overrides":{"id":759,"nodeType":"OverrideSpecifier","overrides":[],"src":"5636:8:6"},"parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"5566:4:6","nodeType":"VariableDeclaration","scope":783,"src":"5558:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"5588:2:6","nodeType":"VariableDeclaration","scope":783,"src":"5580:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"amount","nameLocation":"5608:6:6","nodeType":"VariableDeclaration","scope":783,"src":"5600:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"5600:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5548:72:6"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"5654:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":760,"name":"bool","nodeType":"ElementaryTypeName","src":"5654:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5653:6:6"},"scope":1175,"src":"5527:286:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":811,"nodeType":"Block","src":"6302:140:6","statements":[{"assignments":[794],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"owner","nameLocation":"6320:5:6","nodeType":"VariableDeclaration","scope":811,"src":"6312:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"6312:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":797,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6328:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6328:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6312:28:6"},{"expression":{"arguments":[{"id":799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"6359:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"6366:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":802,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"6385:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"6392:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":801,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"6375:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6375:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":805,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6403:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6350:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6350:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"ExpressionStatement","src":"6350:64:6"},{"expression":{"hexValue":"74727565","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":792,"id":810,"nodeType":"Return","src":"6424:11:6"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"5819:384:6","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":812,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6217:17:6","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"spender","nameLocation":"6243:7:6","nodeType":"VariableDeclaration","scope":812,"src":"6235:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"6235:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"addedValue","nameLocation":"6260:10:6","nodeType":"VariableDeclaration","scope":812,"src":"6252:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6234:37:6"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"6296:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":790,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6295:6:6"},"scope":1175,"src":"6208:234:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":852,"nodeType":"Block","src":"7028:328:6","statements":[{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"owner","nameLocation":"7046:5:6","nodeType":"VariableDeclaration","scope":852,"src":"7038:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"7038:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":826,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":824,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"7054:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7054:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7038:28:6"},{"assignments":[828],"declarations":[{"constant":false,"id":828,"mutability":"mutable","name":"currentAllowance","nameLocation":"7084:16:6","nodeType":"VariableDeclaration","scope":852,"src":"7076:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7076:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":833,"initialValue":{"arguments":[{"id":830,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"7113:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":831,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"7120:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":829,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"7103:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7103:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7076:52:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7146:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":836,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"7166:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7146:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7183:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7138:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7138:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"7138:85:6"},{"id":849,"nodeType":"UncheckedBlock","src":"7233:95:6","statements":[{"expression":{"arguments":[{"id":842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"7266:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"7273:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7282:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":845,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"7301:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7282:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":841,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7257:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7257:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"7257:60:6"}]},{"expression":{"hexValue":"74727565","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7345:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":821,"id":851,"nodeType":"Return","src":"7338:11:6"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"6448:476:6","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":853,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6938:17:6","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"spender","nameLocation":"6964:7:6","nodeType":"VariableDeclaration","scope":853,"src":"6956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"6956:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"subtractedValue","nameLocation":"6981:15:6","nodeType":"VariableDeclaration","scope":853,"src":"6973:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6973:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6955:42:6"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"7022:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":819,"name":"bool","nodeType":"ElementaryTypeName","src":"7022:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7021:6:6"},"scope":1175,"src":"6929:427:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":929,"nodeType":"Block","src":"7918:710:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7936:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7944:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"7944:7:6","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7944:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7936:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7956:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7928:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7928:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"7928:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":874,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8014:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8028:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8020:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"8020:7:6","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8020:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8014:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8032:37:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":873,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8006:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8006:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"8006:64:6"},{"expression":{"arguments":[{"id":884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"8102:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8108:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8112:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":883,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"8081:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8081:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"8081:38:6"},{"assignments":[890],"declarations":[{"constant":false,"id":890,"mutability":"mutable","name":"fromBalance","nameLocation":"8138:11:6","nodeType":"VariableDeclaration","scope":929,"src":"8130:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"8130:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":894,"initialValue":{"baseExpression":{"id":891,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8152:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":893,"indexExpression":{"id":892,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"8162:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8152:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8130:37:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8185:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":897,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8200:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8185:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8208:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8177:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8177:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"8177:72:6"},{"id":916,"nodeType":"UncheckedBlock","src":"8259:273:6","statements":[{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":902,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8283:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":904,"indexExpression":{"id":903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"8293:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8283:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8301:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":906,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8315:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8301:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8283:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"8283:38:6"},{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":910,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8498:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":912,"indexExpression":{"id":911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8508:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8498:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8515:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8498:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"nodeType":"ExpressionStatement","src":"8498:23:6"}]},{"eventCall":{"arguments":[{"id":918,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"8556:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8562:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8566:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":917,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"8547:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8547:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"EmitStatement","src":"8542:31:6"},{"expression":{"arguments":[{"id":924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"8604:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8610:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8614:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"8584:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"8584:37:6"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"7362:443:6","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7819:9:6","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"from","nameLocation":"7846:4:6","nodeType":"VariableDeclaration","scope":930,"src":"7838:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"7838:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"to","nameLocation":"7868:2:6","nodeType":"VariableDeclaration","scope":930,"src":"7860:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"amount","nameLocation":"7888:6:6","nodeType":"VariableDeclaration","scope":930,"src":"7880:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"7880:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7828:72:6"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"7918:0:6"},"scope":1175,"src":"7810:818:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"8969:470:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"8987:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8998:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:6","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8998:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8987:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9010:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8979:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8979:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"8979:65:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9076:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:6","typeDescriptions":{}}},"id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9088:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9097:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":948,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"9055:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9055:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"9055:49:6"},{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"9115:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9131:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9115:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":960,"nodeType":"ExpressionStatement","src":"9115:22:6"},{"id":967,"nodeType":"UncheckedBlock","src":"9147:175:6","statements":[{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":961,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9283:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":963,"indexExpression":{"id":962,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9293:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9283:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9305:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9283:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"nodeType":"ExpressionStatement","src":"9283:28:6"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9353:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9345:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"9345:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9345:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9357:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9366:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":968,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"9336:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9336:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"EmitStatement","src":"9331:42:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"9404:7:6","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9404:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9416:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9425:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":977,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"9384:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9384:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"9384:48:6"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"8634:265:6","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8913:5:6","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"account","nameLocation":"8927:7:6","nodeType":"VariableDeclaration","scope":987,"src":"8919:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"8919:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"amount","nameLocation":"8944:6:6","nodeType":"VariableDeclaration","scope":987,"src":"8936:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8918:33:6"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"8969:0:6"},"scope":1175,"src":"8904:535:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"9824:594:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"9842:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9853:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"9853:7:6","typeDescriptions":{}}},"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9853:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9842:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9865:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9834:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9834:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"9834:67:6"},{"expression":{"arguments":[{"id":1006,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"9933:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9942:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"9942:7:6","typeDescriptions":{}}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9942:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"9954:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1005,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"9912:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9912:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1013,"nodeType":"ExpressionStatement","src":"9912:49:6"},{"assignments":[1015],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"accountBalance","nameLocation":"9980:14:6","nodeType":"VariableDeclaration","scope":1058,"src":"9972:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1019,"initialValue":{"baseExpression":{"id":1016,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9997:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1018,"indexExpression":{"id":1017,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10007:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9997:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9972:43:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10033:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1022,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10051:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10059:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10025:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10025:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"10025:71:6"},{"id":1039,"nodeType":"UncheckedBlock","src":"10106:194:6","statements":[{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1027,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"10130:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1029,"indexExpression":{"id":1028,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10140:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10130:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10151:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1031,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10168:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10151:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10130:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"10130:44:6"},{"expression":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1035,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"10267:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1036,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10283:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10267:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1038,"nodeType":"ExpressionStatement","src":"10267:22:6"}]},{"eventCall":{"arguments":[{"id":1041,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10324:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10341:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:6","typeDescriptions":{}}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10333:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10345:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1040,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"10315:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10315:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"EmitStatement","src":"10310:42:6"},{"expression":{"arguments":[{"id":1050,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10383:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10392:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"10392:7:6","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10392:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10404:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1049,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"10363:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10363:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"10363:48:6"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"9445:309:6","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9768:5:6","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"account","nameLocation":"9782:7:6","nodeType":"VariableDeclaration","scope":1059,"src":"9774:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"9774:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"amount","nameLocation":"9799:6:6","nodeType":"VariableDeclaration","scope":1059,"src":"9791:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"9791:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9773:33:6"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"9824:0:6"},"scope":1175,"src":"9759:659:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"10954:257:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"10972:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10989:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10981:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"10981:7:6","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10981:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10972:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10993:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10964:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10964:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"10964:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11050:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11069:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11061:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:6","typeDescriptions":{}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11061:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11050:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11073:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11042:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"11042:68:6"},{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1089,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11121:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1092,"indexExpression":{"id":1090,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"11133:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11121:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1093,"indexExpression":{"id":1091,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11140:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11121:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"11151:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11121:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"nodeType":"ExpressionStatement","src":"11121:36:6"},{"eventCall":{"arguments":[{"id":1098,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"11181:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11188:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1100,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"11197:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1097,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"11172:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11172:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"EmitStatement","src":"11167:37:6"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"10424:412:6","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10850:8:6","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"owner","nameLocation":"10876:5:6","nodeType":"VariableDeclaration","scope":1104,"src":"10868:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"10868:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"spender","nameLocation":"10899:7:6","nodeType":"VariableDeclaration","scope":1104,"src":"10891:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"10891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"amount","nameLocation":"10924:6:6","nodeType":"VariableDeclaration","scope":1104,"src":"10916:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"10916:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10858:78:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"10954:0:6"},"scope":1175,"src":"10841:370:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"11612:321:6","statements":[{"assignments":[1115],"declarations":[{"constant":false,"id":1115,"mutability":"mutable","name":"currentAllowance","nameLocation":"11630:16:6","nodeType":"VariableDeclaration","scope":1146,"src":"11622:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"11622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1120,"initialValue":{"arguments":[{"id":1117,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"11659:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"11666:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1116,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"11649:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11649:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11622:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"11688:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11713:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11713:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1122,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11708:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11708:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11708:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11688:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"IfStatement","src":"11684:243:6","trueBody":{"id":1144,"nodeType":"Block","src":"11727:200:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"11749:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1130,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"11769:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11749:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11777:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11741:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11741:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"ExpressionStatement","src":"11741:68:6"},{"id":1143,"nodeType":"UncheckedBlock","src":"11823:94:6","statements":[{"expression":{"arguments":[{"id":1136,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"11860:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"11867:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"11876:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"11895:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11876:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1135,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"11851:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"11851:51:6"}]}]}}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"11217:270:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11501:15:6","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"owner","nameLocation":"11534:5:6","nodeType":"VariableDeclaration","scope":1147,"src":"11526:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"11526:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"spender","nameLocation":"11557:7:6","nodeType":"VariableDeclaration","scope":1147,"src":"11549:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"11549:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"amount","nameLocation":"11582:6:6","nodeType":"VariableDeclaration","scope":1147,"src":"11574:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"11574:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11516:78:6"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"11612:0:6"},"scope":1175,"src":"11492:441:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"12636:2:6","statements":[]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"11939:573:6","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12526:20:6","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"from","nameLocation":"12564:4:6","nodeType":"VariableDeclaration","scope":1158,"src":"12556:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"12556:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"to","nameLocation":"12586:2:6","nodeType":"VariableDeclaration","scope":1158,"src":"12578:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"12578:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"amount","nameLocation":"12606:6:6","nodeType":"VariableDeclaration","scope":1158,"src":"12598:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"12598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12546:72:6"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"12636:0:6"},"scope":1175,"src":"12517:121:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"13344:2:6","statements":[]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"12644:577:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13235:19:6","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"from","nameLocation":"13272:4:6","nodeType":"VariableDeclaration","scope":1169,"src":"13264:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"13264:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"to","nameLocation":"13294:2:6","nodeType":"VariableDeclaration","scope":1169,"src":"13286:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"13286:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"amount","nameLocation":"13314:6:6","nodeType":"VariableDeclaration","scope":1169,"src":"13306:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"13306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13254:72:6"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"13344:0:6"},"scope":1175,"src":"13226:120:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"13352:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1174,"mutability":"mutable","name":"__gap","nameLocation":"13631:5:6","nodeType":"VariableDeclaration","scope":1175,"src":"13611:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"13611:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"length":{"hexValue":"3435","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13619:2:6","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13611:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1176,"src":"1480:12159:6","usedErrors":[]}],"src":"105:13535:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1253]},"id":1254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1177,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1253,"linearizedBaseContracts":[1253],"name":"IERC20Upgradeable","nameLocation":"212:17:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"236:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1187,"name":"Transfer","nameLocation":"405:8:7","nodeType":"EventDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:7","nodeType":"VariableDeclaration","scope":1187,"src":"414:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:7","nodeType":"VariableDeclaration","scope":1187,"src":"436:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:7","nodeType":"VariableDeclaration","scope":1187,"src":"456:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:7"},"src":"399:72:7"},{"anonymous":false,"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"477:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1196,"name":"Approval","nameLocation":"636:8:7","nodeType":"EventDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:7","nodeType":"VariableDeclaration","scope":1196,"src":"645:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:7","nodeType":"VariableDeclaration","scope":1196,"src":"668:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:7","nodeType":"VariableDeclaration","scope":1196,"src":"693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:7"},"src":"630:78:7"},{"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"714:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:7","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"805:2:7"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"831:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:7"},"scope":1253,"src":"785:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"846:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1210,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:7","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"account","nameLocation":"950:7:7","nodeType":"VariableDeclaration","scope":1210,"src":"942:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:7"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1210,"src":"982:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:7"},"scope":1253,"src":"923:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"997:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1220,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":1220,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"amount","nameLocation":"1242:6:7","nodeType":"VariableDeclaration","scope":1220,"src":"1234:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:7"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"1268:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1217,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:7"},"scope":1253,"src":"1204:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"1280:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1230,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"owner","nameLocation":"1576:5:7","nodeType":"VariableDeclaration","scope":1230,"src":"1568:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"spender","nameLocation":"1591:7:7","nodeType":"VariableDeclaration","scope":1230,"src":"1583:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"1623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:7"},"scope":1253,"src":"1549:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"1638:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1240,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:7","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"spender","nameLocation":"2310:7:7","nodeType":"VariableDeclaration","scope":1240,"src":"2302:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"amount","nameLocation":"2327:6:7","nodeType":"VariableDeclaration","scope":1240,"src":"2319:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:7"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"2353:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1237,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:7"},"scope":1253,"src":"2285:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"2365:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1252,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:7","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"from","nameLocation":"2696:4:7","nodeType":"VariableDeclaration","scope":1252,"src":"2688:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"to","nameLocation":"2718:2:7","nodeType":"VariableDeclaration","scope":1252,"src":"2710:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"amount","nameLocation":"2738:6:7","nodeType":"VariableDeclaration","scope":1252,"src":"2730:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:7"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"2769:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1249,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:7"},"scope":1253,"src":"2657:118:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1254,"src":"202:2575:7","usedErrors":[]}],"src":"106:2672:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"ERC20BurnableUpgradeable":[1317],"ERC20Upgradeable":[1175],"IERC20MetadataUpgradeable":[2645],"IERC20Upgradeable":[1253],"Initializable":[436]},"id":1318,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1255,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1318,"sourceUnit":1176,"src":"149:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1318,"sourceUnit":3355,"src":"183:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1318,"sourceUnit":437,"src":"231:48:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1260,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"536:13:8"},"id":1261,"nodeType":"InheritanceSpecifier","src":"536:13:8"},{"baseName":{"id":1262,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3354,"src":"551:18:8"},"id":1263,"nodeType":"InheritanceSpecifier","src":"551:18:8"},{"baseName":{"id":1264,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"571:16:8"},"id":1265,"nodeType":"InheritanceSpecifier","src":"571:16:8"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"281:208:8","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1317,"linearizedBaseContracts":[1317,1175,2645,1253,3354,436],"name":"ERC20BurnableUpgradeable","nameLocation":"508:24:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1270,"nodeType":"Block","src":"652:7:8","statements":[]},"id":1271,"implemented":true,"kind":"function","modifiers":[{"id":1268,"kind":"modifierInvocation","modifierName":{"id":1267,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"635:16:8"},"nodeType":"ModifierInvocation","src":"635:16:8"}],"name":"__ERC20Burnable_init","nameLocation":"603:20:8","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"623:2:8"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"652:0:8"},"scope":1317,"src":"594:65:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1276,"nodeType":"Block","src":"733:7:8","statements":[]},"id":1277,"implemented":true,"kind":"function","modifiers":[{"id":1274,"kind":"modifierInvocation","modifierName":{"id":1273,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"716:16:8"},"nodeType":"ModifierInvocation","src":"716:16:8"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"674:30:8","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"704:2:8"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[],"src":"733:0:8"},"scope":1317,"src":"665:75:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"893:44:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1284,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"909:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"909:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"923:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1283,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"903:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1288,"nodeType":"ExpressionStatement","src":"903:27:8"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"745:98:8","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"857:4:8","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"amount","nameLocation":"870:6:8","nodeType":"VariableDeclaration","scope":1290,"src":"862:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:16:8"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"893:0:8"},"scope":1317,"src":"848:89:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1310,"nodeType":"Block","src":"1309:95:8","statements":[{"expression":{"arguments":[{"id":1299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1335:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1300,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"1344:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1344:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1358:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1298,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1319:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1319:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"ExpressionStatement","src":"1319:46:8"},{"expression":{"arguments":[{"id":1306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1381:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1390:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1375:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1375:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"ExpressionStatement","src":"1375:22:8"}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"943:295:8","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1252:8:8","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"account","nameLocation":"1269:7:8","nodeType":"VariableDeclaration","scope":1311,"src":"1261:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"amount","nameLocation":"1286:6:8","nodeType":"VariableDeclaration","scope":1311,"src":"1278:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:33:8"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[],"src":"1309:0:8"},"scope":1317,"src":"1243:161:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"1410:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1316,"mutability":"mutable","name":"__gap","nameLocation":"1689:5:8","nodeType":"VariableDeclaration","scope":1317,"src":"1669:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1315,"length":{"hexValue":"3530","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1669:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1318,"src":"490:1207:8","usedErrors":[]}],"src":"124:1574:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"ERC20FlashMintUpgradeable":[1554],"ERC20Upgradeable":[1175],"IERC20MetadataUpgradeable":[2645],"IERC20Upgradeable":[1253],"IERC3156FlashBorrowerUpgradeable":[229],"IERC3156FlashLenderUpgradeable":[267],"Initializable":[436]},"id":1555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1319,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol","file":"../../../interfaces/IERC3156FlashBorrowerUpgradeable.sol","id":1320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1555,"sourceUnit":230,"src":"150:66:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol","file":"../../../interfaces/IERC3156FlashLenderUpgradeable.sol","id":1321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1555,"sourceUnit":268,"src":"217:64:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1555,"sourceUnit":1176,"src":"282:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1555,"sourceUnit":437,"src":"316:48:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1325,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"750:13:9"},"id":1326,"nodeType":"InheritanceSpecifier","src":"750:13:9"},{"baseName":{"id":1327,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"765:16:9"},"id":1328,"nodeType":"InheritanceSpecifier","src":"765:16:9"},{"baseName":{"id":1329,"name":"IERC3156FlashLenderUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":267,"src":"783:30:9"},"id":1330,"nodeType":"InheritanceSpecifier","src":"783:30:9"}],"canonicalName":"ERC20FlashMintUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"366:336:9","text":" @dev Implementation of the ERC3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n _Available since v4.1._"},"fullyImplemented":true,"id":1554,"linearizedBaseContracts":[1554,267,1175,2645,1253,3354,436],"name":"ERC20FlashMintUpgradeable","nameLocation":"721:25:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1335,"nodeType":"Block","src":"879:7:9","statements":[]},"id":1336,"implemented":true,"kind":"function","modifiers":[{"id":1333,"kind":"modifierInvocation","modifierName":{"id":1332,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"862:16:9"},"nodeType":"ModifierInvocation","src":"862:16:9"}],"name":"__ERC20FlashMint_init","nameLocation":"829:21:9","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"850:2:9"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"879:0:9"},"scope":1554,"src":"820:66:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1341,"nodeType":"Block","src":"961:7:9","statements":[]},"id":1342,"implemented":true,"kind":"function","modifiers":[{"id":1339,"kind":"modifierInvocation","modifierName":{"id":1338,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"944:16:9"},"nodeType":"ModifierInvocation","src":"944:16:9"}],"name":"__ERC20FlashMint_init_unchained","nameLocation":"901:31:9","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"932:2:9"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"961:0:9"},"scope":1554,"src":"892:76:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":1347,"mutability":"constant","name":"_RETURN_VALUE","nameLocation":"998:13:9","nodeType":"VariableDeclaration","scope":1554,"src":"973:86:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1024:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1344,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1014:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"baseFunctions":[241],"body":{"id":1374,"nodeType":"Block","src":"1354:103:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"1371:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1359,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1388:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1554","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1554","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1380:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"1380:7:9","typeDescriptions":{}}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1380:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1371:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1371:79:9","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1401:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1362,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1396:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1396:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1396:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1367,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"1416:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Upgradeable_$1175_$","typeString":"type(contract ERC20Upgradeable)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":668,"src":"1416:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1416:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:50:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1355,"id":1373,"nodeType":"Return","src":"1364:86:9"}]},"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1066:199:9","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned."},"functionSelector":"613255ab","id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"1279:12:9","nodeType":"FunctionDefinition","overrides":{"id":1352,"nodeType":"OverrideSpecifier","overrides":[],"src":"1327:8:9"},"parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"token","nameLocation":"1300:5:9","nodeType":"VariableDeclaration","scope":1375,"src":"1292:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1291:15:9"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"1345:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:9:9"},"scope":1554,"src":"1270:187:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[251],"body":{"id":1401,"nodeType":"Block","src":"1919:120:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"1937:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1390,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1954:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1554","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1554","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1946:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:9","typeDescriptions":{}}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1946:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1937:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230466c6173684d696e743a2077726f6e6720746f6b656e","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1961:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30","typeString":"literal_string \"ERC20FlashMint: wrong token\""},"value":"ERC20FlashMint: wrong token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30","typeString":"literal_string \"ERC20FlashMint: wrong token\""}],"id":1386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1929:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"1929:62:9"},{"expression":{"arguments":[{"id":1397,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2018:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"2025:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2008:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1385,"id":1400,"nodeType":"Return","src":"2001:31:9"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"1463:355:9","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param amount The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"1832:8:9","nodeType":"FunctionDefinition","overrides":{"id":1382,"nodeType":"OverrideSpecifier","overrides":[],"src":"1892:8:9"},"parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"token","nameLocation":"1849:5:9","nodeType":"VariableDeclaration","scope":1402,"src":"1841:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"amount","nameLocation":"1864:6:9","nodeType":"VariableDeclaration","scope":1402,"src":"1856:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1856:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:31:9"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"1910:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1909:9:9"},"scope":1554,"src":"1823:216:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1418,"nodeType":"Block","src":"2518:139:9","statements":[{"expression":{"id":1412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2611:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1413,"nodeType":"ExpressionStatement","src":"2611:5:9"},{"expression":{"id":1414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2626:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1415,"nodeType":"ExpressionStatement","src":"2626:6:9"},{"expression":{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2649:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1411,"id":1417,"nodeType":"Return","src":"2642:8:9"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"2045:378:9","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param amount The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1419,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"2437:9:9","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"token","nameLocation":"2455:5:9","nodeType":"VariableDeclaration","scope":1419,"src":"2447:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"amount","nameLocation":"2470:6:9","nodeType":"VariableDeclaration","scope":1419,"src":"2462:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2446:31:9"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1419,"src":"2509:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2508:9:9"},"scope":1554,"src":"2428:229:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"3045:34:9","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3062:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:9","typeDescriptions":{}}},"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3062:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1424,"id":1429,"nodeType":"Return","src":"3055:17:9"}]},"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"2663:308:9","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"2985:17:9","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"3002:2:9"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"3036:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"3036:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3035:9:9"},"scope":1554,"src":"2976:103:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[266],"body":{"id":1547,"nodeType":"Block","src":"4327:757:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4345:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":1450,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4368:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1449,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"4355:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4345:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230466c6173684d696e743a20616d6f756e742065786365656473206d6178466c6173684c6f616e","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4376:45:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9","typeString":"literal_string \"ERC20FlashMint: amount exceeds maxFlashLoan\""},"value":"ERC20FlashMint: amount exceeds maxFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9","typeString":"literal_string \"ERC20FlashMint: amount exceeds maxFlashLoan\""}],"id":1447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4337:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4337:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"ExpressionStatement","src":"4337:85:9"},{"assignments":[1457],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"fee","nameLocation":"4440:3:9","nodeType":"VariableDeclaration","scope":1547,"src":"4432:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4432:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1462,"initialValue":{"arguments":[{"id":1459,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4455:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4462:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1458,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"4446:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4432:37:9"},{"expression":{"arguments":[{"arguments":[{"id":1466,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4493:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}],"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4485:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:9","typeDescriptions":{}}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4485:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4504:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"4479:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4479:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"4479:32:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4563:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4563:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1476,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4575:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4582:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1478,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4590:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4595:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1472,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4542:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":228,"src":"4542:20:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4542:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1481,"name":"_RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"4604:13:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4542:75:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230466c6173684d696e743a20696e76616c69642072657475726e2076616c7565","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4631:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb","typeString":"literal_string \"ERC20FlashMint: invalid return value\""},"value":"ERC20FlashMint: invalid return value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb","typeString":"literal_string \"ERC20FlashMint: invalid return value\""}],"id":1471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4521:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4521:158:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"4521:158:9"},{"assignments":[1487],"declarations":[{"constant":false,"id":1487,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"4697:16:9","nodeType":"VariableDeclaration","scope":1547,"src":"4689:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1490,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1488,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4716:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4716:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4689:46:9"},{"expression":{"arguments":[{"arguments":[{"id":1494,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4769:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4761:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"4761:7:9","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4761:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1498,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4788:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1554","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1554","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4780:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"4780:7:9","typeDescriptions":{}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4780:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4795:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1501,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4804:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4795:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1491,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"4745:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4745:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"ExpressionStatement","src":"4745:63:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4822:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4829:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4822:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1508,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"4834:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4854:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:9","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4854:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4834:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4822:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1543,"nodeType":"Block","src":"4935:122:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1529,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4963:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4955:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"4955:7:9","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4955:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1526,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4949:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4949:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"4949:32:9"},{"expression":{"arguments":[{"arguments":[{"id":1537,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"5013:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5005:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"5005:7:9","typeDescriptions":{}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5005:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1539,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"5024:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1540,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"5042:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1534,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4995:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4995:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"4995:51:9"}]},"id":1544,"nodeType":"IfStatement","src":"4818:239:9","trueBody":{"id":1525,"nodeType":"Block","src":"4866:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1518,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4894:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4886:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"4886:7:9","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4886:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4905:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1521,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4914:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4905:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1515,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4880:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4880:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"ExpressionStatement","src":"4880:38:9"}]}},{"expression":{"hexValue":"74727565","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5073:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1446,"id":1546,"nodeType":"Return","src":"5066:11:9"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"3085:762:9","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n amount + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param amount The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":1548,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"4145:9:9","nodeType":"FunctionDefinition","overrides":{"id":1443,"nodeType":"OverrideSpecifier","overrides":[],"src":"4303:8:9"},"parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"receiver","nameLocation":"4197:8:9","nodeType":"VariableDeclaration","scope":1548,"src":"4164:41:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"},"typeName":{"id":1434,"nodeType":"UserDefinedTypeName","pathNode":{"id":1433,"name":"IERC3156FlashBorrowerUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":229,"src":"4164:32:9"},"referencedDeclaration":229,"src":"4164:32:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrowerUpgradeable_$229","typeString":"contract IERC3156FlashBorrowerUpgradeable"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"token","nameLocation":"4223:5:9","nodeType":"VariableDeclaration","scope":1548,"src":"4215:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"4215:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"amount","nameLocation":"4246:6:9","nodeType":"VariableDeclaration","scope":1548,"src":"4238:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"4238:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"data","nameLocation":"4277:4:9","nodeType":"VariableDeclaration","scope":1548,"src":"4262:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1440,"name":"bytes","nodeType":"ElementaryTypeName","src":"4262:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4154:133:9"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1548,"src":"4321:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"4321:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4320:6:9"},"scope":1554,"src":"4136:948:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"5090:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1553,"mutability":"mutable","name":"__gap","nameLocation":"5369:5:9","nodeType":"VariableDeclaration","scope":1554,"src":"5349:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"5349:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1552,"length":{"hexValue":"3530","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5357:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"5349:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1555,"src":"703:4674:9","usedErrors":[]}],"src":"125:5253:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ArraysUpgradeable":[3312],"ContextUpgradeable":[3354],"CountersUpgradeable":[3428],"ERC20SnapshotUpgradeable":[1902],"ERC20Upgradeable":[1175],"IERC20MetadataUpgradeable":[2645],"IERC20Upgradeable":[1253],"Initializable":[436],"MathUpgradeable":[5039],"StorageSlotUpgradeable":[3488]},"id":1903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1556,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1903,"sourceUnit":1176,"src":"149:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol","file":"../../../utils/ArraysUpgradeable.sol","id":1558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1903,"sourceUnit":3313,"src":"183:46:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":1559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1903,"sourceUnit":3429,"src":"230:48:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1903,"sourceUnit":437,"src":"279:48:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1562,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"2530:13:10"},"id":1563,"nodeType":"InheritanceSpecifier","src":"2530:13:10"},{"baseName":{"id":1564,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"2545:16:10"},"id":1565,"nodeType":"InheritanceSpecifier","src":"2545:16:10"}],"canonicalName":"ERC20SnapshotUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"329:2153:10","text":" @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n total supply at the time are recorded for later access.\n This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n used to create an efficient ERC20 forking mechanism.\n Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n and the account address.\n NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n alternative consider {ERC20Votes}.\n ==== Gas Costs\n Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n smaller since identical balances in subsequent snapshots are stored as a single entry.\n There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n transfers will have normal cost until the next snapshot, and so on."},"fullyImplemented":true,"id":1902,"linearizedBaseContracts":[1902,1175,2645,1253,3354,436],"name":"ERC20SnapshotUpgradeable","nameLocation":"2502:24:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1570,"nodeType":"Block","src":"2626:7:10","statements":[]},"id":1571,"implemented":true,"kind":"function","modifiers":[{"id":1568,"kind":"modifierInvocation","modifierName":{"id":1567,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2609:16:10"},"nodeType":"ModifierInvocation","src":"2609:16:10"}],"name":"__ERC20Snapshot_init","nameLocation":"2577:20:10","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[],"src":"2597:2:10"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"2626:0:10"},"scope":1902,"src":"2568:65:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"2707:7:10","statements":[]},"id":1577,"implemented":true,"kind":"function","modifiers":[{"id":1574,"kind":"modifierInvocation","modifierName":{"id":1573,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2690:16:10"},"nodeType":"ModifierInvocation","src":"2690:16:10"}],"name":"__ERC20Snapshot_init_unchained","nameLocation":"2648:30:10","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[],"src":"2678:2:10"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"2707:0:10"},"scope":1902,"src":"2639:75:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1581,"libraryName":{"id":1578,"name":"ArraysUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"2916:17:10"},"nodeType":"UsingForDirective","src":"2910:38:10","typeName":{"baseType":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1580,"nodeType":"ArrayTypeName","src":"2938:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"id":1585,"libraryName":{"id":1582,"name":"CountersUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"2959:19:10"},"nodeType":"UsingForDirective","src":"2953:58:10","typeName":{"id":1584,"nodeType":"UserDefinedTypeName","pathNode":{"id":1583,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"2983:27:10"},"referencedDeclaration":3360,"src":"2983:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"canonicalName":"ERC20SnapshotUpgradeable.Snapshots","id":1592,"members":[{"constant":false,"id":1588,"mutability":"mutable","name":"ids","nameLocation":"3256:3:10","nodeType":"VariableDeclaration","scope":1592,"src":"3246:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ArrayTypeName","src":"3246:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"values","nameLocation":"3279:6:10","nodeType":"VariableDeclaration","scope":1592,"src":"3269:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1590,"nodeType":"ArrayTypeName","src":"3269:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Snapshots","nameLocation":"3226:9:10","nodeType":"StructDefinition","scope":1902,"src":"3219:73:10","visibility":"public"},{"constant":false,"id":1597,"mutability":"mutable","name":"_accountBalanceSnapshots","nameLocation":"3336:24:10","nodeType":"VariableDeclaration","scope":1902,"src":"3298:62:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1592_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"},"typeName":{"id":1596,"keyType":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"3306:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3298:29:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1592_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"},"valueType":{"id":1595,"nodeType":"UserDefinedTypeName","pathNode":{"id":1594,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"3317:9:10"},"referencedDeclaration":1592,"src":"3317:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}}},"visibility":"private"},{"constant":false,"id":1600,"mutability":"mutable","name":"_totalSupplySnapshots","nameLocation":"3384:21:10","nodeType":"VariableDeclaration","scope":1902,"src":"3366:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"},"typeName":{"id":1599,"nodeType":"UserDefinedTypeName","pathNode":{"id":1598,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"3366:9:10"},"referencedDeclaration":1592,"src":"3366:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}},"visibility":"private"},{"constant":false,"id":1603,"mutability":"mutable","name":"_currentSnapshotId","nameLocation":"3545:18:10","nodeType":"VariableDeclaration","scope":1902,"src":"3509:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1602,"nodeType":"UserDefinedTypeName","pathNode":{"id":1601,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"3509:27:10"},"referencedDeclaration":3360,"src":"3509:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"3570:93:10","text":" @dev Emitted by {_snapshot} when a snapshot identified by `id` is created."},"id":1608,"name":"Snapshot","nameLocation":"3674:8:10","nodeType":"EventDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"3691:2:10","nodeType":"VariableDeclaration","scope":1608,"src":"3683:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3682:12:10"},"src":"3668:27:10"},{"body":{"id":1630,"nodeType":"Block","src":"4858:161:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1614,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"4868:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":1616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"4868:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3360_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3360_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4868:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"4868:30:10"},{"assignments":[1620],"declarations":[{"constant":false,"id":1620,"mutability":"mutable","name":"currentId","nameLocation":"4917:9:10","nodeType":"VariableDeclaration","scope":1630,"src":"4909:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1623,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1621,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4929:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4929:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4909:43:10"},{"eventCall":{"arguments":[{"id":1625,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"4976:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"name":"Snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"4967:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4967:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"EmitStatement","src":"4962:24:10"},{"expression":{"id":1628,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"5003:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1613,"id":1629,"nodeType":"Return","src":"4996:16:10"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"3701:1096:10","text":" @dev Creates a new snapshot and returns its snapshot id.\n Emits a {Snapshot} event that contains the same id.\n {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n set of accounts, for example using {AccessControl}, or it may be open to the public.\n [WARNING]\n ====\n While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n you must consider that it can potentially be used by attackers in two ways.\n First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n section above.\n We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n ===="},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"_snapshot","nameLocation":"4811:9:10","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"4820:2:10"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"4849:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"4849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4848:9:10"},"scope":1902,"src":"4802:217:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1641,"nodeType":"Block","src":"5153:52:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1637,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"5170:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"5170:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3360_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3360_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5170:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1636,"id":1640,"nodeType":"Return","src":"5163:35:10"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"5025:50:10","text":" @dev Get the current snapshotId"},"id":1642,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentSnapshotId","nameLocation":"5089:21:10","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"5110:2:10"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1642,"src":"5144:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"5144:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5143:9:10"},"scope":1902,"src":"5080:125:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1670,"nodeType":"Block","src":"5408:166:10","statements":[{"assignments":[1653,1655],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"snapshotted","nameLocation":"5424:11:10","nodeType":"VariableDeclaration","scope":1670,"src":"5419:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1652,"name":"bool","nodeType":"ElementaryTypeName","src":"5419:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"value","nameLocation":"5445:5:10","nodeType":"VariableDeclaration","scope":1670,"src":"5437:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"5437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1662,"initialValue":{"arguments":[{"id":1657,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5463:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1658,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"5475:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1592_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots storage ref)"}},"id":1660,"indexExpression":{"id":1659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5500:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}],"id":1656,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"5454:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$1592_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20SnapshotUpgradeable.Snapshots storage pointer) view returns (bool,uint256)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5454:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5418:91:10"},{"expression":{"condition":{"id":1663,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"5527:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1666,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5559:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5549:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5549:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5527:40:10","trueExpression":{"id":1664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"5541:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1651,"id":1669,"nodeType":"Return","src":"5520:47:10"}]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"5211:96:10","text":" @dev Retrieves the balance of `account` at the time `snapshotId` was created."},"functionSelector":"4ee2cd7e","id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfAt","nameLocation":"5321:11:10","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"account","nameLocation":"5341:7:10","nodeType":"VariableDeclaration","scope":1671,"src":"5333:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"snapshotId","nameLocation":"5358:10:10","nodeType":"VariableDeclaration","scope":1671,"src":"5350:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"5350:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5332:37:10"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"5399:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"5399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5398:9:10"},"scope":1902,"src":"5312:262:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1694,"nodeType":"Block","src":"5754:149:10","statements":[{"assignments":[1680,1682],"declarations":[{"constant":false,"id":1680,"mutability":"mutable","name":"snapshotted","nameLocation":"5770:11:10","nodeType":"VariableDeclaration","scope":1694,"src":"5765:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1679,"name":"bool","nodeType":"ElementaryTypeName","src":"5765:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"value","nameLocation":"5791:5:10","nodeType":"VariableDeclaration","scope":1694,"src":"5783:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5783:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1687,"initialValue":{"arguments":[{"id":1684,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"5809:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1685,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"5821:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}],"id":1683,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"5800:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$1592_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20SnapshotUpgradeable.Snapshots storage pointer) view returns (bool,uint256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5800:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5764:79:10"},{"expression":{"condition":{"id":1688,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"5861:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1690,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"5883:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5883:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5861:35:10","trueExpression":{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5875:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1678,"id":1693,"nodeType":"Return","src":"5854:42:10"}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"5580:88:10","text":" @dev Retrieves the total supply at the time `snapshotId` was created."},"functionSelector":"981b24d0","id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupplyAt","nameLocation":"5682:13:10","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"snapshotId","nameLocation":"5704:10:10","nodeType":"VariableDeclaration","scope":1695,"src":"5696:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5695:20:10"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1695,"src":"5745:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"5745:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5744:9:10"},"scope":1902,"src":"5673:230:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1158],"body":{"id":1752,"nodeType":"Block","src":"6244:474:10","statements":[{"expression":{"arguments":[{"id":1708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6281:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6287:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"6291:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1705,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6254:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20SnapshotUpgradeable_$1902_$","typeString":"type(contract super ERC20SnapshotUpgradeable)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1158,"src":"6254:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6254:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1712,"nodeType":"ExpressionStatement","src":"6254:44:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6313:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6329:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6321:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"6321:7:10","typeDescriptions":{}}},"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6321:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6313:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6456:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6470:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6462:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"6462:7:10","typeDescriptions":{}}},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6462:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6456:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1749,"nodeType":"Block","src":"6595:117:10","statements":[{"expression":{"arguments":[{"id":1742,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6656:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1741,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6633:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6633:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"6633:28:10"},{"expression":{"arguments":[{"id":1746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6698:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1745,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6675:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6675:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1748,"nodeType":"ExpressionStatement","src":"6675:26:10"}]},"id":1750,"nodeType":"IfStatement","src":"6452:260:10","trueBody":{"id":1740,"nodeType":"Block","src":"6474:115:10","statements":[{"expression":{"arguments":[{"id":1734,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6531:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1733,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6508:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6508:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"6508:28:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1737,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6550:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6550:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"6550:28:10"}]}},"id":1751,"nodeType":"IfStatement","src":"6309:403:10","trueBody":{"id":1726,"nodeType":"Block","src":"6333:113:10","statements":[{"expression":{"arguments":[{"id":1720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6390:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1719,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6367:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6367:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"ExpressionStatement","src":"6367:26:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1723,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6407:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6407:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1725,"nodeType":"ExpressionStatement","src":"6407:28:10"}]}}]},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"6125:20:10","nodeType":"FunctionDefinition","overrides":{"id":1703,"nodeType":"OverrideSpecifier","overrides":[],"src":"6235:8:10"},"parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"from","nameLocation":"6163:4:10","nodeType":"VariableDeclaration","scope":1753,"src":"6155:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"6155:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"to","nameLocation":"6185:2:10","nodeType":"VariableDeclaration","scope":1753,"src":"6177:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"6177:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"amount","nameLocation":"6205:6:10","nodeType":"VariableDeclaration","scope":1753,"src":"6197:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"6197:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6145:72:10"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"6244:0:10"},"scope":1902,"src":"6116:602:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1807,"nodeType":"Block","src":"6828:1490:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6846:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6859:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6846:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a2069642069732030","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6862:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""},"value":"ERC20Snapshot: id is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""}],"id":1765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6838:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6838:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"ExpressionStatement","src":"6838:49:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6905:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1774,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6919:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6919:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6905:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a206e6f6e6578697374656e74206964","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6944:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""},"value":"ERC20Snapshot: nonexistent id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""}],"id":1772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6897:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6897:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"6897:79:10"},{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"index","nameLocation":"8107:5:10","nodeType":"VariableDeclaration","scope":1807,"src":"8099:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"8099:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1787,"initialValue":{"arguments":[{"id":1785,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"8144:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1782,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8115:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":1783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"8115:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"findUpperBound","nodeType":"MemberAccess","referencedDeclaration":3248,"src":"8115:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) view returns (uint256)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8115:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8099:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8170:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1789,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8179:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":1790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"8179:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8179:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8170:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1805,"nodeType":"Block","src":"8249:63:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8271:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"expression":{"id":1799,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8277:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":1800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":1591,"src":"8277:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1802,"indexExpression":{"id":1801,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8294:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8277:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8270:31:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1764,"id":1804,"nodeType":"Return","src":"8263:38:10"}]},"id":1806,"nodeType":"IfStatement","src":"8166:146:10","trueBody":{"id":1797,"nodeType":"Block","src":"8201:42:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8223:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8230:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8222:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1764,"id":1796,"nodeType":"Return","src":"8215:17:10"}]}}]},"id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"_valueAt","nameLocation":"6733:8:10","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"snapshotId","nameLocation":"6750:10:10","nodeType":"VariableDeclaration","scope":1808,"src":"6742:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"6742:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"snapshots","nameLocation":"6780:9:10","nodeType":"VariableDeclaration","scope":1808,"src":"6762:27:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"},"typeName":{"id":1757,"nodeType":"UserDefinedTypeName","pathNode":{"id":1756,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"6762:9:10"},"referencedDeclaration":1592,"src":"6762:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}},"visibility":"internal"}],"src":"6741:49:10"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"6813:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1760,"name":"bool","nodeType":"ElementaryTypeName","src":"6813:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"6819:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"6819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6812:15:10"},"scope":1902,"src":"6724:1594:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1822,"nodeType":"Block","src":"8381:87:10","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1814,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"8407:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1592_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots storage ref)"}},"id":1816,"indexExpression":{"id":1815,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"8432:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8407:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}},{"arguments":[{"id":1818,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"8452:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1817,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8442:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8442:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1813,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"8391:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$1592_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20SnapshotUpgradeable.Snapshots storage pointer,uint256)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8391:70:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"ExpressionStatement","src":"8391:70:10"}]},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAccountSnapshot","nameLocation":"8333:22:10","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"account","nameLocation":"8364:7:10","nodeType":"VariableDeclaration","scope":1823,"src":"8356:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8355:17:10"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"8381:0:10"},"scope":1902,"src":"8324:144:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1832,"nodeType":"Block","src":"8520:70:10","statements":[{"expression":{"arguments":[{"id":1827,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8546:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1828,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"8569:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8569:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$1592_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1826,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"8530:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$1592_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20SnapshotUpgradeable.Snapshots storage pointer,uint256)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8530:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"ExpressionStatement","src":"8530:53:10"}]},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"_updateTotalSupplySnapshot","nameLocation":"8483:26:10","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"8509:2:10"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"8520:0:10"},"scope":1902,"src":"8474:116:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1870,"nodeType":"Block","src":"8680:220:10","statements":[{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"currentId","nameLocation":"8698:9:10","nodeType":"VariableDeclaration","scope":1870,"src":"8690:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"8690:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1843,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"8710:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8710:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8690:43:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1847,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8763:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":1848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"8763:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"id":1846,"name":"_lastSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"8747:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] storage pointer) view returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1850,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"8780:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"8743:151:10","trueBody":{"id":1868,"nodeType":"Block","src":"8791:103:10","statements":[{"expression":{"arguments":[{"id":1857,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"8824:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1852,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8805:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":1855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"8805:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8805:18:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8805:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1859,"nodeType":"ExpressionStatement","src":"8805:29:10"},{"expression":{"arguments":[{"id":1865,"name":"currentValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8870:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1860,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8848:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":1863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":1591,"src":"8848:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8848:21:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8848:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"ExpressionStatement","src":"8848:35:10"}]}}]},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"_updateSnapshot","nameLocation":"8605:15:10","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"snapshots","nameLocation":"8639:9:10","nodeType":"VariableDeclaration","scope":1871,"src":"8621:27:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"8621:9:10"},"referencedDeclaration":1592,"src":"8621:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1592_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"currentValue","nameLocation":"8658:12:10","nodeType":"VariableDeclaration","scope":1871,"src":"8650:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8650:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8620:51:10"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"8680:0:10"},"scope":1902,"src":"8596:304:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1895,"nodeType":"Block","src":"8985:127:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1879,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"8999:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8999:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9013:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8999:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1893,"nodeType":"Block","src":"9055:51:10","statements":[{"expression":{"baseExpression":{"id":1886,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9076:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1891,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1887,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9080:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9080:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9093:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9080:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9076:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1878,"id":1892,"nodeType":"Return","src":"9069:26:10"}]},"id":1894,"nodeType":"IfStatement","src":"8995:111:10","trueBody":{"id":1885,"nodeType":"Block","src":"9016:33:10","statements":[{"expression":{"hexValue":"30","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1878,"id":1884,"nodeType":"Return","src":"9030:8:10"}]}}]},"id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"_lastSnapshotId","nameLocation":"8915:15:10","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"ids","nameLocation":"8949:3:10","nodeType":"VariableDeclaration","scope":1896,"src":"8931:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8931:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1873,"nodeType":"ArrayTypeName","src":"8931:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8930:23:10"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"8976:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8975:9:10"},"scope":1902,"src":"8906:206:10","stateMutability":"view","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"9118:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1901,"mutability":"mutable","name":"__gap","nameLocation":"9397:5:10","nodeType":"VariableDeclaration","scope":1902,"src":"9377:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$46_storage","typeString":"uint256[46]"},"typeName":{"baseType":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9377:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"length":{"hexValue":"3436","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9385:2:10","typeDescriptions":{"typeIdentifier":"t_rational_46_by_1","typeString":"int_const 46"},"value":"46"},"nodeType":"ArrayTypeName","src":"9377:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$46_storage_ptr","typeString":"uint256[46]"}},"visibility":"private"}],"scope":1903,"src":"2484:6921:10","usedErrors":[]}],"src":"124:9282:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"CountersUpgradeable":[3428],"ECDSAUpgradeable":[4024],"EIP712Upgradeable":[4174],"ERC20PermitUpgradeable":[2836],"ERC20Upgradeable":[1175],"ERC20VotesUpgradeable":[2620],"IERC20MetadataUpgradeable":[2645],"IERC20PermitUpgradeable":[2872],"IERC20Upgradeable":[1253],"IVotesUpgradeable":[209],"Initializable":[436],"MathUpgradeable":[5039],"SafeCastUpgradeable":[6580],"StringsUpgradeable":[3663]},"id":2621,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1904,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","file":"./draft-ERC20PermitUpgradeable.sol","id":1905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":2837,"src":"146:44:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"../../../utils/math/MathUpgradeable.sol","id":1906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":5040,"src":"191:49:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","file":"../../../governance/utils/IVotesUpgradeable.sol","id":1907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":210,"src":"241:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","file":"../../../utils/math/SafeCastUpgradeable.sol","id":1908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":6581,"src":"299:53:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":1909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":4025,"src":"353:58:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":437,"src":"412:48:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1912,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1400:13:11"},"id":1913,"nodeType":"InheritanceSpecifier","src":"1400:13:11"},{"baseName":{"id":1914,"name":"IVotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":209,"src":"1415:17:11"},"id":1915,"nodeType":"InheritanceSpecifier","src":"1415:17:11"},{"baseName":{"id":1916,"name":"ERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2836,"src":"1434:22:11"},"id":1917,"nodeType":"InheritanceSpecifier","src":"1434:22:11"}],"canonicalName":"ERC20VotesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"462:894:11","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":2620,"linearizedBaseContracts":[2620,2836,4174,2872,1175,2645,1253,3354,209,436],"name":"ERC20VotesUpgradeable","nameLocation":"1375:21:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1922,"nodeType":"Block","src":"1518:7:11","statements":[]},"id":1923,"implemented":true,"kind":"function","modifiers":[{"id":1920,"kind":"modifierInvocation","modifierName":{"id":1919,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1501:16:11"},"nodeType":"ModifierInvocation","src":"1501:16:11"}],"name":"__ERC20Votes_init","nameLocation":"1472:17:11","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[],"src":"1489:2:11"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"1518:0:11"},"scope":2620,"src":"1463:62:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"1596:7:11","statements":[]},"id":1929,"implemented":true,"kind":"function","modifiers":[{"id":1926,"kind":"modifierInvocation","modifierName":{"id":1925,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1579:16:11"},"nodeType":"ModifierInvocation","src":"1579:16:11"}],"name":"__ERC20Votes_init_unchained","nameLocation":"1540:27:11","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[],"src":"1567:2:11"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"1596:0:11"},"scope":2620,"src":"1531:72:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"ERC20VotesUpgradeable.Checkpoint","id":1934,"members":[{"constant":false,"id":1931,"mutability":"mutable","name":"fromBlock","nameLocation":"1643:9:11","nodeType":"VariableDeclaration","scope":1934,"src":"1636:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1930,"name":"uint32","nodeType":"ElementaryTypeName","src":"1636:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"votes","nameLocation":"1670:5:11","nodeType":"VariableDeclaration","scope":1934,"src":"1662:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1932,"name":"uint224","nodeType":"ElementaryTypeName","src":"1662:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1615:10:11","nodeType":"StructDefinition","scope":2620,"src":"1608:74:11","visibility":"public"},{"constant":true,"id":1939,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1713:20:11","nodeType":"VariableDeclaration","scope":2620,"src":"1688:127:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1688:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1754:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1936,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1744:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1744:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1943,"mutability":"mutable","name":"_delegates","nameLocation":"1858:10:11","nodeType":"VariableDeclaration","scope":2620,"src":"1822:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1942,"keyType":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1822:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1949,"mutability":"mutable","name":"_checkpoints","nameLocation":"1915:12:11","nodeType":"VariableDeclaration","scope":2620,"src":"1874:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"typeName":{"id":1948,"keyType":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1874:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"valueType":{"baseType":{"id":1946,"nodeType":"UserDefinedTypeName","pathNode":{"id":1945,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"1893:10:11"},"referencedDeclaration":1934,"src":"1893:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1947,"nodeType":"ArrayTypeName","src":"1893:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1953,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1954:23:11","nodeType":"VariableDeclaration","scope":2620,"src":"1933:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":1951,"nodeType":"UserDefinedTypeName","pathNode":{"id":1950,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"1933:10:11"},"referencedDeclaration":1934,"src":"1933:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1952,"nodeType":"ArrayTypeName","src":"1933:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"private"},{"body":{"id":1970,"nodeType":"Block","src":"2153:50:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1964,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2170:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1966,"indexExpression":{"id":1965,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"2183:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1968,"indexExpression":{"id":1967,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2192:3:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"functionReturnParameters":1963,"id":1969,"nodeType":"Return","src":"2163:33:11"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"1984:66:11","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2064:11:11","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"account","nameLocation":"2084:7:11","nodeType":"VariableDeclaration","scope":1971,"src":"2076:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"2076:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"pos","nameLocation":"2100:3:11","nodeType":"VariableDeclaration","scope":1971,"src":"2093:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1957,"name":"uint32","nodeType":"ElementaryTypeName","src":"2093:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2075:29:11"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"2134:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":1961,"nodeType":"UserDefinedTypeName","pathNode":{"id":1960,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"2134:10:11"},"referencedDeclaration":1934,"src":"2134:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"2133:19:11"},"scope":2620,"src":"2055:148:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1987,"nodeType":"Block","src":"2356:82:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1981,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2402:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1983,"indexExpression":{"id":1982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2415:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2402:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2402:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1979,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"2373:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6580_$","typeString":"type(library SafeCastUpgradeable)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5742,"src":"2373:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1978,"id":1986,"nodeType":"Return","src":"2366:65:11"}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"2209:64:11","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2287:14:11","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"account","nameLocation":"2310:7:11","nodeType":"VariableDeclaration","scope":1988,"src":"2302:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2301:17:11"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"2348:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1976,"name":"uint32","nodeType":"ElementaryTypeName","src":"2348:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2347:8:11"},"scope":2620,"src":"2278:160:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[186],"body":{"id":2001,"nodeType":"Block","src":"2609:43:11","statements":[{"expression":{"baseExpression":{"id":1997,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2626:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1999,"indexExpression":{"id":1998,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2637:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2626:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1996,"id":2000,"nodeType":"Return","src":"2619:26:11"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"2444:77:11","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2535:9:11","nodeType":"FunctionDefinition","overrides":{"id":1993,"nodeType":"OverrideSpecifier","overrides":[],"src":"2582:8:11"},"parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"account","nameLocation":"2553:7:11","nodeType":"VariableDeclaration","scope":2002,"src":"2545:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2544:17:11"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"2600:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"2600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2599:9:11"},"scope":2620,"src":"2526:126:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[160],"body":{"id":2032,"nodeType":"Block","src":"2813:127:11","statements":[{"assignments":[2012],"declarations":[{"constant":false,"id":2012,"mutability":"mutable","name":"pos","nameLocation":"2831:3:11","nodeType":"VariableDeclaration","scope":2032,"src":"2823:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2017,"initialValue":{"expression":{"baseExpression":{"id":2013,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2837:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2015,"indexExpression":{"id":2014,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2850:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2837:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2837:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2823:42:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2882:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2889:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2882:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2022,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2897:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2024,"indexExpression":{"id":2023,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2910:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":2028,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2919:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2925:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2919:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":2029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"2897:36:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2882:51:11","trueExpression":{"hexValue":"30","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2893:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2010,"id":2031,"nodeType":"Return","src":"2875:58:11"}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"2658:68:11","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2740:8:11","nodeType":"FunctionDefinition","overrides":{"id":2007,"nodeType":"OverrideSpecifier","overrides":[],"src":"2786:8:11"},"parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"account","nameLocation":"2757:7:11","nodeType":"VariableDeclaration","scope":2033,"src":"2749:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"2749:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2748:17:11"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"2804:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:9:11"},"scope":2620,"src":"2731:209:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[170],"body":{"id":2059,"nodeType":"Block","src":"3240:158:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3258:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2046,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3272:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3272:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3258:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3286:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":2044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3250:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"ExpressionStatement","src":"3250:70:11"},{"expression":{"arguments":[{"baseExpression":{"id":2053,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3356:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2055,"indexExpression":{"id":2054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3369:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3356:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2056,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3379:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3337:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2043,"id":2058,"nodeType":"Return","src":"3330:61:11"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"2946:182:11","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3142:12:11","nodeType":"FunctionDefinition","overrides":{"id":2040,"nodeType":"OverrideSpecifier","overrides":[],"src":"3213:8:11"},"parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"account","nameLocation":"3163:7:11","nodeType":"VariableDeclaration","scope":2060,"src":"3155:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"3155:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"blockNumber","nameLocation":"3180:11:11","nodeType":"VariableDeclaration","scope":2060,"src":"3172:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3172:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3154:38:11"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"3231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3230:9:11"},"scope":2620,"src":"3133:265:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[178],"body":{"id":2082,"nodeType":"Block","src":"3773:160:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2070,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3791:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2071,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3805:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3805:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3791:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3819:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":2069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3783:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3783:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"3783:70:11"},{"expression":{"arguments":[{"id":2078,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"3889:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2079,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3914:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2077,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3870:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3870:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2068,"id":2081,"nodeType":"Return","src":"3863:63:11"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"3404:268:11","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":2083,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3686:18:11","nodeType":"FunctionDefinition","overrides":{"id":2065,"nodeType":"OverrideSpecifier","overrides":[],"src":"3746:8:11"},"parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"blockNumber","nameLocation":"3713:11:11","nodeType":"VariableDeclaration","scope":2083,"src":"3705:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3704:21:11"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"3764:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3764:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3763:9:11"},"scope":2620,"src":"3677:256:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2188,"nodeType":"Block","src":"4125:1772:11","statements":[{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"length","nameLocation":"5212:6:11","nodeType":"VariableDeclaration","scope":2188,"src":"5204:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5204:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2099,"initialValue":{"expression":{"id":2097,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5221:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5221:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5204:29:11"},{"assignments":[2101],"declarations":[{"constant":false,"id":2101,"mutability":"mutable","name":"low","nameLocation":"5252:3:11","nodeType":"VariableDeclaration","scope":2188,"src":"5244:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5244:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2103,"initialValue":{"hexValue":"30","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5244:15:11"},{"assignments":[2105],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"high","nameLocation":"5277:4:11","nodeType":"VariableDeclaration","scope":2188,"src":"5269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5269:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2107,"initialValue":{"id":2106,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5284:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5269:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5305:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5314:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5305:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2141,"nodeType":"IfStatement","src":"5301:255:11","trueBody":{"id":2140,"nodeType":"Block","src":"5317:239:11","statements":[{"assignments":[2112],"declarations":[{"constant":false,"id":2112,"mutability":"mutable","name":"mid","nameLocation":"5339:3:11","nodeType":"VariableDeclaration","scope":2140,"src":"5331:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"5331:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2119,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5345:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2116,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5375:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2114,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"5354:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5039_$","typeString":"type(library MathUpgradeable)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4543,"src":"5354:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5345:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5331:51:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2121,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5414:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"id":2122,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"5421:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"5400:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1931,"src":"5400:35:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2125,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"5438:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5400:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2138,"nodeType":"Block","src":"5500:46:11","statements":[{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2132,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5518:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"5524:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5530:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5518:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"5518:13:11"}]},"id":2139,"nodeType":"IfStatement","src":"5396:150:11","trueBody":{"id":2131,"nodeType":"Block","src":"5451:43:11","statements":[{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2127,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5469:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2128,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"5476:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5469:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"5469:10:11"}]}}]}},{"body":{"id":2173,"nodeType":"Block","src":"5585:236:11","statements":[{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"mid","nameLocation":"5607:3:11","nodeType":"VariableDeclaration","scope":2173,"src":"5599:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2152,"initialValue":{"arguments":[{"id":2149,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5637:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2150,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5642:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2147,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"5613:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5039_$","typeString":"type(library MathUpgradeable)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4240,"src":"5613:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5613:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5599:48:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2154,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5679:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"id":2155,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"5686:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2153,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"5665:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5665:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1931,"src":"5665:35:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2158,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"5703:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5665:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2171,"nodeType":"Block","src":"5765:46:11","statements":[{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2165,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5783:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"5789:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5795:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5783:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2170,"nodeType":"ExpressionStatement","src":"5783:13:11"}]},"id":2172,"nodeType":"IfStatement","src":"5661:150:11","trueBody":{"id":2164,"nodeType":"Block","src":"5716:43:11","statements":[{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2160,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5734:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2161,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"5741:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5734:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"nodeType":"ExpressionStatement","src":"5734:10:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"5573:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2143,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5579:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5573:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"WhileStatement","src":"5566:255:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5838:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5838:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":2180,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"5868:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5875:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5882:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5875:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2179,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"5854:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5854:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"5854:36:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5838:52:11","trueExpression":{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5850:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2094,"id":2187,"nodeType":"Return","src":"5831:59:11"}]},"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"3939:73:11","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":2189,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4026:18:11","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"ckpts","nameLocation":"4066:5:11","nodeType":"VariableDeclaration","scope":2189,"src":"4045:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2086,"nodeType":"UserDefinedTypeName","pathNode":{"id":2085,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"4045:10:11"},"referencedDeclaration":1934,"src":"4045:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2087,"nodeType":"ArrayTypeName","src":"4045:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"blockNumber","nameLocation":"4081:11:11","nodeType":"VariableDeclaration","scope":2189,"src":"4073:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4073:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4044:49:11"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2189,"src":"4116:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:11"},"scope":2620,"src":"4017:1880:11","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[192],"body":{"id":2202,"nodeType":"Block","src":"6039:51:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6059:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6059:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2199,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6073:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2196,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6049:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6049:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2201,"nodeType":"ExpressionStatement","src":"6049:34:11"}]},"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"5903:70:11","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5987:8:11","nodeType":"FunctionDefinition","overrides":{"id":2194,"nodeType":"OverrideSpecifier","overrides":[],"src":"6030:8:11"},"parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"delegatee","nameLocation":"6004:9:11","nodeType":"VariableDeclaration","scope":2203,"src":"5996:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"5996:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5995:19:11"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[],"src":"6039:0:11"},"scope":2620,"src":"5978:112:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[208],"body":{"id":2262,"nodeType":"Block","src":"6349:403:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2221,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6367:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6367:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2223,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"6386:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6367:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6394:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":2220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6359:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6359:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2227,"nodeType":"ExpressionStatement","src":"6359:67:11"},{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"signer","nameLocation":"6444:6:11","nodeType":"VariableDeclaration","scope":2262,"src":"6436:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"6436:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2247,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":2236,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"6529:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2237,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6551:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2238,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"6562:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2239,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"6569:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6518:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6518:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6518:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2233,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6508:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6508:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2232,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"6491:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6491:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2243,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"6592:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2244,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"6607:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2245,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"6622:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2230,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"6453:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$4024_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3964,"src":"6453:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6453:180:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6436:197:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"6651:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2251,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6670:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2250,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"6660:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6660:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6651:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6679:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":2248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6643:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6643:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2256,"nodeType":"ExpressionStatement","src":"6643:64:11"},{"expression":{"arguments":[{"id":2258,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6727:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2259,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6735:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2257,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6717:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"ExpressionStatement","src":"6717:28:11"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"6096:66:11","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6176:13:11","nodeType":"FunctionDefinition","overrides":{"id":2218,"nodeType":"OverrideSpecifier","overrides":[],"src":"6340:8:11"},"parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"delegatee","nameLocation":"6207:9:11","nodeType":"VariableDeclaration","scope":2263,"src":"6199:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"6199:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"nonce","nameLocation":"6234:5:11","nodeType":"VariableDeclaration","scope":2263,"src":"6226:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"6226:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"expiry","nameLocation":"6257:6:11","nodeType":"VariableDeclaration","scope":2263,"src":"6249:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"6249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"v","nameLocation":"6279:1:11","nodeType":"VariableDeclaration","scope":2263,"src":"6273:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2211,"name":"uint8","nodeType":"ElementaryTypeName","src":"6273:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"r","nameLocation":"6298:1:11","nodeType":"VariableDeclaration","scope":2263,"src":"6290:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2216,"mutability":"mutable","name":"s","nameLocation":"6317:1:11","nodeType":"VariableDeclaration","scope":2263,"src":"6309:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6309:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6189:135:11"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[],"src":"6349:0:11"},"scope":2620,"src":"6167:585:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2275,"nodeType":"Block","src":"6916:41:11","statements":[{"expression":{"expression":{"arguments":[{"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2270,"name":"uint224","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6933:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6933:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6933:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2268,"id":2274,"nodeType":"Return","src":"6926:24:11"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"6758:91:11","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6863:10:11","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"6873:2:11"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2276,"src":"6907:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2266,"name":"uint224","nodeType":"ElementaryTypeName","src":"6907:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6906:9:11"},"scope":2620,"src":"6854:103:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[987],"body":{"id":2307,"nodeType":"Block","src":"7120:211:11","statements":[{"expression":{"arguments":[{"id":2288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"7142:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2289,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7151:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2285,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7130:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2620_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":987,"src":"7130:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7130:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"ExpressionStatement","src":"7130:28:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2293,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"7176:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7176:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2295,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"7193:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7193:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7176:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7207:50:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":2292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7168:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7168:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"ExpressionStatement","src":"7168:90:11"},{"expression":{"arguments":[{"id":2302,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7286:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2303,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7311:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2304,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7317:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2301,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"7269:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7269:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2306,"nodeType":"ExpressionStatement","src":"7269:55:11"}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"6963:78:11","text":" @dev Snapshots the totalSupply after it has been increased."},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7055:5:11","nodeType":"FunctionDefinition","overrides":{"id":2283,"nodeType":"OverrideSpecifier","overrides":[],"src":"7111:8:11"},"parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"account","nameLocation":"7069:7:11","nodeType":"VariableDeclaration","scope":2308,"src":"7061:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"amount","nameLocation":"7086:6:11","nodeType":"VariableDeclaration","scope":2308,"src":"7078:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"7078:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7060:33:11"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"7120:0:11"},"scope":2620,"src":"7046:285:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1059],"body":{"id":2330,"nodeType":"Block","src":"7494:116:11","statements":[{"expression":{"arguments":[{"id":2320,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"7516:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2321,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"7525:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2317,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7504:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2620_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"7504:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7504:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2323,"nodeType":"ExpressionStatement","src":"7504:28:11"},{"expression":{"arguments":[{"id":2325,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7560:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2326,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7585:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2327,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"7596:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2324,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"7543:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7543:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2329,"nodeType":"ExpressionStatement","src":"7543:60:11"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"7337:78:11","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":2331,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7429:5:11","nodeType":"FunctionDefinition","overrides":{"id":2315,"nodeType":"OverrideSpecifier","overrides":[],"src":"7485:8:11"},"parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"account","nameLocation":"7443:7:11","nodeType":"VariableDeclaration","scope":2331,"src":"7435:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"7435:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"amount","nameLocation":"7460:6:11","nodeType":"VariableDeclaration","scope":2331,"src":"7452:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"7452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7434:33:11"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[],"src":"7494:0:11"},"scope":2620,"src":"7420:190:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1169],"body":{"id":2360,"nodeType":"Block","src":"7877:127:11","statements":[{"expression":{"arguments":[{"id":2345,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"7913:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2346,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"7919:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2347,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"7923:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2342,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7887:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2620_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1169,"src":"7887:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7887:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"ExpressionStatement","src":"7887:43:11"},{"expression":{"arguments":[{"arguments":[{"id":2352,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"7968:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2351,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7958:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7958:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"7985:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2354,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7975:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7975:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2357,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"7990:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2350,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"7941:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7941:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"ExpressionStatement","src":"7941:56:11"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"7616:129:11","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7759:19:11","nodeType":"FunctionDefinition","overrides":{"id":2340,"nodeType":"OverrideSpecifier","overrides":[],"src":"7868:8:11"},"parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"from","nameLocation":"7796:4:11","nodeType":"VariableDeclaration","scope":2361,"src":"7788:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"7788:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"to","nameLocation":"7818:2:11","nodeType":"VariableDeclaration","scope":2361,"src":"7810:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"7810:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"amount","nameLocation":"7838:6:11","nodeType":"VariableDeclaration","scope":2361,"src":"7830:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7830:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7778:72:11"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[],"src":"7877:0:11"},"scope":2620,"src":"7750:254:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"8249:306:11","statements":[{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"currentDelegate","nameLocation":"8267:15:11","nodeType":"VariableDeclaration","scope":2399,"src":"8259:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"8259:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2374,"initialValue":{"arguments":[{"id":2372,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"8295:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2371,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"8285:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8285:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8259:46:11"},{"assignments":[2376],"declarations":[{"constant":false,"id":2376,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8323:16:11","nodeType":"VariableDeclaration","scope":2399,"src":"8315:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"8315:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2380,"initialValue":{"arguments":[{"id":2378,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"8352:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2377,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8342:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8342:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8315:47:11"},{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2381,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"8372:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2383,"indexExpression":{"id":2382,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"8383:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8372:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2384,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"8396:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8372:33:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2386,"nodeType":"ExpressionStatement","src":"8372:33:11"},{"eventCall":{"arguments":[{"id":2388,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"8437:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2389,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"8448:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2390,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"8465:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2387,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"8421:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8421:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2392,"nodeType":"EmitStatement","src":"8416:59:11"},{"expression":{"arguments":[{"id":2394,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"8503:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2395,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"8520:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2396,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8531:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2393,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8486:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8486:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2398,"nodeType":"ExpressionStatement","src":"8486:62:11"}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"8010:160:11","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8184:9:11","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"delegator","nameLocation":"8202:9:11","nodeType":"VariableDeclaration","scope":2400,"src":"8194:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"delegatee","nameLocation":"8221:9:11","nodeType":"VariableDeclaration","scope":2400,"src":"8213:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"8213:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8193:38:11"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[],"src":"8249:0:11"},"scope":2620,"src":"8175:380:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"8667:521:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8681:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2410,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8688:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8681:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"8695:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8704:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8695:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8681:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"8677:505:11","trueBody":{"id":2468,"nodeType":"Block","src":"8707:475:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8725:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8732:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"8732:7:11","typeDescriptions":{}}},"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8732:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8725:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2441,"nodeType":"IfStatement","src":"8721:221:11","trueBody":{"id":2440,"nodeType":"Block","src":"8744:198:11","statements":[{"assignments":[2423,2425],"declarations":[{"constant":false,"id":2423,"mutability":"mutable","name":"oldWeight","nameLocation":"8771:9:11","nodeType":"VariableDeclaration","scope":2440,"src":"8763:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"8763:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"newWeight","nameLocation":"8790:9:11","nodeType":"VariableDeclaration","scope":2440,"src":"8782:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"8782:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2433,"initialValue":{"arguments":[{"baseExpression":{"id":2427,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8820:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2429,"indexExpression":{"id":2428,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8833:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8820:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2430,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8839:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2431,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"8850:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"8803:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8803:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8762:95:11"},{"eventCall":{"arguments":[{"id":2435,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8901:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2436,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"8906:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2437,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"8917:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2434,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"8880:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8880:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2439,"nodeType":"EmitStatement","src":"8875:52:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8960:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8975:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8967:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"8967:7:11","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8967:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8960:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2467,"nodeType":"IfStatement","src":"8956:216:11","trueBody":{"id":2466,"nodeType":"Block","src":"8979:193:11","statements":[{"assignments":[2449,2451],"declarations":[{"constant":false,"id":2449,"mutability":"mutable","name":"oldWeight","nameLocation":"9006:9:11","nodeType":"VariableDeclaration","scope":2466,"src":"8998:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"8998:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"newWeight","nameLocation":"9025:9:11","nodeType":"VariableDeclaration","scope":2466,"src":"9017:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"9017:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"arguments":[{"baseExpression":{"id":2453,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"9055:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2455,"indexExpression":{"id":2454,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"9068:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9055:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2456,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"9074:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2457,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9080:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"9038:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9038:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8997:90:11"},{"eventCall":{"arguments":[{"id":2461,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"9131:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2462,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"9136:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2463,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"9147:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"9110:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9110:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"EmitStatement","src":"9105:52:11"}]}}]}}]},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8570:16:11","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"src","nameLocation":"8604:3:11","nodeType":"VariableDeclaration","scope":2471,"src":"8596:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"8596:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"dst","nameLocation":"8625:3:11","nodeType":"VariableDeclaration","scope":2471,"src":"8617:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2403,"name":"address","nodeType":"ElementaryTypeName","src":"8617:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"amount","nameLocation":"8646:6:11","nodeType":"VariableDeclaration","scope":2471,"src":"8638:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"8638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8586:72:11"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[],"src":"8667:0:11"},"scope":2620,"src":"8561:627:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2570,"nodeType":"Block","src":"9402:541:11","statements":[{"assignments":[2495],"declarations":[{"constant":false,"id":2495,"mutability":"mutable","name":"pos","nameLocation":"9420:3:11","nodeType":"VariableDeclaration","scope":2570,"src":"9412:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9412:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2498,"initialValue":{"expression":{"id":2496,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9426:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9426:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9412:26:11"},{"assignments":[2501],"declarations":[{"constant":false,"id":2501,"mutability":"mutable","name":"oldCkpt","nameLocation":"9467:7:11","nodeType":"VariableDeclaration","scope":2570,"src":"9449:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2500,"nodeType":"UserDefinedTypeName","pathNode":{"id":2499,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"9449:10:11"},"referencedDeclaration":1934,"src":"9449:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"id":2516,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9477:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9477:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2510,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9521:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9528:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9534:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2509,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"9507:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9507:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9477:59:11","trueExpression":{"arguments":[{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9499:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9502:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2505,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"9488:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9488:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9449:87:11"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2517,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"9547:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2518,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"9559:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"id":2519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"9559:13:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9547:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"9547:25:11"},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9582:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2524,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"9597:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2525,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"9608:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2523,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"9594:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9594:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9582:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"9582:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9629:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9635:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9629:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2532,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"9640:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"id":2533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1931,"src":"9640:17:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2534,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9661:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9661:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9640:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9629:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2568,"nodeType":"Block","src":"9784:153:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2558,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9861:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9861:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2556,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"9832:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6580_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5742,"src":"9832:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9832:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2563,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9913:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2561,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"9883:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6580_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":5142,"src":"9883:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9883:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2555,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"9809:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"9809:116:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1934_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}],"expression":{"id":2552,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9798:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9798:10:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1934_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,struct ERC20VotesUpgradeable.Checkpoint storage ref)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9798:128:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2567,"nodeType":"ExpressionStatement","src":"9798:128:11"}]},"id":2569,"nodeType":"IfStatement","src":"9625:312:11","trueBody":{"id":2551,"nodeType":"Block","src":"9675:103:11","statements":[{"expression":{"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2539,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9703:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9710:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9716:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9710:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"9689:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1934_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9689:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"9689:35:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2547,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9757:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2545,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"9727:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6580_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":5142,"src":"9727:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9727:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9689:78:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2550,"nodeType":"ExpressionStatement","src":"9689:78:11"}]}}]},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9203:16:11","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"ckpts","nameLocation":"9250:5:11","nodeType":"VariableDeclaration","scope":2571,"src":"9229:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"9229:10:11"},"referencedDeclaration":1934,"src":"9229:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2474,"nodeType":"ArrayTypeName","src":"9229:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"op","nameLocation":"9315:2:11","nodeType":"VariableDeclaration","scope":2571,"src":"9265:52:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2484,"nodeType":"FunctionTypeName","parameterTypes":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"9274:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"9274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"9283:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9273:18:11"},"returnParameterTypes":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"9306:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"9306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9305:9:11"},"src":"9265:52:11","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"delta","nameLocation":"9335:5:11","nodeType":"VariableDeclaration","scope":2571,"src":"9327:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"9327:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9219:127:11"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"oldWeight","nameLocation":"9372:9:11","nodeType":"VariableDeclaration","scope":2571,"src":"9364:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"9364:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"newWeight","nameLocation":"9391:9:11","nodeType":"VariableDeclaration","scope":2571,"src":"9383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9383:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9363:38:11"},"scope":2620,"src":"9194:749:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2584,"nodeType":"Block","src":"10016:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"10033:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"10037:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2579,"id":2583,"nodeType":"Return","src":"10026:12:11"}]},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9958:4:11","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"a","nameLocation":"9971:1:11","nodeType":"VariableDeclaration","scope":2585,"src":"9963:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"9963:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"b","nameLocation":"9982:1:11","nodeType":"VariableDeclaration","scope":2585,"src":"9974:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"9974:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9962:22:11"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"10007:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10007:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10006:9:11"},"scope":2620,"src":"9949:96:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2598,"nodeType":"Block","src":"10123:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"10140:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"10144:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10140:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2593,"id":2597,"nodeType":"Return","src":"10133:12:11"}]},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10060:9:11","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"a","nameLocation":"10078:1:11","nodeType":"VariableDeclaration","scope":2599,"src":"10070:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"10070:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"b","nameLocation":"10089:1:11","nodeType":"VariableDeclaration","scope":2599,"src":"10081:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"10081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10069:22:11"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"10114:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10114:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10113:9:11"},"scope":2620,"src":"10051:101:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2613,"nodeType":"Block","src":"10408:126:11","statements":[{"AST":{"nodeType":"YulBlock","src":"10427:101:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10448:1:11","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10451:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10441:6:11"},"nodeType":"YulFunctionCall","src":"10441:21:11"},"nodeType":"YulExpressionStatement","src":"10441:21:11"},{"nodeType":"YulAssignment","src":"10475:43:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10504:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10507:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10494:9:11"},"nodeType":"YulFunctionCall","src":"10494:18:11"},{"name":"pos","nodeType":"YulIdentifier","src":"10514:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10490:3:11"},"nodeType":"YulFunctionCall","src":"10490:28:11"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10475:11:11"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2604,"isOffset":false,"isSlot":true,"src":"10451:10:11","suffix":"slot","valueSize":1},{"declaration":2606,"isOffset":false,"isSlot":false,"src":"10514:3:11","valueSize":1},{"declaration":2610,"isOffset":false,"isSlot":true,"src":"10475:11:11","suffix":"slot","valueSize":1}],"id":2612,"nodeType":"InlineAssembly","src":"10418:110:11"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"10158:132:11","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10304:13:11","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"ckpts","nameLocation":"10339:5:11","nodeType":"VariableDeclaration","scope":2614,"src":"10318:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2602,"nodeType":"UserDefinedTypeName","pathNode":{"id":2601,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"10318:10:11"},"referencedDeclaration":1934,"src":"10318:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2603,"nodeType":"ArrayTypeName","src":"10318:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1934_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"pos","nameLocation":"10354:3:11","nodeType":"VariableDeclaration","scope":2614,"src":"10346:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"10346:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10317:41:11"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"result","nameLocation":"10400:6:11","nodeType":"VariableDeclaration","scope":2614,"src":"10381:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2609,"nodeType":"UserDefinedTypeName","pathNode":{"id":2608,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1934,"src":"10381:10:11"},"referencedDeclaration":1934,"src":"10381:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1934_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"10380:27:11"},"scope":2620,"src":"10295:239:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"10540:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2619,"mutability":"mutable","name":"__gap","nameLocation":"10819:5:11","nodeType":"VariableDeclaration","scope":2620,"src":"10799:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"10799:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2618,"length":{"hexValue":"3437","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10807:2:11","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"10799:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":2621,"src":"1357:9470:11","usedErrors":[]}],"src":"121:10707:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[2645],"IERC20Upgradeable":[1253]},"id":2646,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2622,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":2623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2646,"sourceUnit":1254,"src":"135:34:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2625,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"327:17:12"},"id":2626,"nodeType":"InheritanceSpecifier","src":"327:17:12"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"171:116:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2645,"linearizedBaseContracts":[2645,1253],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"351:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2632,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:12","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[],"src":"423:2:12"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"449:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2629,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:12"},"scope":2645,"src":"410:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"470:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2638,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:12","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"546:2:12"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2638,"src":"572:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2635,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:12"},"scope":2645,"src":"531:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"593:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2644,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:12","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[],"src":"680:2:12"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2644,"src":"706:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2641,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:12"},"scope":2645,"src":"663:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2646,"src":"288:427:12","usedErrors":[]}],"src":"110:606:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"CountersUpgradeable":[3428],"ECDSAUpgradeable":[4024],"EIP712Upgradeable":[4174],"ERC20PermitUpgradeable":[2836],"ERC20Upgradeable":[1175],"IERC20MetadataUpgradeable":[2645],"IERC20PermitUpgradeable":[2872],"IERC20Upgradeable":[1253],"Initializable":[436],"MathUpgradeable":[5039],"StringsUpgradeable":[3663]},"id":2837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2647,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:13"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol","file":"./draft-IERC20PermitUpgradeable.sol","id":2648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":2873,"src":"153:45:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2649,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":1176,"src":"199:33:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":2650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":4025,"src":"233:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":2651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":4175,"src":"292:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":2652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":3429,"src":"352:48:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":437,"src":"401:48:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2655,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1043:13:13"},"id":2656,"nodeType":"InheritanceSpecifier","src":"1043:13:13"},{"baseName":{"id":2657,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"1058:16:13"},"id":2658,"nodeType":"InheritanceSpecifier","src":"1058:16:13"},{"baseName":{"id":2659,"name":"IERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2872,"src":"1076:23:13"},"id":2660,"nodeType":"InheritanceSpecifier","src":"1076:23:13"},{"baseName":{"id":2661,"name":"EIP712Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":4174,"src":"1101:17:13"},"id":2662,"nodeType":"InheritanceSpecifier","src":"1101:17:13"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"451:547:13","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._\n @custom:storage-size 51"},"fullyImplemented":true,"id":2836,"linearizedBaseContracts":[2836,4174,2872,1175,2645,1253,3354,436],"name":"ERC20PermitUpgradeable","nameLocation":"1017:22:13","nodeType":"ContractDefinition","nodes":[{"id":2666,"libraryName":{"id":2663,"name":"CountersUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"1131:19:13"},"nodeType":"UsingForDirective","src":"1125:58:13","typeName":{"id":2665,"nodeType":"UserDefinedTypeName","pathNode":{"id":2664,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"1155:27:13"},"referencedDeclaration":3360,"src":"1155:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":2671,"mutability":"mutable","name":"_nonces","nameLocation":"1245:7:13","nodeType":"VariableDeclaration","scope":2836,"src":"1189:63:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3360_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"typeName":{"id":2670,"keyType":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1189:47:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3360_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"valueType":{"id":2669,"nodeType":"UserDefinedTypeName","pathNode":{"id":2668,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"1208:27:13"},"referencedDeclaration":3360,"src":"1208:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},"visibility":"private"},{"constant":true,"id":2676,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1336:16:13","nodeType":"VariableDeclaration","scope":2836,"src":"1311:147:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1311:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1373:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2673,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1363:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"1464:254:13","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":2679,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1791:32:13","nodeType":"VariableDeclaration","scope":2836,"src":"1775:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":2692,"nodeType":"Block","src":"2129:51:13","statements":[{"expression":{"arguments":[{"id":2688,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2163:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":2687,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"2139:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2691,"nodeType":"ExpressionStatement","src":"2139:34:13"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"1830:220:13","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":2693,"implemented":true,"kind":"function","modifiers":[{"id":2685,"kind":"modifierInvocation","modifierName":{"id":2684,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2112:16:13"},"nodeType":"ModifierInvocation","src":"2112:16:13"}],"name":"__ERC20Permit_init","nameLocation":"2064:18:13","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"name","nameLocation":"2097:4:13","nodeType":"VariableDeclaration","scope":2693,"src":"2083:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2681,"name":"string","nodeType":"ElementaryTypeName","src":"2083:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2082:20:13"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[],"src":"2129:0:13"},"scope":2836,"src":"2055:125:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2700,"nodeType":"Block","src":"2265:2:13","statements":[]},"id":2701,"implemented":true,"kind":"function","modifiers":[{"id":2698,"kind":"modifierInvocation","modifierName":{"id":2697,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2248:16:13"},"nodeType":"ModifierInvocation","src":"2248:16:13"}],"name":"__ERC20Permit_init_unchained","nameLocation":"2195:28:13","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2701,"src":"2224:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2694,"name":"string","nodeType":"ElementaryTypeName","src":"2224:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2223:15:13"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"2265:0:13"},"scope":2836,"src":"2186:81:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2857],"body":{"id":2773,"nodeType":"Block","src":"2526:439:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2721,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2544:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2544:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2723,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"2563:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2544:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2573:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":2720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2536:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2536:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"ExpressionStatement","src":"2536:69:13"},{"assignments":[2729],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"structHash","nameLocation":"2624:10:13","nodeType":"VariableDeclaration","scope":2773,"src":"2616:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2616:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2743,"initialValue":{"arguments":[{"arguments":[{"id":2733,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"2658:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2676:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2735,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"2683:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2692:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2738,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2709:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2737,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"2699:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2699:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2740,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"2717:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2731,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2647:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2647:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2647:79:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2730,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2637:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2637:90:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2616:111:13"},{"assignments":[2745],"declarations":[{"constant":false,"id":2745,"mutability":"mutable","name":"hash","nameLocation":"2746:4:13","nodeType":"VariableDeclaration","scope":2773,"src":"2738:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2738:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2749,"initialValue":{"arguments":[{"id":2747,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2770:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2746,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"2753:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2753:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2738:43:13"},{"assignments":[2751],"declarations":[{"constant":false,"id":2751,"mutability":"mutable","name":"signer","nameLocation":"2800:6:13","nodeType":"VariableDeclaration","scope":2773,"src":"2792:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"2792:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2759,"initialValue":{"arguments":[{"id":2754,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"2834:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2755,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"2840:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2756,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"2843:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2757,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"2846:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2752,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"2809:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$4024_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3964,"src":"2809:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2809:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2792:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"2866:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2876:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2866:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2883:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":2760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2858:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2766,"nodeType":"ExpressionStatement","src":"2858:58:13"},{"expression":{"arguments":[{"id":2768,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2936:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2769,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"2943:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2952:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2767,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2927:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2772,"nodeType":"ExpressionStatement","src":"2927:31:13"}]},"documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"2273:50:13","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":2774,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2337:6:13","nodeType":"FunctionDefinition","overrides":{"id":2718,"nodeType":"OverrideSpecifier","overrides":[],"src":"2517:8:13"},"parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"owner","nameLocation":"2361:5:13","nodeType":"VariableDeclaration","scope":2774,"src":"2353:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"spender","nameLocation":"2384:7:13","nodeType":"VariableDeclaration","scope":2774,"src":"2376:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"value","nameLocation":"2409:5:13","nodeType":"VariableDeclaration","scope":2774,"src":"2401:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"deadline","nameLocation":"2432:8:13","nodeType":"VariableDeclaration","scope":2774,"src":"2424:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2424:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"v","nameLocation":"2456:1:13","nodeType":"VariableDeclaration","scope":2774,"src":"2450:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2711,"name":"uint8","nodeType":"ElementaryTypeName","src":"2450:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"r","nameLocation":"2475:1:13","nodeType":"VariableDeclaration","scope":2774,"src":"2467:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2467:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"s","nameLocation":"2494:1:13","nodeType":"VariableDeclaration","scope":2774,"src":"2486:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2486:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2343:158:13"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[],"src":"2526:0:13"},"scope":2836,"src":"2328:637:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2865],"body":{"id":2789,"nodeType":"Block","src":"3104:48:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2783,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3121:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3360_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":2785,"indexExpression":{"id":2784,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"3129:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3121:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"3121:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3360_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3360_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3121:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2782,"id":2788,"nodeType":"Return","src":"3114:31:13"}]},"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"2971:50:13","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3035:6:13","nodeType":"FunctionDefinition","overrides":{"id":2779,"nodeType":"OverrideSpecifier","overrides":[],"src":"3077:8:13"},"parameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"owner","nameLocation":"3050:5:13","nodeType":"VariableDeclaration","scope":2790,"src":"3042:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"3042:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3041:15:13"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2790,"src":"3095:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:9:13"},"scope":2836,"src":"3026:126:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2871],"body":{"id":2800,"nodeType":"Block","src":"3345:44:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2797,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"3362:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3362:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2796,"id":2799,"nodeType":"Return","src":"3355:27:13"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"3158:60:13","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3285:16:13","nodeType":"FunctionDefinition","overrides":{"id":2793,"nodeType":"OverrideSpecifier","overrides":[],"src":"3318:8:13"},"parameters":{"id":2792,"nodeType":"ParameterList","parameters":[],"src":"3301:2:13"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"3336:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3336:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3335:9:13"},"scope":2836,"src":"3276:113:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2829,"nodeType":"Block","src":"3597:137:13","statements":[{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"nonce","nameLocation":"3643:5:13","nodeType":"VariableDeclaration","scope":2829,"src":"3607:41:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2812,"nodeType":"UserDefinedTypeName","pathNode":{"id":2811,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"3607:27:13"},"referencedDeclaration":3360,"src":"3607:27:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"id":2817,"initialValue":{"baseExpression":{"id":2814,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3651:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3360_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":2816,"indexExpression":{"id":2815,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"3659:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3651:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3607:58:13"},{"expression":{"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2818,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3675:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2819,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"3685:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3372,"src":"3685:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3360_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3360_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3675:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2823,"nodeType":"ExpressionStatement","src":"3675:25:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2824,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"3710:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"3710:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3360_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3360_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"ExpressionStatement","src":"3710:17:13"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"3395:120:13","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3529:9:13","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"owner","nameLocation":"3547:5:13","nodeType":"VariableDeclaration","scope":2830,"src":"3539:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"3539:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3538:15:13"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"current","nameLocation":"3588:7:13","nodeType":"VariableDeclaration","scope":2830,"src":"3580:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3579:17:13"},"scope":2836,"src":"3520:214:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"3740:254:13","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2835,"mutability":"mutable","name":"__gap","nameLocation":"4019:5:13","nodeType":"VariableDeclaration","scope":2836,"src":"3999:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2834,"length":{"hexValue":"3439","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:2:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3999:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":2837,"src":"999:3028:13","usedErrors":[]}],"src":"128:3900:13"},"id":13},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[2872]},"id":2873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2838,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"139:480:14","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2872,"linearizedBaseContracts":[2872],"name":"IERC20PermitUpgradeable","nameLocation":"630:23:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"660:792:14","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2857,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1466:6:14","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"owner","nameLocation":"1490:5:14","nodeType":"VariableDeclaration","scope":2857,"src":"1482:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"spender","nameLocation":"1513:7:14","nodeType":"VariableDeclaration","scope":2857,"src":"1505:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"value","nameLocation":"1538:5:14","nodeType":"VariableDeclaration","scope":2857,"src":"1530:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"deadline","nameLocation":"1561:8:14","nodeType":"VariableDeclaration","scope":2857,"src":"1553:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"v","nameLocation":"1585:1:14","nodeType":"VariableDeclaration","scope":2857,"src":"1579:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2849,"name":"uint8","nodeType":"ElementaryTypeName","src":"1579:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"r","nameLocation":"1604:1:14","nodeType":"VariableDeclaration","scope":2857,"src":"1596:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1596:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"s","nameLocation":"1623:1:14","nodeType":"VariableDeclaration","scope":2857,"src":"1615:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1615:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1472:158:14"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"1639:0:14"},"scope":2872,"src":"1457:183:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"1646:294:14","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2865,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1954:6:14","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"owner","nameLocation":"1969:5:14","nodeType":"VariableDeclaration","scope":2865,"src":"1961:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"1961:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1960:15:14"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2865,"src":"1999:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1998:9:14"},"scope":2872,"src":"1945:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"2014:128:14","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2871,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2209:16:14","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"2225:2:14"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2871,"src":"2251:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2251:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2250:9:14"},"scope":2872,"src":"2200:60:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2873,"src":"620:1642:14","usedErrors":[]}],"src":"114:2149:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156]},"id":3157,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2874,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"126:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3156,"linearizedBaseContracts":[3156],"name":"AddressUpgradeable","nameLocation":"202:18:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2889,"nodeType":"Block","src":"1252:254:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2883,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"1476:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2882,"id":2888,"nodeType":"Return","src":"1469:30:15"}]},"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"227:954:15","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:15","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"account","nameLocation":"1214:7:15","nodeType":"VariableDeclaration","scope":2890,"src":"1206:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:15"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"1246:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2880,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:15"},"scope":3156,"src":"1186:320:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"2494:241:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2901,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3156","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3156","typeString":"library AddressUpgradeable"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:15","typeDescriptions":{}}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2904,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2537:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"ExpressionStatement","src":"2504:73:15"},{"assignments":[2910,null],"declarations":[{"constant":false,"id":2910,"mutability":"mutable","name":"success","nameLocation":"2594:7:15","nodeType":"VariableDeclaration","scope":2923,"src":"2589:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2909,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2917,"initialValue":{"arguments":[{"hexValue":"","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2911,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2607:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2629:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:15"},{"expression":{"arguments":[{"id":2919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2658:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2922,"nodeType":"ExpressionStatement","src":"2650:78:15"}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"1512:906:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:15","nodeType":"FunctionDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:15","nodeType":"VariableDeclaration","scope":2924,"src":"2442:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"amount","nameLocation":"2477:6:15","nodeType":"VariableDeclaration","scope":2924,"src":"2469:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:15"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[],"src":"2494:0:15"},"scope":3156,"src":"2423:312:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2941,"nodeType":"Block","src":"3566:96:15","statements":[{"expression":{"arguments":[{"id":2935,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3605:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2936,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"3613:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2934,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2982,3026],"referencedDeclaration":3026,"src":"3583:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2933,"id":2940,"nodeType":"Return","src":"3576:79:15"}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"2741:731:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2942,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:15","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"target","nameLocation":"3507:6:15","nodeType":"VariableDeclaration","scope":2942,"src":"3499:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"data","nameLocation":"3528:4:15","nodeType":"VariableDeclaration","scope":2942,"src":"3515:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:15"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2942,"src":"3552:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2931,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:15"},"scope":3156,"src":"3477:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2961,"nodeType":"Block","src":"4031:76:15","statements":[{"expression":{"arguments":[{"id":2955,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4070:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2956,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"4078:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2958,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"4087:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2954,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2982,3026],"referencedDeclaration":3026,"src":"4048:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4048:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2953,"id":2960,"nodeType":"Return","src":"4041:59:15"}]},"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"3668:211:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:15","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"target","nameLocation":"3923:6:15","nodeType":"VariableDeclaration","scope":2962,"src":"3915:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"data","nameLocation":"3952:4:15","nodeType":"VariableDeclaration","scope":2962,"src":"3939:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2946,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:15","nodeType":"VariableDeclaration","scope":2962,"src":"3966:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2948,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:15"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"4017:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:15"},"scope":3156,"src":"3884:223:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2981,"nodeType":"Block","src":"4612:111:15","statements":[{"expression":{"arguments":[{"id":2975,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"4651:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2976,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"4659:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"4665:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2974,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2982,3026],"referencedDeclaration":3026,"src":"4629:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4629:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2973,"id":2980,"nodeType":"Return","src":"4622:94:15"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"4113:351:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2982,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:15","nodeType":"FunctionDefinition","parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"target","nameLocation":"4517:6:15","nodeType":"VariableDeclaration","scope":2982,"src":"4509:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"data","nameLocation":"4546:4:15","nodeType":"VariableDeclaration","scope":2982,"src":"4533:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2966,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"value","nameLocation":"4568:5:15","nodeType":"VariableDeclaration","scope":2982,"src":"4560:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:15"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2982,"src":"4598:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2971,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:15"},"scope":3156,"src":"4469:254:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3025,"nodeType":"Block","src":"5150:267:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2999,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3156","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3156","typeString":"library AddressUpgradeable"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:15","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5168:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5168:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5193:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5160:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"ExpressionStatement","src":"5160:81:15"},{"assignments":[3008,3010],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"success","nameLocation":"5257:7:15","nodeType":"VariableDeclaration","scope":3025,"src":"5252:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3007,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:15","nodeType":"VariableDeclaration","scope":3025,"src":"5266:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3009,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3017,"initialValue":{"arguments":[{"id":3015,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"5319:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3011,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"5293:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5293:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5312:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:15"},{"expression":{"arguments":[{"id":3019,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"5368:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3020,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"5376:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3021,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"5385:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3022,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"5397:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3018,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"5341:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2995,"id":3024,"nodeType":"Return","src":"5334:76:15"}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"4729:237:15","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:15","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"target","nameLocation":"5019:6:15","nodeType":"VariableDeclaration","scope":3026,"src":"5011:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"data","nameLocation":"5048:4:15","nodeType":"VariableDeclaration","scope":3026,"src":"5035:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2986,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"value","nameLocation":"5070:5:15","nodeType":"VariableDeclaration","scope":3026,"src":"5062:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:15","nodeType":"VariableDeclaration","scope":3026,"src":"5085:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2990,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:15"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"5136:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2993,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:15"},"scope":3156,"src":"4971:446:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3042,"nodeType":"Block","src":"5694:97:15","statements":[{"expression":{"arguments":[{"id":3037,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"5730:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3038,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5738:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3036,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3043,3072],"referencedDeclaration":3072,"src":"5711:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5711:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3035,"id":3041,"nodeType":"Return","src":"5704:80:15"}]},"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"5423:166:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3043,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:15","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"target","nameLocation":"5630:6:15","nodeType":"VariableDeclaration","scope":3043,"src":"5622:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"data","nameLocation":"5651:4:15","nodeType":"VariableDeclaration","scope":3043,"src":"5638:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3030,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:15"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"5680:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3033,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:15"},"scope":3156,"src":"5594:197:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3071,"nodeType":"Block","src":"6133:168:15","statements":[{"assignments":[3056,3058],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"success","nameLocation":"6149:7:15","nodeType":"VariableDeclaration","scope":3071,"src":"6144:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3055,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:15","nodeType":"VariableDeclaration","scope":3071,"src":"6158:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3057,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3063,"initialValue":{"arguments":[{"id":3061,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"6203:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3059,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"6185:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6185:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:15"},{"expression":{"arguments":[{"id":3065,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"6252:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3066,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"6260:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3067,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"6269:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3068,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"6281:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3064,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"6225:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6225:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3054,"id":3070,"nodeType":"Return","src":"6218:76:15"}]},"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"5797:173:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3072,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:15","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"target","nameLocation":"6020:6:15","nodeType":"VariableDeclaration","scope":3072,"src":"6012:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"data","nameLocation":"6049:4:15","nodeType":"VariableDeclaration","scope":3072,"src":"6036:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3047,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:15","nodeType":"VariableDeclaration","scope":3072,"src":"6063:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3049,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:15"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3072,"src":"6119:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3052,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:15"},"scope":3156,"src":"5975:326:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"6783:434:15","statements":[{"condition":{"id":3086,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6797:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3108,"nodeType":"Block","src":"7153:58:15","statements":[{"expression":{"arguments":[{"id":3104,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"7175:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3105,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"7187:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3103,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7167:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7167:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3107,"nodeType":"ExpressionStatement","src":"7167:33:15"}]},"id":3109,"nodeType":"IfStatement","src":"6793:418:15","trueBody":{"id":3102,"nodeType":"Block","src":"6806:341:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3087,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"6824:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6824:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3099,"nodeType":"IfStatement","src":"6820:286:15","trueBody":{"id":3098,"nodeType":"Block","src":"6848:258:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3093,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7050:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3092,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"7039:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7039:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7031:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3097,"nodeType":"ExpressionStatement","src":"7031:60:15"}]}},{"expression":{"id":3100,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"7126:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3085,"id":3101,"nodeType":"Return","src":"7119:17:15"}]}}]},"documentation":{"id":3073,"nodeType":"StructuredDocumentation","src":"6307:277:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:15","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"target","nameLocation":"6642:6:15","nodeType":"VariableDeclaration","scope":3111,"src":"6634:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"success","nameLocation":"6663:7:15","nodeType":"VariableDeclaration","scope":3111,"src":"6658:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3076,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:15","nodeType":"VariableDeclaration","scope":3111,"src":"6680:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3078,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:15","nodeType":"VariableDeclaration","scope":3111,"src":"6713:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3080,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:15"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"6769:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3083,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:15"},"scope":3156,"src":"6589:628:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"7598:135:15","statements":[{"condition":{"id":3123,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"7612:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3132,"nodeType":"Block","src":"7669:58:15","statements":[{"expression":{"arguments":[{"id":3128,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"7691:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3129,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"7703:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3127,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7683:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3131,"nodeType":"ExpressionStatement","src":"7683:33:15"}]},"id":3133,"nodeType":"IfStatement","src":"7608:119:15","trueBody":{"id":3126,"nodeType":"Block","src":"7621:42:15","statements":[{"expression":{"id":3124,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"7642:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3122,"id":3125,"nodeType":"Return","src":"7635:17:15"}]}}]},"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"7223:210:15","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:15","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"success","nameLocation":"7478:7:15","nodeType":"VariableDeclaration","scope":3135,"src":"7473:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3113,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:15","nodeType":"VariableDeclaration","scope":3135,"src":"7495:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3115,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:15","nodeType":"VariableDeclaration","scope":3135,"src":"7528:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3117,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:15"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"7584:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3120,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:15"},"scope":3156,"src":"7438:295:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"7822:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3142,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"7898:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7898:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3152,"nodeType":"Block","src":"8228:45:15","statements":[{"expression":{"arguments":[{"id":3149,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"8249:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3148,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8242:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"ExpressionStatement","src":"8242:20:15"}]},"id":3153,"nodeType":"IfStatement","src":"7894:379:15","trueBody":{"id":3147,"nodeType":"Block","src":"7921:301:15","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:15","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:15"},"nodeType":"YulFunctionCall","src":"8120:17:15"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:15","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:15"},"nodeType":"YulFunctionCall","src":"8161:19:15"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:15"},"nodeType":"YulFunctionCall","src":"8154:44:15"},"nodeType":"YulExpressionStatement","src":"8154:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3137,"isOffset":false,"isSlot":false,"src":"8126:10:15","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"8169:10:15","valueSize":1}],"id":3146,"nodeType":"InlineAssembly","src":"8070:142:15"}]}}]},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:15","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:15","nodeType":"VariableDeclaration","scope":3155,"src":"7756:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3136,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:15","nodeType":"VariableDeclaration","scope":3155,"src":"7781:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3138,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:15"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"7822:0:15"},"scope":3156,"src":"7739:540:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3157,"src":"194:8087:15","usedErrors":[]}],"src":"101:8181:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol","exportedSymbols":{"ArraysUpgradeable":[3312],"MathUpgradeable":[5039],"StorageSlotUpgradeable":[3488]},"id":3313,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3158,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:16"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"./StorageSlotUpgradeable.sol","id":3159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3313,"sourceUnit":3489,"src":"125:38:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":3160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3313,"sourceUnit":5040,"src":"164:36:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ArraysUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"202:63:16","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3312,"linearizedBaseContracts":[3312],"name":"ArraysUpgradeable","nameLocation":"274:17:16","nodeType":"ContractDefinition","nodes":[{"id":3164,"libraryName":{"id":3162,"name":"StorageSlotUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3488,"src":"304:22:16"},"nodeType":"UsingForDirective","src":"298:41:16","typeName":{"id":3163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"331:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3247,"nodeType":"Block","src":"855:845:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3175,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"869:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"869:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"885:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"869:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3182,"nodeType":"IfStatement","src":"865:56:16","trueBody":{"id":3181,"nodeType":"Block","src":"888:33:16","statements":[{"expression":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"909:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3174,"id":3180,"nodeType":"Return","src":"902:8:16"}]}},{"assignments":[3184],"declarations":[{"constant":false,"id":3184,"mutability":"mutable","name":"low","nameLocation":"939:3:16","nodeType":"VariableDeclaration","scope":3247,"src":"931:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3186,"initialValue":{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"931:15:16"},{"assignments":[3188],"declarations":[{"constant":false,"id":3188,"mutability":"mutable","name":"high","nameLocation":"964:4:16","nodeType":"VariableDeclaration","scope":3247,"src":"956:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3191,"initialValue":{"expression":{"id":3189,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"971:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"971:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"956:27:16"},{"body":{"id":3223,"nodeType":"Block","src":"1013:426:16","statements":[{"assignments":[3196],"declarations":[{"constant":false,"id":3196,"mutability":"mutable","name":"mid","nameLocation":"1035:3:16","nodeType":"VariableDeclaration","scope":3223,"src":"1027:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3202,"initialValue":{"arguments":[{"id":3199,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1065:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3200,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"1070:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3197,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1041:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5039_$","typeString":"type(library MathUpgradeable)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4240,"src":"1041:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1041:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1027:48:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3204,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"1305:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3205,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"1312:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3203,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3269,3290,3311],"referencedDeclaration":3311,"src":"1292:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3443_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlotUpgradeable.Uint256Slot storage pointer)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1292:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot storage pointer"}},"id":3207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3442,"src":"1292:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3208,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"1325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1292:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3221,"nodeType":"Block","src":"1383:46:16","statements":[{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1401:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"1407:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1401:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3220,"nodeType":"ExpressionStatement","src":"1401:13:16"}]},"id":3222,"nodeType":"IfStatement","src":"1288:141:16","trueBody":{"id":3214,"nodeType":"Block","src":"1334:43:16","statements":[{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3210,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"1352:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3211,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"1359:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1352:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3213,"nodeType":"ExpressionStatement","src":"1352:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1001:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3193,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"1007:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1001:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"WhileStatement","src":"994:445:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1556:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1556:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3229,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"1580:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1587:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1587:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3228,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3269,3290,3311],"referencedDeclaration":3311,"src":"1567:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3443_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlotUpgradeable.Uint256Slot storage pointer)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1567:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot storage pointer"}},"id":3234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3442,"src":"1567:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3235,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"1605:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1567:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1556:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3245,"nodeType":"Block","src":"1659:35:16","statements":[{"expression":{"id":3243,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1680:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3174,"id":3244,"nodeType":"Return","src":"1673:10:16"}]},"id":3246,"nodeType":"IfStatement","src":"1552:142:16","trueBody":{"id":3242,"nodeType":"Block","src":"1614:39:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1635:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1641:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1635:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3174,"id":3241,"nodeType":"Return","src":"1628:14:16"}]}}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"345:407:16","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"766:14:16","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"array","nameLocation":"799:5:16","nodeType":"VariableDeclaration","scope":3248,"src":"781:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3167,"nodeType":"ArrayTypeName","src":"781:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"element","nameLocation":"814:7:16","nodeType":"VariableDeclaration","scope":3248,"src":"806:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"780:42:16"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3248,"src":"846:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:9:16"},"scope":3312,"src":"757:943:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3268,"nodeType":"Block","src":"2027:220:16","statements":[{"assignments":[3261],"declarations":[{"constant":false,"id":3261,"mutability":"mutable","name":"slot","nameLocation":"2045:4:16","nodeType":"VariableDeclaration","scope":3268,"src":"2037:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2037:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3262,"nodeType":"VariableDeclarationStatement","src":"2037:12:16"},{"AST":{"nodeType":"YulBlock","src":"2111:92:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2132:1:16","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"2135:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2125:6:16"},"nodeType":"YulFunctionCall","src":"2125:19:16"},"nodeType":"YulExpressionStatement","src":"2125:19:16"},{"nodeType":"YulAssignment","src":"2157:36:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2179:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2182:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2169:9:16"},"nodeType":"YulFunctionCall","src":"2169:18:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2189:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2165:3:16"},"nodeType":"YulFunctionCall","src":"2165:28:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"2157:4:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3252,"isOffset":false,"isSlot":true,"src":"2135:8:16","suffix":"slot","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"2189:3:16","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2157:4:16","valueSize":1}],"id":3263,"nodeType":"InlineAssembly","src":"2102:101:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3264,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"2219:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"2219:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3434_storage_ptr_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2219:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3434_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"functionReturnParameters":3259,"id":3267,"nodeType":"Return","src":"2212:28:16"}]},"documentation":{"id":3249,"nodeType":"StructuredDocumentation","src":"1706:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"1911:12:16","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"arr","nameLocation":"1942:3:16","nodeType":"VariableDeclaration","scope":3269,"src":"1924:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3250,"name":"address","nodeType":"ElementaryTypeName","src":"1924:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3251,"nodeType":"ArrayTypeName","src":"1924:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3254,"mutability":"mutable","name":"pos","nameLocation":"1955:3:16","nodeType":"VariableDeclaration","scope":3269,"src":"1947:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:36:16"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"1983:42:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3434_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":3257,"nodeType":"UserDefinedTypeName","pathNode":{"id":3256,"name":"StorageSlotUpgradeable.AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"1983:34:16"},"referencedDeclaration":3434,"src":"1983:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3434_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1982:44:16"},"scope":3312,"src":"1902:345:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"2574:220:16","statements":[{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"slot","nameLocation":"2592:4:16","nodeType":"VariableDeclaration","scope":3289,"src":"2584:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2584:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3283,"nodeType":"VariableDeclarationStatement","src":"2584:12:16"},{"AST":{"nodeType":"YulBlock","src":"2658:92:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2679:1:16","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"2682:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2672:6:16"},"nodeType":"YulFunctionCall","src":"2672:19:16"},"nodeType":"YulExpressionStatement","src":"2672:19:16"},{"nodeType":"YulAssignment","src":"2704:36:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2726:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2729:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2716:9:16"},"nodeType":"YulFunctionCall","src":"2716:18:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2736:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:16"},"nodeType":"YulFunctionCall","src":"2712:28:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"2704:4:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3273,"isOffset":false,"isSlot":true,"src":"2682:8:16","suffix":"slot","valueSize":1},{"declaration":3275,"isOffset":false,"isSlot":false,"src":"2736:3:16","valueSize":1},{"declaration":3282,"isOffset":false,"isSlot":false,"src":"2704:4:16","valueSize":1}],"id":3284,"nodeType":"InlineAssembly","src":"2649:101:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3285,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2766:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"2766:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3440_storage_ptr_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.Bytes32Slot storage pointer)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2766:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3440_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot storage pointer"}},"functionReturnParameters":3280,"id":3288,"nodeType":"Return","src":"2759:28:16"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"2253:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"2458:12:16","nodeType":"FunctionDefinition","parameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"arr","nameLocation":"2489:3:16","nodeType":"VariableDeclaration","scope":3290,"src":"2471:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2471:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3272,"nodeType":"ArrayTypeName","src":"2471:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"pos","nameLocation":"2502:3:16","nodeType":"VariableDeclaration","scope":3290,"src":"2494:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2494:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2470:36:16"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"2530:42:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3440_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":3278,"nodeType":"UserDefinedTypeName","pathNode":{"id":3277,"name":"StorageSlotUpgradeable.Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":3440,"src":"2530:34:16"},"referencedDeclaration":3440,"src":"2530:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3440_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2529:44:16"},"scope":3312,"src":"2449:345:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"3121:220:16","statements":[{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"slot","nameLocation":"3139:4:16","nodeType":"VariableDeclaration","scope":3310,"src":"3131:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3131:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3304,"nodeType":"VariableDeclarationStatement","src":"3131:12:16"},{"AST":{"nodeType":"YulBlock","src":"3205:92:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:1:16","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"3229:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:16"},"nodeType":"YulFunctionCall","src":"3219:19:16"},"nodeType":"YulExpressionStatement","src":"3219:19:16"},{"nodeType":"YulAssignment","src":"3251:36:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3273:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3263:9:16"},"nodeType":"YulFunctionCall","src":"3263:18:16"},{"name":"pos","nodeType":"YulIdentifier","src":"3283:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3259:3:16"},"nodeType":"YulFunctionCall","src":"3259:28:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"3251:4:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3294,"isOffset":false,"isSlot":true,"src":"3229:8:16","suffix":"slot","valueSize":1},{"declaration":3296,"isOffset":false,"isSlot":false,"src":"3283:3:16","valueSize":1},{"declaration":3303,"isOffset":false,"isSlot":false,"src":"3251:4:16","valueSize":1}],"id":3305,"nodeType":"InlineAssembly","src":"3196:101:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3306,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"3313:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3487,"src":"3313:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3443_storage_ptr_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.Uint256Slot storage pointer)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3313:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot storage pointer"}},"functionReturnParameters":3301,"id":3309,"nodeType":"Return","src":"3306:28:16"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"2800:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"3005:12:16","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"arr","nameLocation":"3036:3:16","nodeType":"VariableDeclaration","scope":3311,"src":"3018:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"3018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3293,"nodeType":"ArrayTypeName","src":"3018:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"pos","nameLocation":"3049:3:16","nodeType":"VariableDeclaration","scope":3311,"src":"3041:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3017:36:16"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"3077:42:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":3299,"nodeType":"UserDefinedTypeName","pathNode":{"id":3298,"name":"StorageSlotUpgradeable.Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":3443,"src":"3077:34:16"},"referencedDeclaration":3443,"src":"3077:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"3076:44:16"},"scope":3312,"src":"2996:345:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3313,"src":"266:3077:16","usedErrors":[]}],"src":"100:3244:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ContextUpgradeable":[3354],"Initializable":[436]},"id":3355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3314,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3355,"sourceUnit":437,"src":"110:42:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3317,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"691:13:17"},"id":3318,"nodeType":"InheritanceSpecifier","src":"691:13:17"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"154:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3354,"linearizedBaseContracts":[3354,436],"name":"ContextUpgradeable","nameLocation":"669:18:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3323,"nodeType":"Block","src":"763:7:17","statements":[]},"id":3324,"implemented":true,"kind":"function","modifiers":[{"id":3321,"kind":"modifierInvocation","modifierName":{"id":3320,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"746:16:17"},"nodeType":"ModifierInvocation","src":"746:16:17"}],"name":"__Context_init","nameLocation":"720:14:17","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"734:2:17"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[],"src":"763:0:17"},"scope":3354,"src":"711:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3329,"nodeType":"Block","src":"838:7:17","statements":[]},"id":3330,"implemented":true,"kind":"function","modifiers":[{"id":3327,"kind":"modifierInvocation","modifierName":{"id":3326,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"821:16:17"},"nodeType":"ModifierInvocation","src":"821:16:17"}],"name":"__Context_init_unchained","nameLocation":"785:24:17","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"809:2:17"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"838:0:17"},"scope":3354,"src":"776:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"912:34:17","statements":[{"expression":{"expression":{"id":3335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3334,"id":3337,"nodeType":"Return","src":"922:17:17"}]},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:17","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[],"src":"869:2:17"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3332,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:17"},"scope":3354,"src":"850:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"1019:32:17","statements":[{"expression":{"expression":{"id":3344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3343,"id":3346,"nodeType":"Return","src":"1029:15:17"}]},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:17","nodeType":"FunctionDefinition","parameters":{"id":3340,"nodeType":"ParameterList","parameters":[],"src":"969:2:17"},"returnParameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3348,"src":"1003:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:17"},"scope":3354,"src":"952:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"1057:254:17","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3353,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:17","nodeType":"VariableDeclaration","scope":3354,"src":"1316:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"length":{"hexValue":"3530","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3355,"src":"651:693:17","usedErrors":[]}],"src":"86:1259:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[3428]},"id":3429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3356,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"112:311:18","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3428,"linearizedBaseContracts":[3428],"name":"CountersUpgradeable","nameLocation":"432:19:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":3360,"members":[{"constant":false,"id":3359,"mutability":"mutable","name":"_value","nameLocation":"805:6:18","nodeType":"VariableDeclaration","scope":3360,"src":"797:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:18","nodeType":"StructDefinition","scope":3428,"src":"458:374:18","visibility":"public"},{"body":{"id":3371,"nodeType":"Block","src":"912:38:18","statements":[{"expression":{"expression":{"id":3368,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"929:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"929:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3367,"id":3370,"nodeType":"Return","src":"922:21:18"}]},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:18","nodeType":"FunctionDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"counter","nameLocation":"871:7:18","nodeType":"VariableDeclaration","scope":3372,"src":"855:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3362,"nodeType":"UserDefinedTypeName","pathNode":{"id":3361,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"855:7:18"},"referencedDeclaration":3360,"src":"855:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:18"},"returnParameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3372,"src":"903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:18"},"scope":3428,"src":"838:112:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3385,"nodeType":"Block","src":"1009:70:18","statements":[{"id":3384,"nodeType":"UncheckedBlock","src":"1019:54:18","statements":[{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3378,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"1043:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"nodeType":"ExpressionStatement","src":"1043:19:18"}]}]},"id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:18","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"counter","nameLocation":"991:7:18","nodeType":"VariableDeclaration","scope":3386,"src":"975:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3374,"nodeType":"UserDefinedTypeName","pathNode":{"id":3373,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"975:7:18"},"referencedDeclaration":3360,"src":"975:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:18"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[],"src":"1009:0:18"},"scope":3428,"src":"956:123:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"1138:176:18","statements":[{"assignments":[3393],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"value","nameLocation":"1156:5:18","nodeType":"VariableDeclaration","scope":3413,"src":"1148:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3396,"initialValue":{"expression":{"id":3394,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"1164:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"1164:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1196:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1188:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3403,"nodeType":"ExpressionStatement","src":"1188:49:18"},{"id":3412,"nodeType":"UncheckedBlock","src":"1247:61:18","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3404,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"1271:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1288:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"1271:26:18"}]}]},"id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:18","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"counter","nameLocation":"1120:7:18","nodeType":"VariableDeclaration","scope":3414,"src":"1104:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3388,"nodeType":"UserDefinedTypeName","pathNode":{"id":3387,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"1104:7:18"},"referencedDeclaration":3360,"src":"1104:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:18"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[],"src":"1138:0:18"},"scope":3428,"src":"1085:229:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"1369:35:18","statements":[{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3420,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1379:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"1379:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"1379:18:18"}]},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:18","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"counter","nameLocation":"1351:7:18","nodeType":"VariableDeclaration","scope":3427,"src":"1335:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3416,"nodeType":"UserDefinedTypeName","pathNode":{"id":3415,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"1335:7:18"},"referencedDeclaration":3360,"src":"1335:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3360_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:18"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[],"src":"1369:0:18"},"scope":3428,"src":"1320:84:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3429,"src":"424:982:18","usedErrors":[]}],"src":"87:1320:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[3488]},"id":3489,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3430,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"130:1148:19","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":3488,"linearizedBaseContracts":[3488],"name":"StorageSlotUpgradeable","nameLocation":"1287:22:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":3434,"members":[{"constant":false,"id":3433,"mutability":"mutable","name":"value","nameLocation":"1353:5:19","nodeType":"VariableDeclaration","scope":3434,"src":"1345:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1323:11:19","nodeType":"StructDefinition","scope":3488,"src":"1316:49:19","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":3437,"members":[{"constant":false,"id":3436,"mutability":"mutable","name":"value","nameLocation":"1405:5:19","nodeType":"VariableDeclaration","scope":3437,"src":"1400:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3435,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1378:11:19","nodeType":"StructDefinition","scope":3488,"src":"1371:46:19","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":3440,"members":[{"constant":false,"id":3439,"mutability":"mutable","name":"value","nameLocation":"1460:5:19","nodeType":"VariableDeclaration","scope":3440,"src":"1452:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1430:11:19","nodeType":"StructDefinition","scope":3488,"src":"1423:49:19","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":3443,"members":[{"constant":false,"id":3442,"mutability":"mutable","name":"value","nameLocation":"1515:5:19","nodeType":"VariableDeclaration","scope":3443,"src":"1507:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1485:11:19","nodeType":"StructDefinition","scope":3488,"src":"1478:49:19","visibility":"public"},{"body":{"id":3453,"nodeType":"Block","src":"1709:106:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1771:38:19","statements":[{"nodeType":"YulAssignment","src":"1785:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"1795:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1785:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3450,"isOffset":false,"isSlot":true,"src":"1785:6:19","suffix":"slot","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"1795:4:19","valueSize":1}],"id":3452,"nodeType":"InlineAssembly","src":"1762:47:19"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"1533:87:19","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1634:14:19","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"slot","nameLocation":"1657:4:19","nodeType":"VariableDeclaration","scope":3454,"src":"1649:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1648:14:19"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"r","nameLocation":"1706:1:19","nodeType":"VariableDeclaration","scope":3454,"src":"1686:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3434_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":3449,"nodeType":"UserDefinedTypeName","pathNode":{"id":3448,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"1686:11:19"},"referencedDeclaration":3434,"src":"1686:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3434_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1685:23:19"},"scope":3488,"src":"1625:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"1997:106:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2059:38:19","statements":[{"nodeType":"YulAssignment","src":"2073:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2083:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2073:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3461,"isOffset":false,"isSlot":true,"src":"2073:6:19","suffix":"slot","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"2083:4:19","valueSize":1}],"id":3463,"nodeType":"InlineAssembly","src":"2050:47:19"}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"1821:87:19","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1922:14:19","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"slot","nameLocation":"1945:4:19","nodeType":"VariableDeclaration","scope":3465,"src":"1937:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:14:19"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"r","nameLocation":"1994:1:19","nodeType":"VariableDeclaration","scope":3465,"src":"1974:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3437_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":3460,"nodeType":"UserDefinedTypeName","pathNode":{"id":3459,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":3437,"src":"1974:11:19"},"referencedDeclaration":3437,"src":"1974:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3437_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"1973:23:19"},"scope":3488,"src":"1913:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3475,"nodeType":"Block","src":"2285:106:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2347:38:19","statements":[{"nodeType":"YulAssignment","src":"2361:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2371:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2361:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3472,"isOffset":false,"isSlot":true,"src":"2361:6:19","suffix":"slot","valueSize":1},{"declaration":3468,"isOffset":false,"isSlot":false,"src":"2371:4:19","valueSize":1}],"id":3474,"nodeType":"InlineAssembly","src":"2338:47:19"}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"2109:87:19","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3476,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2210:14:19","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"slot","nameLocation":"2233:4:19","nodeType":"VariableDeclaration","scope":3476,"src":"2225:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:14:19"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"r","nameLocation":"2282:1:19","nodeType":"VariableDeclaration","scope":3476,"src":"2262:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3440_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":3471,"nodeType":"UserDefinedTypeName","pathNode":{"id":3470,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":3440,"src":"2262:11:19"},"referencedDeclaration":3440,"src":"2262:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3440_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2261:23:19"},"scope":3488,"src":"2201:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"2573:106:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2635:38:19","statements":[{"nodeType":"YulAssignment","src":"2649:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2659:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2649:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3483,"isOffset":false,"isSlot":true,"src":"2649:6:19","suffix":"slot","valueSize":1},{"declaration":3479,"isOffset":false,"isSlot":false,"src":"2659:4:19","valueSize":1}],"id":3485,"nodeType":"InlineAssembly","src":"2626:47:19"}]},"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"2397:87:19","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2498:14:19","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"slot","nameLocation":"2521:4:19","nodeType":"VariableDeclaration","scope":3487,"src":"2513:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2512:14:19"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"r","nameLocation":"2570:1:19","nodeType":"VariableDeclaration","scope":3487,"src":"2550:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":3482,"nodeType":"UserDefinedTypeName","pathNode":{"id":3481,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":3443,"src":"2550:11:19"},"referencedDeclaration":3443,"src":"2550:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3443_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2549:23:19"},"scope":3488,"src":"2489:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3489,"src":"1279:1402:19","usedErrors":[]}],"src":"105:2577:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[5039],"StringsUpgradeable":[3663]},"id":3664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3490,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":3491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3664,"sourceUnit":5040,"src":"126:36:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3492,"nodeType":"StructuredDocumentation","src":"164:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":3663,"linearizedBaseContracts":[3663],"name":"StringsUpgradeable","nameLocation":"207:18:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3495,"mutability":"constant","name":"_SYMBOLS","nameLocation":"257:8:20","nodeType":"VariableDeclaration","scope":3663,"src":"232:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3493,"name":"bytes16","nodeType":"ElementaryTypeName","src":"232:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"268:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3498,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"315:15:20","nodeType":"VariableDeclaration","scope":3663,"src":"292:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3496,"name":"uint8","nodeType":"ElementaryTypeName","src":"292:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"333:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3545,"nodeType":"Block","src":"508:636:20","statements":[{"id":3544,"nodeType":"UncheckedBlock","src":"518:620:20","statements":[{"assignments":[3507],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"length","nameLocation":"550:6:20","nodeType":"VariableDeclaration","scope":3544,"src":"542:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"581:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3508,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"559:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5039_$","typeString":"type(library MathUpgradeable)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4876,"src":"559:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"559:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"559:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"542:49:20"},{"assignments":[3516],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"buffer","nameLocation":"619:6:20","nodeType":"VariableDeclaration","scope":3544,"src":"605:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3515,"name":"string","nodeType":"ElementaryTypeName","src":"605:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3521,"initialValue":{"arguments":[{"id":3519,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"639:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"628:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3517,"name":"string","nodeType":"ElementaryTypeName","src":"632:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"628:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"605:41:20"},{"assignments":[3523],"declarations":[{"constant":false,"id":3523,"mutability":"mutable","name":"ptr","nameLocation":"668:3:20","nodeType":"VariableDeclaration","scope":3544,"src":"660:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"660:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3524,"nodeType":"VariableDeclarationStatement","src":"660:11:20"},{"AST":{"nodeType":"YulBlock","src":"741:67:20","statements":[{"nodeType":"YulAssignment","src":"759:35:20","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"770:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"782:2:20","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"786:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:20"},"nodeType":"YulFunctionCall","src":"778:15:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:20"},"nodeType":"YulFunctionCall","src":"766:28:20"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"759:3:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3516,"isOffset":false,"isSlot":false,"src":"770:6:20","valueSize":1},{"declaration":3507,"isOffset":false,"isSlot":false,"src":"786:6:20","valueSize":1},{"declaration":3523,"isOffset":false,"isSlot":false,"src":"759:3:20","valueSize":1}],"id":3525,"nodeType":"InlineAssembly","src":"732:76:20"},{"body":{"id":3540,"nodeType":"Block","src":"834:267:20","statements":[{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"852:5:20","subExpression":{"id":3527,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"852:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3529,"nodeType":"ExpressionStatement","src":"852:5:20"},{"AST":{"nodeType":"YulBlock","src":"935:84:20","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"965:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"986:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"975:3:20"},"nodeType":"YulFunctionCall","src":"975:14:20"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"991:8:20"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"970:4:20"},"nodeType":"YulFunctionCall","src":"970:30:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"957:7:20"},"nodeType":"YulFunctionCall","src":"957:44:20"},"nodeType":"YulExpressionStatement","src":"957:44:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3495,"isOffset":false,"isSlot":false,"src":"991:8:20","valueSize":1},{"declaration":3523,"isOffset":false,"isSlot":false,"src":"965:3:20","valueSize":1},{"declaration":3501,"isOffset":false,"isSlot":false,"src":"979:5:20","valueSize":1}],"id":3530,"nodeType":"InlineAssembly","src":"926:93:20"},{"expression":{"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1036:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3534,"nodeType":"ExpressionStatement","src":"1036:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1069:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1078:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1069:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3539,"nodeType":"IfStatement","src":"1065:21:20","trueBody":{"id":3538,"nodeType":"Break","src":"1081:5:20"}}]},"condition":{"hexValue":"74727565","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"828:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3541,"nodeType":"WhileStatement","src":"821:280:20"},{"expression":{"id":3542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"1121:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3505,"id":3543,"nodeType":"Return","src":"1114:13:20"}]}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"342:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3546,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"446:8:20","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"value","nameLocation":"463:5:20","nodeType":"VariableDeclaration","scope":3546,"src":"455:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"454:15:20"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3546,"src":"493:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3503,"name":"string","nodeType":"ElementaryTypeName","src":"493:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"492:15:20"},"scope":3663,"src":"437:707:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3565,"nodeType":"Block","src":"1323:111:20","statements":[{"id":3564,"nodeType":"UncheckedBlock","src":"1333:95:20","statements":[{"expression":{"arguments":[{"id":3555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"1376:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"1406:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3556,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1383:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5039_$","typeString":"type(library MathUpgradeable)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4999,"src":"1383:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1383:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1415:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1383:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3566,3642,3662],"referencedDeclaration":3642,"src":"1364:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1364:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3553,"id":3563,"nodeType":"Return","src":"1357:60:20"}]}]},"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"1150:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1258:11:20","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"value","nameLocation":"1278:5:20","nodeType":"VariableDeclaration","scope":3566,"src":"1270:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:15:20"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3566,"src":"1308:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3551,"name":"string","nodeType":"ElementaryTypeName","src":"1308:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1307:15:20"},"scope":3663,"src":"1249:185:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"1647:347:20","statements":[{"assignments":[3577],"declarations":[{"constant":false,"id":3577,"mutability":"mutable","name":"buffer","nameLocation":"1670:6:20","nodeType":"VariableDeclaration","scope":3641,"src":"1657:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3576,"name":"bytes","nodeType":"ElementaryTypeName","src":"1657:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3586,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3581,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"1693:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1689:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1689:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1679:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3578,"name":"bytes","nodeType":"ElementaryTypeName","src":"1683:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1679:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1657:47:20"},{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3587,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1714:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3589,"indexExpression":{"hexValue":"30","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1714:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1726:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1714:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3592,"nodeType":"ExpressionStatement","src":"1714:15:20"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3593,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1739:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3595,"indexExpression":{"hexValue":"31","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1746:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1739:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1751:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1739:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3598,"nodeType":"ExpressionStatement","src":"1739:15:20"},{"body":{"id":3627,"nodeType":"Block","src":"1809:83:20","statements":[{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3613,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1823:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3615,"indexExpression":{"id":3614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1830:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1823:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3616,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"1835:8:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3620,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"1844:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1844:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1835:21:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1823:33:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3622,"nodeType":"ExpressionStatement","src":"1823:33:20"},{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"1870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1880:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1870:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"1870:11:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1797:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1801:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1797:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3628,"initializationExpression":{"assignments":[3600],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"i","nameLocation":"1777:1:20","nodeType":"VariableDeclaration","scope":3628,"src":"1769:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3602,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"1785:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1781:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1769:26:20"},"loopExpression":{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1804:3:20","subExpression":{"id":3610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1806:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"1804:3:20"},"nodeType":"ForStatement","src":"1764:128:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"1909:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1918:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1909:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1921:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1901:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1901:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3635,"nodeType":"ExpressionStatement","src":"1901:55:20"},{"expression":{"arguments":[{"id":3638,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1980:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1973:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3636,"name":"string","nodeType":"ElementaryTypeName","src":"1973:6:20","typeDescriptions":{}}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1973:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3575,"id":3640,"nodeType":"Return","src":"1966:21:20"}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"1440:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1566:11:20","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"value","nameLocation":"1586:5:20","nodeType":"VariableDeclaration","scope":3642,"src":"1578:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"length","nameLocation":"1601:6:20","nodeType":"VariableDeclaration","scope":3642,"src":"1593:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1577:31:20"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"1632:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3573,"name":"string","nodeType":"ElementaryTypeName","src":"1632:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1631:15:20"},"scope":3663,"src":"1557:437:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"2219:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3655,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"2264:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2256:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3653,"name":"uint160","nodeType":"ElementaryTypeName","src":"2256:7:20","typeDescriptions":{}}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2256:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2248:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:20","typeDescriptions":{}}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2248:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3658,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"2272:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3650,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3566,3642,3662],"referencedDeclaration":3642,"src":"2236:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2236:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3649,"id":3660,"nodeType":"Return","src":"2229:59:20"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"2000:141:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2155:11:20","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"addr","nameLocation":"2175:4:20","nodeType":"VariableDeclaration","scope":3662,"src":"2167:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"2167:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2166:14:20"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"2204:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3647,"name":"string","nodeType":"ElementaryTypeName","src":"2204:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2203:15:20"},"scope":3663,"src":"2146:149:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3664,"src":"199:2098:20","usedErrors":[]}],"src":"101:2197:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[4024],"MathUpgradeable":[5039],"StringsUpgradeable":[3663]},"id":4025,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3665,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:21"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":3666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4025,"sourceUnit":3664,"src":"137:35:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"174:205:21","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4024,"linearizedBaseContracts":[4024],"name":"ECDSAUpgradeable","nameLocation":"388:16:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":3673,"members":[{"id":3668,"name":"NoError","nameLocation":"439:7:21","nodeType":"EnumValue","src":"439:7:21"},{"id":3669,"name":"InvalidSignature","nameLocation":"456:16:21","nodeType":"EnumValue","src":"456:16:21"},{"id":3670,"name":"InvalidSignatureLength","nameLocation":"482:22:21","nodeType":"EnumValue","src":"482:22:21"},{"id":3671,"name":"InvalidSignatureS","nameLocation":"514:17:21","nodeType":"EnumValue","src":"514:17:21"},{"id":3672,"name":"InvalidSignatureV","nameLocation":"541:17:21","nodeType":"EnumValue","src":"541:17:21"}],"name":"RecoverError","nameLocation":"416:12:21","nodeType":"EnumDefinition","src":"411:175:21"},{"body":{"id":3716,"nodeType":"Block","src":"646:457:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"660:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3680,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"669:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"669:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"660:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"756:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3686,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"765:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3669,"src":"765:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"756:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3694,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"865:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3695,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"874:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"874:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"865:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"987:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3704,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"996:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3671,"src":"996:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"987:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3712,"nodeType":"IfStatement","src":"983:114:21","trueBody":{"id":3711,"nodeType":"Block","src":"1028:69:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:36:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3707,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1042:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1042:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3710,"nodeType":"ExpressionStatement","src":"1042:44:21"}]}},"id":3713,"nodeType":"IfStatement","src":"861:236:21","trueBody":{"id":3702,"nodeType":"Block","src":"911:66:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"932:33:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3698,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"925:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"925:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3701,"nodeType":"ExpressionStatement","src":"925:41:21"}]}},"id":3714,"nodeType":"IfStatement","src":"752:345:21","trueBody":{"id":3693,"nodeType":"Block","src":"796:59:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"817:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3689,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"810:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"810:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3692,"nodeType":"ExpressionStatement","src":"810:34:21"}]}},"id":3715,"nodeType":"IfStatement","src":"656:441:21","trueBody":{"id":3684,"nodeType":"Block","src":"691:55:21","statements":[{"functionReturnParameters":3678,"id":3683,"nodeType":"Return","src":"705:7:21"}]}}]},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"601:11:21","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"error","nameLocation":"626:5:21","nodeType":"VariableDeclaration","scope":3717,"src":"613:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3675,"nodeType":"UserDefinedTypeName","pathNode":{"id":3674,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"613:12:21"},"referencedDeclaration":3673,"src":"613:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"612:20:21"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[],"src":"646:0:21"},"scope":4024,"src":"592:511:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3762,"nodeType":"Block","src":"2271:626:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3730,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2285:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2285:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2305:2:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2285:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3760,"nodeType":"Block","src":"2810:81:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2840:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2832:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3752,"name":"address","nodeType":"ElementaryTypeName","src":"2832:7:21","typeDescriptions":{}}},"id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2832:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3756,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"2844:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"2844:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2831:49:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3729,"id":3759,"nodeType":"Return","src":"2824:56:21"}]},"id":3761,"nodeType":"IfStatement","src":"2281:610:21","trueBody":{"id":3751,"nodeType":"Block","src":"2309:495:21","statements":[{"assignments":[3735],"declarations":[{"constant":false,"id":3735,"mutability":"mutable","name":"r","nameLocation":"2331:1:21","nodeType":"VariableDeclaration","scope":3751,"src":"2323:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2323:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3736,"nodeType":"VariableDeclarationStatement","src":"2323:9:21"},{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"s","nameLocation":"2354:1:21","nodeType":"VariableDeclaration","scope":3751,"src":"2346:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2346:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3739,"nodeType":"VariableDeclarationStatement","src":"2346:9:21"},{"assignments":[3741],"declarations":[{"constant":false,"id":3741,"mutability":"mutable","name":"v","nameLocation":"2375:1:21","nodeType":"VariableDeclaration","scope":3751,"src":"2369:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3740,"name":"uint8","nodeType":"ElementaryTypeName","src":"2369:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3742,"nodeType":"VariableDeclarationStatement","src":"2369:7:21"},{"AST":{"nodeType":"YulBlock","src":"2577:171:21","statements":[{"nodeType":"YulAssignment","src":"2595:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2610:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2621:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2606:3:21"},"nodeType":"YulFunctionCall","src":"2606:20:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2600:5:21"},"nodeType":"YulFunctionCall","src":"2600:27:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2595:1:21"}]},{"nodeType":"YulAssignment","src":"2644:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2659:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2670:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2655:3:21"},"nodeType":"YulFunctionCall","src":"2655:20:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:21"},"nodeType":"YulFunctionCall","src":"2649:27:21"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2644:1:21"}]},{"nodeType":"YulAssignment","src":"2693:41:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:1:21","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2716:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2727:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:21"},"nodeType":"YulFunctionCall","src":"2712:20:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2706:5:21"},"nodeType":"YulFunctionCall","src":"2706:27:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2698:4:21"},"nodeType":"YulFunctionCall","src":"2698:36:21"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2693:1:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3735,"isOffset":false,"isSlot":false,"src":"2595:1:21","valueSize":1},{"declaration":3738,"isOffset":false,"isSlot":false,"src":"2644:1:21","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"2610:9:21","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"2659:9:21","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"2716:9:21","valueSize":1},{"declaration":3741,"isOffset":false,"isSlot":false,"src":"2693:1:21","valueSize":1}],"id":3743,"nodeType":"InlineAssembly","src":"2568:180:21"},{"expression":{"arguments":[{"id":3745,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"2779:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3746,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"2785:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3747,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"2788:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3748,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"2791:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3744,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3763,3837,3931],"referencedDeclaration":3931,"src":"2768:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2768:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3729,"id":3750,"nodeType":"Return","src":"2761:32:21"}]}}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"1109:1053:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3763,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2176:10:21","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"hash","nameLocation":"2195:4:21","nodeType":"VariableDeclaration","scope":3763,"src":"2187:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"signature","nameLocation":"2214:9:21","nodeType":"VariableDeclaration","scope":3763,"src":"2201:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3721,"name":"bytes","nodeType":"ElementaryTypeName","src":"2201:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2186:38:21"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3763,"src":"2248:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3763,"src":"2257:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3727,"nodeType":"UserDefinedTypeName","pathNode":{"id":3726,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"2257:12:21"},"referencedDeclaration":3673,"src":"2257:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2247:23:21"},"scope":4024,"src":"2167:730:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3789,"nodeType":"Block","src":"3770:140:21","statements":[{"assignments":[3774,3777],"declarations":[{"constant":false,"id":3774,"mutability":"mutable","name":"recovered","nameLocation":"3789:9:21","nodeType":"VariableDeclaration","scope":3789,"src":"3781:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3773,"name":"address","nodeType":"ElementaryTypeName","src":"3781:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"error","nameLocation":"3813:5:21","nodeType":"VariableDeclaration","scope":3789,"src":"3800:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3776,"nodeType":"UserDefinedTypeName","pathNode":{"id":3775,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"3800:12:21"},"referencedDeclaration":3673,"src":"3800:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3782,"initialValue":{"arguments":[{"id":3779,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"3833:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3780,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3839:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3778,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3763,3837,3931],"referencedDeclaration":3763,"src":"3822:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3822:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3780:69:21"},{"expression":{"arguments":[{"id":3784,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"3871:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3783,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"3859:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3673_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3859:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"ExpressionStatement","src":"3859:18:21"},{"expression":{"id":3787,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"3894:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3772,"id":3788,"nodeType":"Return","src":"3887:16:21"}]},"documentation":{"id":3764,"nodeType":"StructuredDocumentation","src":"2903:775:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3790,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3692:7:21","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"hash","nameLocation":"3708:4:21","nodeType":"VariableDeclaration","scope":3790,"src":"3700:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3700:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"signature","nameLocation":"3727:9:21","nodeType":"VariableDeclaration","scope":3790,"src":"3714:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3767,"name":"bytes","nodeType":"ElementaryTypeName","src":"3714:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3699:38:21"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3790,"src":"3761:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3770,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:9:21"},"scope":4024,"src":"3683:227:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3836,"nodeType":"Block","src":"4297:203:21","statements":[{"assignments":[3806],"declarations":[{"constant":false,"id":3806,"mutability":"mutable","name":"s","nameLocation":"4315:1:21","nodeType":"VariableDeclaration","scope":3836,"src":"4307:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4307:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3813,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"4319:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4332:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4324:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4324:7:21","typeDescriptions":{}}},"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4324:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4319:80:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4307:92:21"},{"assignments":[3815],"declarations":[{"constant":false,"id":3815,"mutability":"mutable","name":"v","nameLocation":"4415:1:21","nodeType":"VariableDeclaration","scope":3836,"src":"4409:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3814,"name":"uint8","nodeType":"ElementaryTypeName","src":"4409:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3828,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3820,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"4434:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4426:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"4426:7:21","typeDescriptions":{}}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4426:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4426:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4425:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4448:2:21","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4425:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4419:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3816,"name":"uint8","nodeType":"ElementaryTypeName","src":"4419:5:21","typeDescriptions":{}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4419:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4409:42:21"},{"expression":{"arguments":[{"id":3830,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4479:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3831,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"4485:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3832,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"4488:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3833,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"4491:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3829,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3763,3837,3931],"referencedDeclaration":3931,"src":"4468:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4468:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3804,"id":3835,"nodeType":"Return","src":"4461:32:21"}]},"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"3916:243:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3837,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4173:10:21","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"hash","nameLocation":"4201:4:21","nodeType":"VariableDeclaration","scope":3837,"src":"4193:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"r","nameLocation":"4223:1:21","nodeType":"VariableDeclaration","scope":3837,"src":"4215:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4215:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"vs","nameLocation":"4242:2:21","nodeType":"VariableDeclaration","scope":3837,"src":"4234:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4234:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:67:21"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3837,"src":"4274:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"4274:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3837,"src":"4283:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3802,"nodeType":"UserDefinedTypeName","pathNode":{"id":3801,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"4283:12:21"},"referencedDeclaration":3673,"src":"4283:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4273:23:21"},"scope":4024,"src":"4164:336:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"4781:136:21","statements":[{"assignments":[3850,3853],"declarations":[{"constant":false,"id":3850,"mutability":"mutable","name":"recovered","nameLocation":"4800:9:21","nodeType":"VariableDeclaration","scope":3866,"src":"4792:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"4792:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"error","nameLocation":"4824:5:21","nodeType":"VariableDeclaration","scope":3866,"src":"4811:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3852,"nodeType":"UserDefinedTypeName","pathNode":{"id":3851,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"4811:12:21"},"referencedDeclaration":3673,"src":"4811:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3859,"initialValue":{"arguments":[{"id":3855,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"4844:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3856,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"4850:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3857,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"4853:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3854,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3763,3837,3931],"referencedDeclaration":3837,"src":"4833:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4833:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4791:65:21"},{"expression":{"arguments":[{"id":3861,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4878:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3860,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4866:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3673_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4866:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3863,"nodeType":"ExpressionStatement","src":"4866:18:21"},{"expression":{"id":3864,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4901:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3848,"id":3865,"nodeType":"Return","src":"4894:16:21"}]},"documentation":{"id":3838,"nodeType":"StructuredDocumentation","src":"4506:154:21","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4674:7:21","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"hash","nameLocation":"4699:4:21","nodeType":"VariableDeclaration","scope":3867,"src":"4691:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"r","nameLocation":"4721:1:21","nodeType":"VariableDeclaration","scope":3867,"src":"4713:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4713:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"vs","nameLocation":"4740:2:21","nodeType":"VariableDeclaration","scope":3867,"src":"4732:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4732:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4681:67:21"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"4772:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3846,"name":"address","nodeType":"ElementaryTypeName","src":"4772:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4771:9:21"},"scope":4024,"src":"4665:252:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"5240:1345:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3886,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6136:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6128:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"6128:7:21","typeDescriptions":{}}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6128:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6141:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6128:79:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"6124:161:21","trueBody":{"id":3898,"nodeType":"Block","src":"6209:76:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6239:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3890,"name":"address","nodeType":"ElementaryTypeName","src":"6231:7:21","typeDescriptions":{}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6231:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3894,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"6243:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3671,"src":"6243:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6230:44:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3883,"id":3897,"nodeType":"Return","src":"6223:51:21"}]}},{"assignments":[3901],"declarations":[{"constant":false,"id":3901,"mutability":"mutable","name":"signer","nameLocation":"6387:6:21","nodeType":"VariableDeclaration","scope":3930,"src":"6379:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3900,"name":"address","nodeType":"ElementaryTypeName","src":"6379:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3908,"initialValue":{"arguments":[{"id":3903,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"6406:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3904,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6412:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3905,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6415:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3906,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6418:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3902,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6396:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6396:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6379:41:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"6434:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6452:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6444:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3910,"name":"address","nodeType":"ElementaryTypeName","src":"6444:7:21","typeDescriptions":{}}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6444:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6434:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3924,"nodeType":"IfStatement","src":"6430:101:21","trueBody":{"id":3923,"nodeType":"Block","src":"6456:75:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6486:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6478:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3915,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:21","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6478:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3919,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"6490:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3669,"src":"6490:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6477:43:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3883,"id":3922,"nodeType":"Return","src":"6470:50:21"}]}},{"expression":{"components":[{"id":3925,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"6549:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3926,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"6557:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3673_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"6557:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6548:30:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3883,"id":3929,"nodeType":"Return","src":"6541:37:21"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"4923:163:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5100:10:21","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"hash","nameLocation":"5128:4:21","nodeType":"VariableDeclaration","scope":3931,"src":"5120:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5120:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"v","nameLocation":"5148:1:21","nodeType":"VariableDeclaration","scope":3931,"src":"5142:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3871,"name":"uint8","nodeType":"ElementaryTypeName","src":"5142:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"r","nameLocation":"5167:1:21","nodeType":"VariableDeclaration","scope":3931,"src":"5159:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5159:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"s","nameLocation":"5186:1:21","nodeType":"VariableDeclaration","scope":3931,"src":"5178:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5178:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5110:83:21"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"5217:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"5217:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"5226:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3881,"nodeType":"UserDefinedTypeName","pathNode":{"id":3880,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"5226:12:21"},"referencedDeclaration":3673,"src":"5226:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5216:23:21"},"scope":4024,"src":"5091:1494:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3963,"nodeType":"Block","src":"6850:138:21","statements":[{"assignments":[3946,3949],"declarations":[{"constant":false,"id":3946,"mutability":"mutable","name":"recovered","nameLocation":"6869:9:21","nodeType":"VariableDeclaration","scope":3963,"src":"6861:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"6861:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"error","nameLocation":"6893:5:21","nodeType":"VariableDeclaration","scope":3963,"src":"6880:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3948,"nodeType":"UserDefinedTypeName","pathNode":{"id":3947,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"6880:12:21"},"referencedDeclaration":3673,"src":"6880:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3956,"initialValue":{"arguments":[{"id":3951,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"6913:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3952,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"6919:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3953,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"6922:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3954,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"6925:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3950,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3763,3837,3931],"referencedDeclaration":3931,"src":"6902:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6902:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3673_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6860:67:21"},{"expression":{"arguments":[{"id":3958,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"6949:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3673","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3957,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"6937:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3673_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6937:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3960,"nodeType":"ExpressionStatement","src":"6937:18:21"},{"expression":{"id":3961,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"6972:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3944,"id":3962,"nodeType":"Return","src":"6965:16:21"}]},"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"6591:122:21","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6727:7:21","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"hash","nameLocation":"6752:4:21","nodeType":"VariableDeclaration","scope":3964,"src":"6744:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6744:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"v","nameLocation":"6772:1:21","nodeType":"VariableDeclaration","scope":3964,"src":"6766:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3935,"name":"uint8","nodeType":"ElementaryTypeName","src":"6766:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"r","nameLocation":"6791:1:21","nodeType":"VariableDeclaration","scope":3964,"src":"6783:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6783:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"s","nameLocation":"6810:1:21","nodeType":"VariableDeclaration","scope":3964,"src":"6802:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6802:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6734:83:21"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3964,"src":"6841:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"6841:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6840:9:21"},"scope":4024,"src":"6718:270:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3980,"nodeType":"Block","src":"7356:187:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":3976,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"7530:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7477:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7477:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7477:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3972,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7467:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7467:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3971,"id":3979,"nodeType":"Return","src":"7460:76:21"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"6994:279:21","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7287:22:21","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"hash","nameLocation":"7318:4:21","nodeType":"VariableDeclaration","scope":3981,"src":"7310:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7310:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7309:14:21"},"returnParameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3981,"src":"7347:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7347:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7346:9:21"},"scope":4024,"src":"7278:265:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"7908:127:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7952:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3995,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"8014:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8014:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3993,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"7986:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3663_$","typeString":"type(library StringsUpgradeable)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3546,"src":"7986:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7986:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3998,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"8025:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3990,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7935:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7935:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7935:92:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3989,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7925:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7925:103:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3988,"id":4001,"nodeType":"Return","src":"7918:110:21"}]},"documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"7549:274:21","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7837:22:21","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"s","nameLocation":"7873:1:21","nodeType":"VariableDeclaration","scope":4003,"src":"7860:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3983,"name":"bytes","nodeType":"ElementaryTypeName","src":"7860:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7859:16:21"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4003,"src":"7899:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7898:9:21"},"scope":4024,"src":"7828:207:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"8476:92:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8520:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":4017,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"8532:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4018,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8549:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4014,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8503:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8503:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8503:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4013,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8493:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8493:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4012,"id":4021,"nodeType":"Return","src":"8486:75:21"}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"8041:328:21","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8383:15:21","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"domainSeparator","nameLocation":"8407:15:21","nodeType":"VariableDeclaration","scope":4023,"src":"8399:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8399:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"structHash","nameLocation":"8432:10:21","nodeType":"VariableDeclaration","scope":4023,"src":"8424:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8424:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8398:45:21"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"8467:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8467:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8466:9:21"},"scope":4024,"src":"8374:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4025,"src":"380:8190:21","usedErrors":[]}],"src":"112:8459:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ECDSAUpgradeable":[4024],"EIP712Upgradeable":[4174],"Initializable":[436],"MathUpgradeable":[5039],"StringsUpgradeable":[3663]},"id":4175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4026,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"./ECDSAUpgradeable.sol","id":4027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4175,"sourceUnit":4025,"src":"138:32:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":4028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4175,"sourceUnit":437,"src":"171:45:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4030,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1430:13:22"},"id":4031,"nodeType":"InheritanceSpecifier","src":"1430:13:22"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"218:1172:22","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._\n @custom:storage-size 52"},"fullyImplemented":true,"id":4174,"linearizedBaseContracts":[4174,436],"name":"EIP712Upgradeable","nameLocation":"1409:17:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4033,"mutability":"mutable","name":"_HASHED_NAME","nameLocation":"1511:12:22","nodeType":"VariableDeclaration","scope":4174,"src":"1495:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1495:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4035,"mutability":"mutable","name":"_HASHED_VERSION","nameLocation":"1545:15:22","nodeType":"VariableDeclaration","scope":4174,"src":"1529:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1529:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":4040,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1591:10:22","nodeType":"VariableDeclaration","scope":4174,"src":"1566:133:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1566:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1614:84:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4037,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1604:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1604:95:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":4055,"nodeType":"Block","src":"2407:55:22","statements":[{"expression":{"arguments":[{"id":4051,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"2441:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4052,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"2447:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4050,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"2417:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2417:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"ExpressionStatement","src":"2417:38:22"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"1751:559:22","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4056,"implemented":true,"kind":"function","modifiers":[{"id":4048,"kind":"modifierInvocation","modifierName":{"id":4047,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2390:16:22"},"nodeType":"ModifierInvocation","src":"2390:16:22"}],"name":"__EIP712_init","nameLocation":"2324:13:22","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"name","nameLocation":"2352:4:22","nodeType":"VariableDeclaration","scope":4056,"src":"2338:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4042,"name":"string","nodeType":"ElementaryTypeName","src":"2338:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"version","nameLocation":"2372:7:22","nodeType":"VariableDeclaration","scope":4056,"src":"2358:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4044,"name":"string","nodeType":"ElementaryTypeName","src":"2358:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2337:43:22"},"returnParameters":{"id":4049,"nodeType":"ParameterList","parameters":[],"src":"2407:0:22"},"scope":4174,"src":"2315:147:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"2570:195:22","statements":[{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"hashedName","nameLocation":"2588:10:22","nodeType":"VariableDeclaration","scope":4091,"src":"2580:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2580:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4073,"initialValue":{"arguments":[{"arguments":[{"id":4070,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"2617:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2611:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4068,"name":"bytes","nodeType":"ElementaryTypeName","src":"2611:5:22","typeDescriptions":{}}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2611:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4067,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2601:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2601:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2580:43:22"},{"assignments":[4075],"declarations":[{"constant":false,"id":4075,"mutability":"mutable","name":"hashedVersion","nameLocation":"2641:13:22","nodeType":"VariableDeclaration","scope":4091,"src":"2633:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2633:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4082,"initialValue":{"arguments":[{"arguments":[{"id":4079,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"2673:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2667:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4077,"name":"bytes","nodeType":"ElementaryTypeName","src":"2667:5:22","typeDescriptions":{}}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2667:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4076,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2657:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2633:49:22"},{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4083,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2692:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4084,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"2707:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2692:25:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4086,"nodeType":"ExpressionStatement","src":"2692:25:22"},{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4087,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"2727:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4088,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"2745:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2727:31:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4090,"nodeType":"ExpressionStatement","src":"2727:31:22"}]},"id":4092,"implemented":true,"kind":"function","modifiers":[{"id":4063,"kind":"modifierInvocation","modifierName":{"id":4062,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2553:16:22"},"nodeType":"ModifierInvocation","src":"2553:16:22"}],"name":"__EIP712_init_unchained","nameLocation":"2477:23:22","nodeType":"FunctionDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"name","nameLocation":"2515:4:22","nodeType":"VariableDeclaration","scope":4092,"src":"2501:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4057,"name":"string","nodeType":"ElementaryTypeName","src":"2501:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4060,"mutability":"mutable","name":"version","nameLocation":"2535:7:22","nodeType":"VariableDeclaration","scope":4092,"src":"2521:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4059,"name":"string","nodeType":"ElementaryTypeName","src":"2521:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2500:43:22"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[],"src":"2570:0:22"},"scope":4174,"src":"2468:297:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4106,"nodeType":"Block","src":"2913:98:22","statements":[{"expression":{"arguments":[{"id":4099,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"2952:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4100,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"2964:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2964:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4102,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"2983:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4098,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"2930:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2930:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4097,"id":4105,"nodeType":"Return","src":"2923:81:22"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"2771:75:22","text":" @dev Returns the domain separator for the current chain."},"id":4107,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"2860:18:22","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[],"src":"2878:2:22"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4107,"src":"2904:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:9:22"},"scope":4174,"src":"2851:160:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4133,"nodeType":"Block","src":"3166:108:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":4121,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"3204:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4122,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"3214:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4123,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"3224:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4124,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3237:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3237:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4128,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3260:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$4174","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$4174","typeString":"contract EIP712Upgradeable"}],"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3252:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4126,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:22","typeDescriptions":{}}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3252:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4119,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3193:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3193:10:22","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4118,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3183:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4117,"id":4132,"nodeType":"Return","src":"3176:91:22"}]},"id":4134,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3026:21:22","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"typeHash","nameLocation":"3065:8:22","nodeType":"VariableDeclaration","scope":4134,"src":"3057:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3057:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"nameHash","nameLocation":"3091:8:22","nodeType":"VariableDeclaration","scope":4134,"src":"3083:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3083:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"versionHash","nameLocation":"3117:11:22","nodeType":"VariableDeclaration","scope":4134,"src":"3109:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3109:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3047:87:22"},"returnParameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4134,"src":"3157:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3156:9:22"},"scope":4174,"src":"3017:257:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4149,"nodeType":"Block","src":"3985:90:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4144,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"4035:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4035:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4146,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"4057:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4142,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"4002:16:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$4024_$","typeString":"type(library ECDSAUpgradeable)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"4002:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4002:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4141,"id":4148,"nodeType":"Return","src":"3995:73:22"}]},"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"3280:614:22","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"3908:16:22","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"structHash","nameLocation":"3933:10:22","nodeType":"VariableDeclaration","scope":4150,"src":"3925:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3925:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3924:20:22"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4150,"src":"3976:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3976:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3975:9:22"},"scope":4174,"src":"3899:176:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4158,"nodeType":"Block","src":"4378:36:22","statements":[{"expression":{"id":4156,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"4395:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4155,"id":4157,"nodeType":"Return","src":"4388:19:22"}]},"documentation":{"id":4151,"nodeType":"StructuredDocumentation","src":"4081:225:22","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"4320:15:22","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[],"src":"4335:2:22"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4159,"src":"4369:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4369:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4368:9:22"},"scope":4174,"src":"4311:103:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"4723:39:22","statements":[{"expression":{"id":4165,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"4740:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4164,"id":4166,"nodeType":"Return","src":"4733:22:22"}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"4420:228:22","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"4662:18:22","nodeType":"FunctionDefinition","parameters":{"id":4161,"nodeType":"ParameterList","parameters":[],"src":"4680:2:22"},"returnParameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4168,"src":"4714:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4714:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4713:9:22"},"scope":4174,"src":"4653:109:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"4768:254:22","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":4173,"mutability":"mutable","name":"__gap","nameLocation":"5047:5:22","nodeType":"VariableDeclaration","scope":4174,"src":"5027:25:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5027:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"length":{"hexValue":"3530","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5035:2:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"5027:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":4175,"src":"1391:3664:22","usedErrors":[]}],"src":"113:4943:22"},"id":22},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[5039]},"id":5040,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4176,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"128:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5039,"linearizedBaseContracts":[5039],"name":"MathUpgradeable","nameLocation":"210:15:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":4181,"members":[{"id":4178,"name":"Down","nameLocation":"256:4:23","nodeType":"EnumValue","src":"256:4:23"},{"id":4179,"name":"Up","nameLocation":"298:2:23","nodeType":"EnumValue","src":"298:2:23"},{"id":4180,"name":"Zero","nameLocation":"329:4:23","nodeType":"EnumValue","src":"329:4:23"}],"name":"Rounding","nameLocation":"237:8:23","nodeType":"EnumDefinition","src":"232:122:23"},{"body":{"id":4198,"nodeType":"Block","src":"491:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"508:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"512:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"520:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:23","trueExpression":{"id":4194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"516:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4190,"id":4197,"nodeType":"Return","src":"501:20:23"}]},"documentation":{"id":4182,"nodeType":"StructuredDocumentation","src":"360:59:23","text":" @dev Returns the largest of two numbers."},"id":4199,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:23","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"a","nameLocation":"445:1:23","nodeType":"VariableDeclaration","scope":4199,"src":"437:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4186,"mutability":"mutable","name":"b","nameLocation":"456:1:23","nodeType":"VariableDeclaration","scope":4199,"src":"448:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:23"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"482:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:23"},"scope":5039,"src":"424:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"666:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"683:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4210,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"687:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"695:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:23","trueExpression":{"id":4212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"691:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4208,"id":4215,"nodeType":"Return","src":"676:20:23"}]},"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"534:60:23","text":" @dev Returns the smallest of two numbers."},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:23","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"a","nameLocation":"620:1:23","nodeType":"VariableDeclaration","scope":4217,"src":"612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"b","nameLocation":"631:1:23","nodeType":"VariableDeclaration","scope":4217,"src":"623:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:23"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"657:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:23"},"scope":5039,"src":"599:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4239,"nodeType":"Block","src":"887:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"942:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"946:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"952:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"956:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4226,"id":4238,"nodeType":"Return","src":"934:28:23"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"709:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4240,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:23","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"a","nameLocation":"841:1:23","nodeType":"VariableDeclaration","scope":4240,"src":"833:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"b","nameLocation":"852:1:23","nodeType":"VariableDeclaration","scope":4240,"src":"844:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:23"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4240,"src":"878:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:23"},"scope":5039,"src":"816:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4264,"nodeType":"Block","src":"1239:123:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"1327:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"1341:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"1350:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:23","trueExpression":{"hexValue":"30","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4249,"id":4263,"nodeType":"Return","src":"1320:35:23"}]},"documentation":{"id":4241,"nodeType":"StructuredDocumentation","src":"975:188:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4265,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:23","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"a","nameLocation":"1193:1:23","nodeType":"VariableDeclaration","scope":4265,"src":"1185:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"b","nameLocation":"1204:1:23","nodeType":"VariableDeclaration","scope":4265,"src":"1196:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:23"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4265,"src":"1230:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:23"},"scope":5039,"src":"1168:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4386,"nodeType":"Block","src":"1806:3797:23","statements":[{"id":4385,"nodeType":"UncheckedBlock","src":"1816:3781:23","statements":[{"assignments":[4278],"declarations":[{"constant":false,"id":4278,"mutability":"mutable","name":"prod0","nameLocation":"2145:5:23","nodeType":"VariableDeclaration","scope":4385,"src":"2137:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4279,"nodeType":"VariableDeclarationStatement","src":"2137:13:23"},{"assignments":[4281],"declarations":[{"constant":false,"id":4281,"mutability":"mutable","name":"prod1","nameLocation":"2217:5:23","nodeType":"VariableDeclaration","scope":4385,"src":"2209:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2209:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4282,"nodeType":"VariableDeclarationStatement","src":"2209:13:23"},{"AST":{"nodeType":"YulBlock","src":"2289:157:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2307:30:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2324:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2327:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2334:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2330:3:23"},"nodeType":"YulFunctionCall","src":"2330:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2317:6:23"},"nodeType":"YulFunctionCall","src":"2317:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2311:2:23","type":""}]},{"nodeType":"YulAssignment","src":"2354:18:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2367:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2370:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2363:3:23"},"nodeType":"YulFunctionCall","src":"2363:9:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2354:5:23"}]},{"nodeType":"YulAssignment","src":"2389:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2406:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2410:5:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2402:3:23"},"nodeType":"YulFunctionCall","src":"2402:14:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2421:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2425:5:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2418:2:23"},"nodeType":"YulFunctionCall","src":"2418:13:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2398:3:23"},"nodeType":"YulFunctionCall","src":"2398:34:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2389:5:23"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4278,"isOffset":false,"isSlot":false,"src":"2354:5:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"2410:5:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"2425:5:23","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"2389:5:23","valueSize":1},{"declaration":4268,"isOffset":false,"isSlot":false,"src":"2324:1:23","valueSize":1},{"declaration":4268,"isOffset":false,"isSlot":false,"src":"2367:1:23","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"2327:1:23","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"2370:1:23","valueSize":1}],"id":4283,"nodeType":"InlineAssembly","src":"2280:166:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"2527:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2536:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2527:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"2523:75:23","trueBody":{"id":4291,"nodeType":"Block","src":"2539:59:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"2564:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2572:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2564:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4276,"id":4290,"nodeType":"Return","src":"2557:26:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2708:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4295,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"2722:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2708:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2700:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2700:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4298,"nodeType":"ExpressionStatement","src":"2700:28:23"},{"assignments":[4300],"declarations":[{"constant":false,"id":4300,"mutability":"mutable","name":"remainder","nameLocation":"2992:9:23","nodeType":"VariableDeclaration","scope":4385,"src":"2984:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4301,"nodeType":"VariableDeclarationStatement","src":"2984:17:23"},{"AST":{"nodeType":"YulBlock","src":"3024:291:23","statements":[{"nodeType":"YulAssignment","src":"3093:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3113:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"3116:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"3119:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3106:6:23"},"nodeType":"YulFunctionCall","src":"3106:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3093:9:23"}]},{"nodeType":"YulAssignment","src":"3213:41:23","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3226:5:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3236:9:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"3247:5:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3233:2:23"},"nodeType":"YulFunctionCall","src":"3233:20:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3222:3:23"},"nodeType":"YulFunctionCall","src":"3222:32:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3213:5:23"}]},{"nodeType":"YulAssignment","src":"3271:30:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3284:5:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"3291:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3280:3:23"},"nodeType":"YulFunctionCall","src":"3280:21:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3271:5:23"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4272,"isOffset":false,"isSlot":false,"src":"3119:11:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3247:5:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3271:5:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3284:5:23","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"3213:5:23","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"3226:5:23","valueSize":1},{"declaration":4300,"isOffset":false,"isSlot":false,"src":"3093:9:23","valueSize":1},{"declaration":4300,"isOffset":false,"isSlot":false,"src":"3236:9:23","valueSize":1},{"declaration":4300,"isOffset":false,"isSlot":false,"src":"3291:9:23","valueSize":1},{"declaration":4268,"isOffset":false,"isSlot":false,"src":"3113:1:23","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"3116:1:23","valueSize":1}],"id":4302,"nodeType":"InlineAssembly","src":"3015:300:23"},{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"twos","nameLocation":"3630:4:23","nodeType":"VariableDeclaration","scope":4385,"src":"3622:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3622:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"3637:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3652:12:23","subExpression":{"id":4306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"3653:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3667:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3652:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3651:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3637:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3622:47:23"},{"AST":{"nodeType":"YulBlock","src":"3692:362:23","statements":[{"nodeType":"YulAssignment","src":"3757:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3776:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"3789:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3772:3:23"},"nodeType":"YulFunctionCall","src":"3772:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3757:11:23"}]},{"nodeType":"YulAssignment","src":"3861:25:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3874:5:23"},{"name":"twos","nodeType":"YulIdentifier","src":"3881:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3870:3:23"},"nodeType":"YulFunctionCall","src":"3870:16:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3861:5:23"}]},{"nodeType":"YulAssignment","src":"4001:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4021:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4024:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4017:3:23"},"nodeType":"YulFunctionCall","src":"4017:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"4031:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4013:3:23"},"nodeType":"YulFunctionCall","src":"4013:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4038:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:23"},"nodeType":"YulFunctionCall","src":"4009:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4001:4:23"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4272,"isOffset":false,"isSlot":false,"src":"3757:11:23","valueSize":1},{"declaration":4272,"isOffset":false,"isSlot":false,"src":"3776:11:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3861:5:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3874:5:23","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"3789:4:23","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"3881:4:23","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"4001:4:23","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"4024:4:23","valueSize":1},{"declaration":4304,"isOffset":false,"isSlot":false,"src":"4031:4:23","valueSize":1}],"id":4313,"nodeType":"InlineAssembly","src":"3683:371:23"},{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4314,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"4120:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4315,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4129:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4316,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"4137:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4129:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4120:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4319,"nodeType":"ExpressionStatement","src":"4120:21:23"},{"assignments":[4321],"declarations":[{"constant":false,"id":4321,"mutability":"mutable","name":"inverse","nameLocation":"4467:7:23","nodeType":"VariableDeclaration","scope":4385,"src":"4459:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4478:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4323,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4482:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4478:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4477:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4497:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4477:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4459:39:23"},{"expression":{"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4715:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4730:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4332,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4744:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4730:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4726:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4336,"nodeType":"ExpressionStatement","src":"4715:36:23"},{"expression":{"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4337,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4784:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4795:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4799:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4340,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4813:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4799:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4795:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4344,"nodeType":"ExpressionStatement","src":"4784:36:23"},{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4345,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4854:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4865:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4869:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4348,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4883:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4869:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4865:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"4854:36:23"},{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4353,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4924:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4935:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4939:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4356,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4939:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4935:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"4924:36:23"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4994:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5005:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"5009:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4364,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"5023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5009:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5005:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"4994:36:23"},{"expression":{"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"5065:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5076:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"5080:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"5094:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5080:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4376,"nodeType":"ExpressionStatement","src":"5065:36:23"},{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"5535:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"5544:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"5552:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5544:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5535:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ExpressionStatement","src":"5535:24:23"},{"expression":{"id":4383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"5580:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4276,"id":4384,"nodeType":"Return","src":"5573:13:23"}]}]},"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"1368:305:23","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4387,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:23","nodeType":"FunctionDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"x","nameLocation":"1711:1:23","nodeType":"VariableDeclaration","scope":4387,"src":"1703:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"y","nameLocation":"1730:1:23","nodeType":"VariableDeclaration","scope":4387,"src":"1722:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"denominator","nameLocation":"1749:11:23","nodeType":"VariableDeclaration","scope":4387,"src":"1741:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:73:23"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"result","nameLocation":"1798:6:23","nodeType":"VariableDeclaration","scope":4387,"src":"1790:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1790:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1789:16:23"},"scope":5039,"src":"1678:3925:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4430,"nodeType":"Block","src":"5883:189:23","statements":[{"assignments":[4403],"declarations":[{"constant":false,"id":4403,"mutability":"mutable","name":"result","nameLocation":"5901:6:23","nodeType":"VariableDeclaration","scope":4430,"src":"5893:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"5893:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4409,"initialValue":{"arguments":[{"id":4405,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"5917:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4406,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5920:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4407,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"5923:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4404,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4387,4431],"referencedDeclaration":4387,"src":"5910:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5910:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5893:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5949:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4411,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"5961:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4181_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4179,"src":"5961:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"src":"5949:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"5983:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4416,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5986:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"5989:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4414,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5976:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5976:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6004:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5976:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5949:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4427,"nodeType":"IfStatement","src":"5945:98:23","trueBody":{"id":4426,"nodeType":"Block","src":"6007:36:23","statements":[{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"6021:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6031:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6021:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4425,"nodeType":"ExpressionStatement","src":"6021:11:23"}]}},{"expression":{"id":4428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"6059:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4401,"id":4429,"nodeType":"Return","src":"6052:13:23"}]},"documentation":{"id":4388,"nodeType":"StructuredDocumentation","src":"5609:121:23","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4431,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5744:6:23","nodeType":"FunctionDefinition","parameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"x","nameLocation":"5768:1:23","nodeType":"VariableDeclaration","scope":4431,"src":"5760:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5760:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4392,"mutability":"mutable","name":"y","nameLocation":"5787:1:23","nodeType":"VariableDeclaration","scope":4431,"src":"5779:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5779:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"denominator","nameLocation":"5806:11:23","nodeType":"VariableDeclaration","scope":4431,"src":"5798:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"5798:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4397,"mutability":"mutable","name":"rounding","nameLocation":"5836:8:23","nodeType":"VariableDeclaration","scope":4431,"src":"5827:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4396,"nodeType":"UserDefinedTypeName","pathNode":{"id":4395,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4181,"src":"5827:8:23"},"referencedDeclaration":4181,"src":"5827:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"5750:100:23"},"returnParameters":{"id":4401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4431,"src":"5874:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5874:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5873:9:23"},"scope":5039,"src":"5735:337:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4542,"nodeType":"Block","src":"6348:1585:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"6362:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6367:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6362:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4445,"nodeType":"IfStatement","src":"6358:45:23","trueBody":{"id":4444,"nodeType":"Block","src":"6370:33:23","statements":[{"expression":{"hexValue":"30","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6391:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4438,"id":4443,"nodeType":"Return","src":"6384:8:23"}]}},{"assignments":[4447],"declarations":[{"constant":false,"id":4447,"mutability":"mutable","name":"result","nameLocation":"7090:6:23","nodeType":"VariableDeclaration","scope":4542,"src":"7082:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7082:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7110:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4449,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4711,4747],"referencedDeclaration":4711,"src":"7105:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7105:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7105:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7104:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7099:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7082:36:23"},{"id":4541,"nodeType":"UncheckedBlock","src":"7519:408:23","statements":[{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7543:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7553:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7562:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7566:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7562:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7553:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7552:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7577:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7552:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7543:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"7543:35:23"},{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7592:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7602:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7611:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7615:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7611:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7602:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7601:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7626:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7601:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7592:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4478,"nodeType":"ExpressionStatement","src":"7592:35:23"},{"expression":{"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7641:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7651:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7660:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7664:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7660:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7651:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7650:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7675:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7650:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7641:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ExpressionStatement","src":"7641:35:23"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7690:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7700:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7709:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7713:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7699:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7724:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7699:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7690:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"7690:35:23"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7739:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7749:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7758:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7762:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7758:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7749:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7748:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7773:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7748:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7739:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"7739:35:23"},{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7788:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7798:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7807:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7811:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7807:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7798:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7797:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7822:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7797:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7788:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"7788:35:23"},{"expression":{"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7837:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7847:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7856:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7860:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7856:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7847:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7846:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7871:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7846:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7837:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4533,"nodeType":"ExpressionStatement","src":"7837:35:23"},{"expression":{"arguments":[{"id":4535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7897:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7905:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7909:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7905:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"7893:3:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7893:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4438,"id":4540,"nodeType":"Return","src":"7886:30:23"}]}]},"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"6078:208:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4543,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6300:4:23","nodeType":"FunctionDefinition","parameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"a","nameLocation":"6313:1:23","nodeType":"VariableDeclaration","scope":4543,"src":"6305:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"6305:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6304:11:23"},"returnParameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4543,"src":"6339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6338:9:23"},"scope":5039,"src":"6291:1642:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4578,"nodeType":"Block","src":"8109:161:23","statements":[{"id":4577,"nodeType":"UncheckedBlock","src":"8119:145:23","statements":[{"assignments":[4555],"declarations":[{"constant":false,"id":4555,"mutability":"mutable","name":"result","nameLocation":"8151:6:23","nodeType":"VariableDeclaration","scope":4577,"src":"8143:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"8143:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4559,"initialValue":{"arguments":[{"id":4557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"8165:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4556,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4543,4579],"referencedDeclaration":4543,"src":"8160:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8160:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8143:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8188:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"8198:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4562,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"8210:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4181_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4179,"src":"8210:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"src":"8198:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8225:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8234:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8225:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"8243:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8225:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8198:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8251:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8198:54:23","trueExpression":{"hexValue":"31","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8247:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8197:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8188:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4553,"id":4576,"nodeType":"Return","src":"8181:72:23"}]}]},"documentation":{"id":4544,"nodeType":"StructuredDocumentation","src":"7939:89:23","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8042:4:23","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"a","nameLocation":"8055:1:23","nodeType":"VariableDeclaration","scope":4579,"src":"8047:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"8047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"rounding","nameLocation":"8067:8:23","nodeType":"VariableDeclaration","scope":4579,"src":"8058:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4548,"nodeType":"UserDefinedTypeName","pathNode":{"id":4547,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4181,"src":"8058:8:23"},"referencedDeclaration":4181,"src":"8058:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8046:30:23"},"returnParameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"8100:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"8100:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8099:9:23"},"scope":5039,"src":"8033:237:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4710,"nodeType":"Block","src":"8455:922:23","statements":[{"assignments":[4588],"declarations":[{"constant":false,"id":4588,"mutability":"mutable","name":"result","nameLocation":"8473:6:23","nodeType":"VariableDeclaration","scope":4710,"src":"8465:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"8465:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4590,"initialValue":{"hexValue":"30","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8482:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8465:18:23"},{"id":4707,"nodeType":"UncheckedBlock","src":"8493:855:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8521:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8530:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8521:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8521:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4605,"nodeType":"IfStatement","src":"8517:99:23","trueBody":{"id":4604,"nodeType":"Block","src":"8539:77:23","statements":[{"expression":{"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8567:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8557:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4599,"nodeType":"ExpressionStatement","src":"8557:13:23"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"8588:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8598:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8588:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4603,"nodeType":"ExpressionStatement","src":"8588:13:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8633:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8642:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8633:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8647:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8633:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4620,"nodeType":"IfStatement","src":"8629:96:23","trueBody":{"id":4619,"nodeType":"Block","src":"8650:75:23","statements":[{"expression":{"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8668:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8678:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8668:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4614,"nodeType":"ExpressionStatement","src":"8668:12:23"},{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"8698:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8708:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8698:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4618,"nodeType":"ExpressionStatement","src":"8698:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8742:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8751:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8742:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8756:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8742:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4635,"nodeType":"IfStatement","src":"8738:96:23","trueBody":{"id":4634,"nodeType":"Block","src":"8759:75:23","statements":[{"expression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8777:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8787:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8777:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4629,"nodeType":"ExpressionStatement","src":"8777:12:23"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"8807:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8807:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"8807:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8851:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8860:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8851:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8865:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8851:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4650,"nodeType":"IfStatement","src":"8847:96:23","trueBody":{"id":4649,"nodeType":"Block","src":"8868:75:23","statements":[{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8886:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8896:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8886:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4644,"nodeType":"ExpressionStatement","src":"8886:12:23"},{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"8916:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8926:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8916:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4648,"nodeType":"ExpressionStatement","src":"8916:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8960:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8973:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4665,"nodeType":"IfStatement","src":"8956:93:23","trueBody":{"id":4664,"nodeType":"Block","src":"8976:73:23","statements":[{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"8994:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9004:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8994:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"8994:11:23"},{"expression":{"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9023:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9033:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9023:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4663,"nodeType":"ExpressionStatement","src":"9023:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"9066:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9066:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9079:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"9062:93:23","trueBody":{"id":4679,"nodeType":"Block","src":"9082:73:23","statements":[{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"9100:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9100:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4674,"nodeType":"ExpressionStatement","src":"9100:11:23"},{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9129:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9129:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4678,"nodeType":"ExpressionStatement","src":"9129:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"9172:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9181:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9172:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9185:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9172:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4695,"nodeType":"IfStatement","src":"9168:93:23","trueBody":{"id":4694,"nodeType":"Block","src":"9188:73:23","statements":[{"expression":{"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"9206:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9216:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9206:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4689,"nodeType":"ExpressionStatement","src":"9206:11:23"},{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9235:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9245:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9235:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4693,"nodeType":"ExpressionStatement","src":"9235:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"9278:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9287:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9278:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9291:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9278:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4706,"nodeType":"IfStatement","src":"9274:64:23","trueBody":{"id":4705,"nodeType":"Block","src":"9294:44:23","statements":[{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9312:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9322:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9312:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4704,"nodeType":"ExpressionStatement","src":"9312:11:23"}]}}]},{"expression":{"id":4708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9364:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4586,"id":4709,"nodeType":"Return","src":"9357:13:23"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"8276:113:23","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8403:4:23","nodeType":"FunctionDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"value","nameLocation":"8416:5:23","nodeType":"VariableDeclaration","scope":4711,"src":"8408:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"8408:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8407:15:23"},"returnParameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4711,"src":"8446:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8446:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8445:9:23"},"scope":5039,"src":"8394:983:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4746,"nodeType":"Block","src":"9610:165:23","statements":[{"id":4745,"nodeType":"UncheckedBlock","src":"9620:149:23","statements":[{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"result","nameLocation":"9652:6:23","nodeType":"VariableDeclaration","scope":4745,"src":"9644:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"9644:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"arguments":[{"id":4725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"9666:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4724,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4711,4747],"referencedDeclaration":4711,"src":"9661:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9661:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9644:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9693:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"9703:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4730,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"9715:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4181_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4179,"src":"9715:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"src":"9703:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9730:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9735:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9730:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"9744:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9730:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9703:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9756:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9703:54:23","trueExpression":{"hexValue":"31","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9702:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9693:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4721,"id":4744,"nodeType":"Return","src":"9686:72:23"}]}]},"documentation":{"id":4712,"nodeType":"StructuredDocumentation","src":"9383:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4747,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9539:4:23","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"value","nameLocation":"9552:5:23","nodeType":"VariableDeclaration","scope":4747,"src":"9544:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9544:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"rounding","nameLocation":"9568:8:23","nodeType":"VariableDeclaration","scope":4747,"src":"9559:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4716,"nodeType":"UserDefinedTypeName","pathNode":{"id":4715,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4181,"src":"9559:8:23"},"referencedDeclaration":4181,"src":"9559:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9543:34:23"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4747,"src":"9601:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9600:9:23"},"scope":5039,"src":"9530:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4875,"nodeType":"Block","src":"9962:828:23","statements":[{"assignments":[4756],"declarations":[{"constant":false,"id":4756,"mutability":"mutable","name":"result","nameLocation":"9980:6:23","nodeType":"VariableDeclaration","scope":4875,"src":"9972:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4758,"initialValue":{"hexValue":"30","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9989:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9972:18:23"},{"id":4872,"nodeType":"UncheckedBlock","src":"10000:761:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10028:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10037:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10041:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10037:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10028:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4775,"nodeType":"IfStatement","src":"10024:99:23","trueBody":{"id":4774,"nodeType":"Block","src":"10045:78:23","statements":[{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10063:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10072:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10076:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10072:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10063:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"10063:15:23"},{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10096:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10106:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10096:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ExpressionStatement","src":"10096:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10140:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10149:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10153:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10149:6:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10140:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4792,"nodeType":"IfStatement","src":"10136:99:23","trueBody":{"id":4791,"nodeType":"Block","src":"10157:78:23","statements":[{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10175:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10184:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10188:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10184:6:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10175:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"10175:15:23"},{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10208:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10218:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10208:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"10208:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10252:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10261:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10265:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10261:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10252:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4809,"nodeType":"IfStatement","src":"10248:99:23","trueBody":{"id":4808,"nodeType":"Block","src":"10269:78:23","statements":[{"expression":{"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10287:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10296:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10300:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10296:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10287:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4803,"nodeType":"ExpressionStatement","src":"10287:15:23"},{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10320:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10320:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"10320:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10364:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10373:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10377:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10373:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10364:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4826,"nodeType":"IfStatement","src":"10360:96:23","trueBody":{"id":4825,"nodeType":"Block","src":"10380:76:23","statements":[{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10398:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10407:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10411:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10407:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10398:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4820,"nodeType":"ExpressionStatement","src":"10398:14:23"},{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10430:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10430:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"10430:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10473:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10482:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10473:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4843,"nodeType":"IfStatement","src":"10469:96:23","trueBody":{"id":4842,"nodeType":"Block","src":"10489:76:23","statements":[{"expression":{"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10507:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10516:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10520:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10516:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10507:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4837,"nodeType":"ExpressionStatement","src":"10507:14:23"},{"expression":{"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10539:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10549:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10539:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4841,"nodeType":"ExpressionStatement","src":"10539:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10582:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10591:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10595:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10591:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10582:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4860,"nodeType":"IfStatement","src":"10578:96:23","trueBody":{"id":4859,"nodeType":"Block","src":"10598:76:23","statements":[{"expression":{"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10616:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10625:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10629:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10625:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10616:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4854,"nodeType":"ExpressionStatement","src":"10616:14:23"},{"expression":{"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10648:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10658:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10648:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4858,"nodeType":"ExpressionStatement","src":"10648:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"10691:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10700:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10704:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10700:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10691:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4871,"nodeType":"IfStatement","src":"10687:64:23","trueBody":{"id":4870,"nodeType":"Block","src":"10707:44:23","statements":[{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10725:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10725:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"10725:11:23"}]}}]},{"expression":{"id":4873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"10777:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4754,"id":4874,"nodeType":"Return","src":"10770:13:23"}]},"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"9781:114:23","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4876,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9909:5:23","nodeType":"FunctionDefinition","parameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"value","nameLocation":"9923:5:23","nodeType":"VariableDeclaration","scope":4876,"src":"9915:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"9915:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9914:15:23"},"returnParameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4876,"src":"9953:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"9953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9952:9:23"},"scope":5039,"src":"9900:890:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4911,"nodeType":"Block","src":"11025:165:23","statements":[{"id":4910,"nodeType":"UncheckedBlock","src":"11035:149:23","statements":[{"assignments":[4888],"declarations":[{"constant":false,"id":4888,"mutability":"mutable","name":"result","nameLocation":"11067:6:23","nodeType":"VariableDeclaration","scope":4910,"src":"11059:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11059:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4892,"initialValue":{"arguments":[{"id":4890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"11082:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4889,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4876,4912],"referencedDeclaration":4876,"src":"11076:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11076:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11059:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"11109:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"11119:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4895,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11131:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4181_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4179,"src":"11131:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"src":"11119:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11146:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"11150:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11146:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"11159:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11146:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11119:45:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11171:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11119:53:23","trueExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11118:55:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11109:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4886,"id":4909,"nodeType":"Return","src":"11102:71:23"}]}]},"documentation":{"id":4877,"nodeType":"StructuredDocumentation","src":"10796:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4912,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10953:5:23","nodeType":"FunctionDefinition","parameters":{"id":4883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"value","nameLocation":"10967:5:23","nodeType":"VariableDeclaration","scope":4912,"src":"10959:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10959:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4882,"mutability":"mutable","name":"rounding","nameLocation":"10983:8:23","nodeType":"VariableDeclaration","scope":4912,"src":"10974:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4881,"nodeType":"UserDefinedTypeName","pathNode":{"id":4880,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4181,"src":"10974:8:23"},"referencedDeclaration":4181,"src":"10974:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"10958:34:23"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4912,"src":"11016:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"11016:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11015:9:23"},"scope":5039,"src":"10944:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4998,"nodeType":"Block","src":"11504:600:23","statements":[{"assignments":[4921],"declarations":[{"constant":false,"id":4921,"mutability":"mutable","name":"result","nameLocation":"11522:6:23","nodeType":"VariableDeclaration","scope":4998,"src":"11514:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"11514:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4923,"initialValue":{"hexValue":"30","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11531:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11514:18:23"},{"id":4995,"nodeType":"UncheckedBlock","src":"11542:533:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11570:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11579:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11570:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11585:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11570:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4938,"nodeType":"IfStatement","src":"11566:98:23","trueBody":{"id":4937,"nodeType":"Block","src":"11588:76:23","statements":[{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11606:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11606:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4932,"nodeType":"ExpressionStatement","src":"11606:13:23"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"11637:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11647:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11637:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"11637:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11690:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11681:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11695:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11681:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4953,"nodeType":"IfStatement","src":"11677:95:23","trueBody":{"id":4952,"nodeType":"Block","src":"11698:74:23","statements":[{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11716:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11726:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11716:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"11716:12:23"},{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"11746:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11756:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11746:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4951,"nodeType":"ExpressionStatement","src":"11746:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11789:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11789:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11803:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11789:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4968,"nodeType":"IfStatement","src":"11785:95:23","trueBody":{"id":4967,"nodeType":"Block","src":"11806:74:23","statements":[{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11824:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11834:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11824:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4962,"nodeType":"ExpressionStatement","src":"11824:12:23"},{"expression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"11854:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11864:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11854:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4966,"nodeType":"ExpressionStatement","src":"11854:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11897:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11906:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11897:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11911:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11897:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4983,"nodeType":"IfStatement","src":"11893:95:23","trueBody":{"id":4982,"nodeType":"Block","src":"11914:74:23","statements":[{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"11932:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11932:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"11932:12:23"},{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"11962:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11972:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11962:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4981,"nodeType":"ExpressionStatement","src":"11962:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"12005:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12014:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12005:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12018:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12005:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4994,"nodeType":"IfStatement","src":"12001:64:23","trueBody":{"id":4993,"nodeType":"Block","src":"12021:44:23","statements":[{"expression":{"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"12039:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12049:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12039:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4992,"nodeType":"ExpressionStatement","src":"12039:11:23"}]}}]},{"expression":{"id":4996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"12091:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4919,"id":4997,"nodeType":"Return","src":"12084:13:23"}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"11196:240:23","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4999,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11450:6:23","nodeType":"FunctionDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"value","nameLocation":"11465:5:23","nodeType":"VariableDeclaration","scope":4999,"src":"11457:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"11457:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11456:15:23"},"returnParameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4999,"src":"11495:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"11495:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11494:9:23"},"scope":5039,"src":"11441:663:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5037,"nodeType":"Block","src":"12340:173:23","statements":[{"id":5036,"nodeType":"UncheckedBlock","src":"12350:157:23","statements":[{"assignments":[5011],"declarations":[{"constant":false,"id":5011,"mutability":"mutable","name":"result","nameLocation":"12382:6:23","nodeType":"VariableDeclaration","scope":5036,"src":"12374:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"12374:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5015,"initialValue":{"arguments":[{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"12398:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5012,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4999,5038],"referencedDeclaration":4999,"src":"12391:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12391:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12374:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"12425:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"12435:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5018,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"12447:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4181_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4179,"src":"12447:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"src":"12435:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12462:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"12468:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12477:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12468:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12467:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12462:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"12482:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12462:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12435:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12494:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12435:60:23","trueExpression":{"hexValue":"31","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12490:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12434:62:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12425:71:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5009,"id":5035,"nodeType":"Return","src":"12418:78:23"}]}]},"documentation":{"id":5000,"nodeType":"StructuredDocumentation","src":"12110:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5038,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12267:6:23","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"value","nameLocation":"12282:5:23","nodeType":"VariableDeclaration","scope":5038,"src":"12274:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"12274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"rounding","nameLocation":"12298:8:23","nodeType":"VariableDeclaration","scope":5038,"src":"12289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":5004,"nodeType":"UserDefinedTypeName","pathNode":{"id":5003,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4181,"src":"12289:8:23"},"referencedDeclaration":4181,"src":"12289:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4181","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12273:34:23"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5038,"src":"12331:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"12331:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12330:9:23"},"scope":5039,"src":"12258:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5040,"src":"202:12313:23","usedErrors":[]}],"src":"103:12413:23"},"id":23},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","exportedSymbols":{"SafeCastUpgradeable":[6580]},"id":6581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5041,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCastUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"217:709:24","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":6580,"linearizedBaseContracts":[6580],"name":"SafeCastUpgradeable","nameLocation":"935:19:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":5066,"nodeType":"Block","src":"1350:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"1368:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1382:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5053,"name":"uint248","nodeType":"ElementaryTypeName","src":"1382:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1377:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1377:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1377:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1368:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1396:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1360:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1360:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"ExpressionStatement","src":"1360:78:24"},{"expression":{"arguments":[{"id":5063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"1463:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5061,"name":"uint248","nodeType":"ElementaryTypeName","src":"1455:7:24","typeDescriptions":{}}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5049,"id":5065,"nodeType":"Return","src":"1448:21:24"}]},"documentation":{"id":5043,"nodeType":"StructuredDocumentation","src":"961:318:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1293:9:24","nodeType":"FunctionDefinition","parameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5045,"mutability":"mutable","name":"value","nameLocation":"1311:5:24","nodeType":"VariableDeclaration","scope":5067,"src":"1303:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1302:15:24"},"returnParameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5067,"src":"1341:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5047,"name":"uint248","nodeType":"ElementaryTypeName","src":"1341:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1340:9:24"},"scope":6580,"src":"1284:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5091,"nodeType":"Block","src":"1871:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1889:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1903:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5078,"name":"uint240","nodeType":"ElementaryTypeName","src":"1903:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1898:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1898:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1898:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1889:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1917:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1881:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1881:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5085,"nodeType":"ExpressionStatement","src":"1881:78:24"},{"expression":{"arguments":[{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1984:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1976:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5086,"name":"uint240","nodeType":"ElementaryTypeName","src":"1976:7:24","typeDescriptions":{}}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1976:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5074,"id":5090,"nodeType":"Return","src":"1969:21:24"}]},"documentation":{"id":5068,"nodeType":"StructuredDocumentation","src":"1482:318:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5092,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1814:9:24","nodeType":"FunctionDefinition","parameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"value","nameLocation":"1832:5:24","nodeType":"VariableDeclaration","scope":5092,"src":"1824:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:15:24"},"returnParameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5092,"src":"1862:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5072,"name":"uint240","nodeType":"ElementaryTypeName","src":"1862:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1861:9:24"},"scope":6580,"src":"1805:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5116,"nodeType":"Block","src":"2392:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"2410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2424:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5103,"name":"uint232","nodeType":"ElementaryTypeName","src":"2424:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2419:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2419:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2419:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2410:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2438:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2402:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2402:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5110,"nodeType":"ExpressionStatement","src":"2402:78:24"},{"expression":{"arguments":[{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"2505:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5111,"name":"uint232","nodeType":"ElementaryTypeName","src":"2497:7:24","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5099,"id":5115,"nodeType":"Return","src":"2490:21:24"}]},"documentation":{"id":5093,"nodeType":"StructuredDocumentation","src":"2003:318:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2335:9:24","nodeType":"FunctionDefinition","parameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"value","nameLocation":"2353:5:24","nodeType":"VariableDeclaration","scope":5117,"src":"2345:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2344:15:24"},"returnParameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5117,"src":"2383:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5097,"name":"uint232","nodeType":"ElementaryTypeName","src":"2383:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2382:9:24"},"scope":6580,"src":"2326:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5141,"nodeType":"Block","src":"2913:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"2931:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2945:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5128,"name":"uint224","nodeType":"ElementaryTypeName","src":"2945:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2940:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2940:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2940:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2931:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2959:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2923:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2923:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5135,"nodeType":"ExpressionStatement","src":"2923:78:24"},{"expression":{"arguments":[{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"3026:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5136,"name":"uint224","nodeType":"ElementaryTypeName","src":"3018:7:24","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5124,"id":5140,"nodeType":"Return","src":"3011:21:24"}]},"documentation":{"id":5118,"nodeType":"StructuredDocumentation","src":"2524:318:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2856:9:24","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"value","nameLocation":"2874:5:24","nodeType":"VariableDeclaration","scope":5142,"src":"2866:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2865:15:24"},"returnParameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5142,"src":"2904:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5122,"name":"uint224","nodeType":"ElementaryTypeName","src":"2904:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2903:9:24"},"scope":6580,"src":"2847:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5166,"nodeType":"Block","src":"3434:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3452:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5153,"name":"uint216","nodeType":"ElementaryTypeName","src":"3466:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3461:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3461:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3461:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3452:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3480:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3444:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3444:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5160,"nodeType":"ExpressionStatement","src":"3444:78:24"},{"expression":{"arguments":[{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3547:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5161,"name":"uint216","nodeType":"ElementaryTypeName","src":"3539:7:24","typeDescriptions":{}}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3539:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5149,"id":5165,"nodeType":"Return","src":"3532:21:24"}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"3045:318:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3377:9:24","nodeType":"FunctionDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"value","nameLocation":"3395:5:24","nodeType":"VariableDeclaration","scope":5167,"src":"3387:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3386:15:24"},"returnParameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5167,"src":"3425:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5147,"name":"uint216","nodeType":"ElementaryTypeName","src":"3425:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3424:9:24"},"scope":6580,"src":"3368:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5191,"nodeType":"Block","src":"3955:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"3973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3987:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5178,"name":"uint208","nodeType":"ElementaryTypeName","src":"3987:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5177,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3982:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3982:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3973:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4001:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3965:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3965:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5185,"nodeType":"ExpressionStatement","src":"3965:78:24"},{"expression":{"arguments":[{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4068:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4060:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5186,"name":"uint208","nodeType":"ElementaryTypeName","src":"4060:7:24","typeDescriptions":{}}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4060:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5174,"id":5190,"nodeType":"Return","src":"4053:21:24"}]},"documentation":{"id":5168,"nodeType":"StructuredDocumentation","src":"3566:318:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5192,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3898:9:24","nodeType":"FunctionDefinition","parameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"value","nameLocation":"3916:5:24","nodeType":"VariableDeclaration","scope":5192,"src":"3908:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:15:24"},"returnParameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5192,"src":"3946:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5172,"name":"uint208","nodeType":"ElementaryTypeName","src":"3946:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3945:9:24"},"scope":6580,"src":"3889:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5216,"nodeType":"Block","src":"4476:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"4494:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4508:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5203,"name":"uint200","nodeType":"ElementaryTypeName","src":"4508:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4503:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4503:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4503:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4494:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4522:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4486:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4486:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5210,"nodeType":"ExpressionStatement","src":"4486:78:24"},{"expression":{"arguments":[{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"4589:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4581:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5211,"name":"uint200","nodeType":"ElementaryTypeName","src":"4581:7:24","typeDescriptions":{}}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5199,"id":5215,"nodeType":"Return","src":"4574:21:24"}]},"documentation":{"id":5193,"nodeType":"StructuredDocumentation","src":"4087:318:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4419:9:24","nodeType":"FunctionDefinition","parameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"value","nameLocation":"4437:5:24","nodeType":"VariableDeclaration","scope":5217,"src":"4429:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4428:15:24"},"returnParameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5217,"src":"4467:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5197,"name":"uint200","nodeType":"ElementaryTypeName","src":"4467:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4466:9:24"},"scope":6580,"src":"4410:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5241,"nodeType":"Block","src":"4997:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"5015:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5029:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5228,"name":"uint192","nodeType":"ElementaryTypeName","src":"5029:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5024:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5024:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5024:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5015:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5043:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5007:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5007:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"ExpressionStatement","src":"5007:78:24"},{"expression":{"arguments":[{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"5110:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5102:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5236,"name":"uint192","nodeType":"ElementaryTypeName","src":"5102:7:24","typeDescriptions":{}}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5102:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5224,"id":5240,"nodeType":"Return","src":"5095:21:24"}]},"documentation":{"id":5218,"nodeType":"StructuredDocumentation","src":"4608:318:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4940:9:24","nodeType":"FunctionDefinition","parameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"value","nameLocation":"4958:5:24","nodeType":"VariableDeclaration","scope":5242,"src":"4950:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:15:24"},"returnParameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5242,"src":"4988:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5222,"name":"uint192","nodeType":"ElementaryTypeName","src":"4988:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4987:9:24"},"scope":6580,"src":"4931:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5266,"nodeType":"Block","src":"5518:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"5536:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5550:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5253,"name":"uint184","nodeType":"ElementaryTypeName","src":"5550:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5545:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5545:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5545:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5536:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5564:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5528:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5528:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5260,"nodeType":"ExpressionStatement","src":"5528:78:24"},{"expression":{"arguments":[{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"5631:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5623:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5261,"name":"uint184","nodeType":"ElementaryTypeName","src":"5623:7:24","typeDescriptions":{}}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5623:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5249,"id":5265,"nodeType":"Return","src":"5616:21:24"}]},"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"5129:318:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5461:9:24","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"value","nameLocation":"5479:5:24","nodeType":"VariableDeclaration","scope":5267,"src":"5471:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5471:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5470:15:24"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5267,"src":"5509:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5247,"name":"uint184","nodeType":"ElementaryTypeName","src":"5509:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5508:9:24"},"scope":6580,"src":"5452:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5291,"nodeType":"Block","src":"6039:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"6057:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6071:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5278,"name":"uint176","nodeType":"ElementaryTypeName","src":"6071:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5277,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6066:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6066:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6057:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6085:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6049:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6049:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5285,"nodeType":"ExpressionStatement","src":"6049:78:24"},{"expression":{"arguments":[{"id":5288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"6152:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6144:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5286,"name":"uint176","nodeType":"ElementaryTypeName","src":"6144:7:24","typeDescriptions":{}}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5274,"id":5290,"nodeType":"Return","src":"6137:21:24"}]},"documentation":{"id":5268,"nodeType":"StructuredDocumentation","src":"5650:318:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5292,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5982:9:24","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"value","nameLocation":"6000:5:24","nodeType":"VariableDeclaration","scope":5292,"src":"5992:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5992:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5991:15:24"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5292,"src":"6030:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5272,"name":"uint176","nodeType":"ElementaryTypeName","src":"6030:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6029:9:24"},"scope":6580,"src":"5973:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5316,"nodeType":"Block","src":"6560:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"6578:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6592:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5303,"name":"uint168","nodeType":"ElementaryTypeName","src":"6592:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6587:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6587:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6587:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6578:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6606:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6570:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6570:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5310,"nodeType":"ExpressionStatement","src":"6570:78:24"},{"expression":{"arguments":[{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"6673:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6665:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5311,"name":"uint168","nodeType":"ElementaryTypeName","src":"6665:7:24","typeDescriptions":{}}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6665:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5299,"id":5315,"nodeType":"Return","src":"6658:21:24"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"6171:318:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6503:9:24","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"value","nameLocation":"6521:5:24","nodeType":"VariableDeclaration","scope":5317,"src":"6513:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6512:15:24"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5317,"src":"6551:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5297,"name":"uint168","nodeType":"ElementaryTypeName","src":"6551:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6550:9:24"},"scope":6580,"src":"6494:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"7081:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"7099:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7113:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5328,"name":"uint160","nodeType":"ElementaryTypeName","src":"7113:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7108:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7108:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7108:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7099:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7127:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7091:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7091:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5335,"nodeType":"ExpressionStatement","src":"7091:78:24"},{"expression":{"arguments":[{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"7194:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7186:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5336,"name":"uint160","nodeType":"ElementaryTypeName","src":"7186:7:24","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7186:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5324,"id":5340,"nodeType":"Return","src":"7179:21:24"}]},"documentation":{"id":5318,"nodeType":"StructuredDocumentation","src":"6692:318:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7024:9:24","nodeType":"FunctionDefinition","parameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"value","nameLocation":"7042:5:24","nodeType":"VariableDeclaration","scope":5342,"src":"7034:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5319,"name":"uint256","nodeType":"ElementaryTypeName","src":"7034:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7033:15:24"},"returnParameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5342,"src":"7072:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5322,"name":"uint160","nodeType":"ElementaryTypeName","src":"7072:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7071:9:24"},"scope":6580,"src":"7015:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5366,"nodeType":"Block","src":"7602:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"7620:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7634:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5353,"name":"uint152","nodeType":"ElementaryTypeName","src":"7634:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7629:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7629:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7629:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7620:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7612:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7612:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5360,"nodeType":"ExpressionStatement","src":"7612:78:24"},{"expression":{"arguments":[{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"7715:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7707:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5361,"name":"uint152","nodeType":"ElementaryTypeName","src":"7707:7:24","typeDescriptions":{}}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7707:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5349,"id":5365,"nodeType":"Return","src":"7700:21:24"}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"7213:318:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7545:9:24","nodeType":"FunctionDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"value","nameLocation":"7563:5:24","nodeType":"VariableDeclaration","scope":5367,"src":"7555:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7555:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7554:15:24"},"returnParameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5367,"src":"7593:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5347,"name":"uint152","nodeType":"ElementaryTypeName","src":"7593:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7592:9:24"},"scope":6580,"src":"7536:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5391,"nodeType":"Block","src":"8123:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"8141:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8155:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5378,"name":"uint144","nodeType":"ElementaryTypeName","src":"8155:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8150:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8150:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8150:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8141:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8169:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8133:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8133:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5385,"nodeType":"ExpressionStatement","src":"8133:78:24"},{"expression":{"arguments":[{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"8236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8228:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5386,"name":"uint144","nodeType":"ElementaryTypeName","src":"8228:7:24","typeDescriptions":{}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8228:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5374,"id":5390,"nodeType":"Return","src":"8221:21:24"}]},"documentation":{"id":5368,"nodeType":"StructuredDocumentation","src":"7734:318:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8066:9:24","nodeType":"FunctionDefinition","parameters":{"id":5371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"value","nameLocation":"8084:5:24","nodeType":"VariableDeclaration","scope":5392,"src":"8076:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"8076:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8075:15:24"},"returnParameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"8114:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5372,"name":"uint144","nodeType":"ElementaryTypeName","src":"8114:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8113:9:24"},"scope":6580,"src":"8057:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5416,"nodeType":"Block","src":"8644:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"8662:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8676:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5403,"name":"uint136","nodeType":"ElementaryTypeName","src":"8676:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8671:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8671:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8662:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8690:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8654:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8654:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5410,"nodeType":"ExpressionStatement","src":"8654:78:24"},{"expression":{"arguments":[{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"8757:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8749:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5411,"name":"uint136","nodeType":"ElementaryTypeName","src":"8749:7:24","typeDescriptions":{}}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8749:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5399,"id":5415,"nodeType":"Return","src":"8742:21:24"}]},"documentation":{"id":5393,"nodeType":"StructuredDocumentation","src":"8255:318:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8587:9:24","nodeType":"FunctionDefinition","parameters":{"id":5396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"value","nameLocation":"8605:5:24","nodeType":"VariableDeclaration","scope":5417,"src":"8597:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5394,"name":"uint256","nodeType":"ElementaryTypeName","src":"8597:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8596:15:24"},"returnParameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5417,"src":"8635:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5397,"name":"uint136","nodeType":"ElementaryTypeName","src":"8635:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8634:9:24"},"scope":6580,"src":"8578:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5441,"nodeType":"Block","src":"9165:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"9183:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9197:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5428,"name":"uint128","nodeType":"ElementaryTypeName","src":"9197:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9192:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9192:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9192:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9183:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9211:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9175:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9175:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5435,"nodeType":"ExpressionStatement","src":"9175:78:24"},{"expression":{"arguments":[{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"9278:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9270:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5436,"name":"uint128","nodeType":"ElementaryTypeName","src":"9270:7:24","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9270:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5424,"id":5440,"nodeType":"Return","src":"9263:21:24"}]},"documentation":{"id":5418,"nodeType":"StructuredDocumentation","src":"8776:318:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9108:9:24","nodeType":"FunctionDefinition","parameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"value","nameLocation":"9126:5:24","nodeType":"VariableDeclaration","scope":5442,"src":"9118:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9117:15:24"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5442,"src":"9156:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5422,"name":"uint128","nodeType":"ElementaryTypeName","src":"9156:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9155:9:24"},"scope":6580,"src":"9099:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5466,"nodeType":"Block","src":"9686:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"9704:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9718:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5453,"name":"uint120","nodeType":"ElementaryTypeName","src":"9718:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9713:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9713:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9713:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9704:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9732:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9696:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9696:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5460,"nodeType":"ExpressionStatement","src":"9696:78:24"},{"expression":{"arguments":[{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"9799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9791:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5461,"name":"uint120","nodeType":"ElementaryTypeName","src":"9791:7:24","typeDescriptions":{}}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5449,"id":5465,"nodeType":"Return","src":"9784:21:24"}]},"documentation":{"id":5443,"nodeType":"StructuredDocumentation","src":"9297:318:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9629:9:24","nodeType":"FunctionDefinition","parameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"value","nameLocation":"9647:5:24","nodeType":"VariableDeclaration","scope":5467,"src":"9639:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5444,"name":"uint256","nodeType":"ElementaryTypeName","src":"9639:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:15:24"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5467,"src":"9677:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5447,"name":"uint120","nodeType":"ElementaryTypeName","src":"9677:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9676:9:24"},"scope":6580,"src":"9620:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5491,"nodeType":"Block","src":"10207:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"10225:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5478,"name":"uint112","nodeType":"ElementaryTypeName","src":"10239:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10234:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10234:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10234:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10225:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10253:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10217:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10217:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5485,"nodeType":"ExpressionStatement","src":"10217:78:24"},{"expression":{"arguments":[{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"10320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10312:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5486,"name":"uint112","nodeType":"ElementaryTypeName","src":"10312:7:24","typeDescriptions":{}}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10312:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5474,"id":5490,"nodeType":"Return","src":"10305:21:24"}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"9818:318:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5492,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10150:9:24","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"value","nameLocation":"10168:5:24","nodeType":"VariableDeclaration","scope":5492,"src":"10160:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"10160:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10159:15:24"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5492,"src":"10198:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5472,"name":"uint112","nodeType":"ElementaryTypeName","src":"10198:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10197:9:24"},"scope":6580,"src":"10141:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"10728:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"10746:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10760:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5503,"name":"uint104","nodeType":"ElementaryTypeName","src":"10760:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10755:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10755:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10755:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10746:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10774:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10738:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10738:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5510,"nodeType":"ExpressionStatement","src":"10738:78:24"},{"expression":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"10841:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10833:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5511,"name":"uint104","nodeType":"ElementaryTypeName","src":"10833:7:24","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10833:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5499,"id":5515,"nodeType":"Return","src":"10826:21:24"}]},"documentation":{"id":5493,"nodeType":"StructuredDocumentation","src":"10339:318:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10671:9:24","nodeType":"FunctionDefinition","parameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"value","nameLocation":"10689:5:24","nodeType":"VariableDeclaration","scope":5517,"src":"10681:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"10681:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10680:15:24"},"returnParameters":{"id":5499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"10719:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5497,"name":"uint104","nodeType":"ElementaryTypeName","src":"10719:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10718:9:24"},"scope":6580,"src":"10662:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5541,"nodeType":"Block","src":"11243:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"11261:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11275:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5528,"name":"uint96","nodeType":"ElementaryTypeName","src":"11275:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11270:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11270:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11270:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11261:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11288:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11253:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11253:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"ExpressionStatement","src":"11253:76:24"},{"expression":{"arguments":[{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"11353:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11346:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5536,"name":"uint96","nodeType":"ElementaryTypeName","src":"11346:6:24","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5524,"id":5540,"nodeType":"Return","src":"11339:20:24"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"10860:314:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":5542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11188:8:24","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"11205:5:24","nodeType":"VariableDeclaration","scope":5542,"src":"11197:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"11197:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11196:15:24"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5542,"src":"11235:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5522,"name":"uint96","nodeType":"ElementaryTypeName","src":"11235:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11234:8:24"},"scope":6580,"src":"11179:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"11755:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"11773:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11787:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5553,"name":"uint88","nodeType":"ElementaryTypeName","src":"11787:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11782:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11782:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11782:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11773:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11800:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11765:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11765:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5560,"nodeType":"ExpressionStatement","src":"11765:76:24"},{"expression":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"11865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11858:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5561,"name":"uint88","nodeType":"ElementaryTypeName","src":"11858:6:24","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11858:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5549,"id":5565,"nodeType":"Return","src":"11851:20:24"}]},"documentation":{"id":5543,"nodeType":"StructuredDocumentation","src":"11372:314:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11700:8:24","nodeType":"FunctionDefinition","parameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"value","nameLocation":"11717:5:24","nodeType":"VariableDeclaration","scope":5567,"src":"11709:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"11709:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11708:15:24"},"returnParameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"11747:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5547,"name":"uint88","nodeType":"ElementaryTypeName","src":"11747:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11746:8:24"},"scope":6580,"src":"11691:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"12267:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"12285:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12299:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5578,"name":"uint80","nodeType":"ElementaryTypeName","src":"12299:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12294:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12294:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12294:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12285:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12312:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12277:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12277:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5585,"nodeType":"ExpressionStatement","src":"12277:76:24"},{"expression":{"arguments":[{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"12377:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12370:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5586,"name":"uint80","nodeType":"ElementaryTypeName","src":"12370:6:24","typeDescriptions":{}}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5574,"id":5590,"nodeType":"Return","src":"12363:20:24"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"11884:314:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12212:8:24","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"12229:5:24","nodeType":"VariableDeclaration","scope":5592,"src":"12221:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12221:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12220:15:24"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5592,"src":"12259:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5572,"name":"uint80","nodeType":"ElementaryTypeName","src":"12259:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12258:8:24"},"scope":6580,"src":"12203:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"12779:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"12797:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12811:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5603,"name":"uint72","nodeType":"ElementaryTypeName","src":"12811:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5602,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12806:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12806:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12806:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12797:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12824:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12789:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12789:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5610,"nodeType":"ExpressionStatement","src":"12789:76:24"},{"expression":{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"12889:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5611,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:24","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12882:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5599,"id":5615,"nodeType":"Return","src":"12875:20:24"}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"12396:314:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12724:8:24","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"12741:5:24","nodeType":"VariableDeclaration","scope":5617,"src":"12733:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"12733:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12732:15:24"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5617,"src":"12771:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5597,"name":"uint72","nodeType":"ElementaryTypeName","src":"12771:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12770:8:24"},"scope":6580,"src":"12715:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5641,"nodeType":"Block","src":"13291:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"13309:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13323:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5628,"name":"uint64","nodeType":"ElementaryTypeName","src":"13323:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5627,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13318:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13318:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13318:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13309:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13336:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13301:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13301:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5635,"nodeType":"ExpressionStatement","src":"13301:76:24"},{"expression":{"arguments":[{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"13401:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13394:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5636,"name":"uint64","nodeType":"ElementaryTypeName","src":"13394:6:24","typeDescriptions":{}}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13394:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5624,"id":5640,"nodeType":"Return","src":"13387:20:24"}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"12908:314:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":5642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13236:8:24","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"13253:5:24","nodeType":"VariableDeclaration","scope":5642,"src":"13245:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"13245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13244:15:24"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5642,"src":"13283:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5622,"name":"uint64","nodeType":"ElementaryTypeName","src":"13283:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13282:8:24"},"scope":6580,"src":"13227:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"13803:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"13821:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13835:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5653,"name":"uint56","nodeType":"ElementaryTypeName","src":"13835:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13830:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13830:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13830:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13821:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13848:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13813:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13813:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5660,"nodeType":"ExpressionStatement","src":"13813:76:24"},{"expression":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"13913:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13906:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5661,"name":"uint56","nodeType":"ElementaryTypeName","src":"13906:6:24","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13906:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5649,"id":5665,"nodeType":"Return","src":"13899:20:24"}]},"documentation":{"id":5643,"nodeType":"StructuredDocumentation","src":"13420:314:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13748:8:24","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"value","nameLocation":"13765:5:24","nodeType":"VariableDeclaration","scope":5667,"src":"13757:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"13757:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13756:15:24"},"returnParameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"13795:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5647,"name":"uint56","nodeType":"ElementaryTypeName","src":"13795:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13794:8:24"},"scope":6580,"src":"13739:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5691,"nodeType":"Block","src":"14315:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"14333:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14347:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5678,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5677,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14342:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14342:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14342:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14333:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14360:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14325:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14325:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5685,"nodeType":"ExpressionStatement","src":"14325:76:24"},{"expression":{"arguments":[{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"14425:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14418:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5686,"name":"uint48","nodeType":"ElementaryTypeName","src":"14418:6:24","typeDescriptions":{}}},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14418:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5674,"id":5690,"nodeType":"Return","src":"14411:20:24"}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"13932:314:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5692,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14260:8:24","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"14277:5:24","nodeType":"VariableDeclaration","scope":5692,"src":"14269:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"14269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14268:15:24"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5692,"src":"14307:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5672,"name":"uint48","nodeType":"ElementaryTypeName","src":"14307:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14306:8:24"},"scope":6580,"src":"14251:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5716,"nodeType":"Block","src":"14827:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"14845:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14859:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5703,"name":"uint40","nodeType":"ElementaryTypeName","src":"14859:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5702,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14854:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14854:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14854:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14845:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14872:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14837:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14837:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"ExpressionStatement","src":"14837:76:24"},{"expression":{"arguments":[{"id":5713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"14937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14930:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5711,"name":"uint40","nodeType":"ElementaryTypeName","src":"14930:6:24","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14930:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5699,"id":5715,"nodeType":"Return","src":"14923:20:24"}]},"documentation":{"id":5693,"nodeType":"StructuredDocumentation","src":"14444:314:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5717,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14772:8:24","nodeType":"FunctionDefinition","parameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"value","nameLocation":"14789:5:24","nodeType":"VariableDeclaration","scope":5717,"src":"14781:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"14781:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14780:15:24"},"returnParameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5717,"src":"14819:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5697,"name":"uint40","nodeType":"ElementaryTypeName","src":"14819:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14818:8:24"},"scope":6580,"src":"14763:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5741,"nodeType":"Block","src":"15339:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"15357:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15371:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5728,"name":"uint32","nodeType":"ElementaryTypeName","src":"15371:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15366:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15366:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15366:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15357:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15384:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15349:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15349:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5735,"nodeType":"ExpressionStatement","src":"15349:76:24"},{"expression":{"arguments":[{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"15449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5736,"name":"uint32","nodeType":"ElementaryTypeName","src":"15442:6:24","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5724,"id":5740,"nodeType":"Return","src":"15435:20:24"}]},"documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"14956:314:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15284:8:24","nodeType":"FunctionDefinition","parameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"value","nameLocation":"15301:5:24","nodeType":"VariableDeclaration","scope":5742,"src":"15293:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5719,"name":"uint256","nodeType":"ElementaryTypeName","src":"15293:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15292:15:24"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5742,"src":"15331:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5722,"name":"uint32","nodeType":"ElementaryTypeName","src":"15331:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15330:8:24"},"scope":6580,"src":"15275:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5766,"nodeType":"Block","src":"15851:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"15869:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15883:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5753,"name":"uint24","nodeType":"ElementaryTypeName","src":"15883:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15878:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15878:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15878:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15896:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15861:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15861:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5760,"nodeType":"ExpressionStatement","src":"15861:76:24"},{"expression":{"arguments":[{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"15961:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15954:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5761,"name":"uint24","nodeType":"ElementaryTypeName","src":"15954:6:24","typeDescriptions":{}}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15954:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5749,"id":5765,"nodeType":"Return","src":"15947:20:24"}]},"documentation":{"id":5743,"nodeType":"StructuredDocumentation","src":"15468:314:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15796:8:24","nodeType":"FunctionDefinition","parameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"value","nameLocation":"15813:5:24","nodeType":"VariableDeclaration","scope":5767,"src":"15805:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5744,"name":"uint256","nodeType":"ElementaryTypeName","src":"15805:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15804:15:24"},"returnParameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5767,"src":"15843:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5747,"name":"uint24","nodeType":"ElementaryTypeName","src":"15843:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15842:8:24"},"scope":6580,"src":"15787:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"16363:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"16381:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16395:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5778,"name":"uint16","nodeType":"ElementaryTypeName","src":"16395:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5777,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16390:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16390:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16390:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16381:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16408:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16373:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16373:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5785,"nodeType":"ExpressionStatement","src":"16373:76:24"},{"expression":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"16473:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16466:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5786,"name":"uint16","nodeType":"ElementaryTypeName","src":"16466:6:24","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16466:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5774,"id":5790,"nodeType":"Return","src":"16459:20:24"}]},"documentation":{"id":5768,"nodeType":"StructuredDocumentation","src":"15980:314:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16308:8:24","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"value","nameLocation":"16325:5:24","nodeType":"VariableDeclaration","scope":5792,"src":"16317:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"16317:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16316:15:24"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5792,"src":"16355:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5772,"name":"uint16","nodeType":"ElementaryTypeName","src":"16355:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16354:8:24"},"scope":6580,"src":"16299:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"16869:120:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16887:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16901:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5803,"name":"uint8","nodeType":"ElementaryTypeName","src":"16901:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16896:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16896:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16896:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16887:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16913:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16879:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16879:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5810,"nodeType":"ExpressionStatement","src":"16879:74:24"},{"expression":{"arguments":[{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"16976:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16970:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5811,"name":"uint8","nodeType":"ElementaryTypeName","src":"16970:5:24","typeDescriptions":{}}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16970:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5799,"id":5815,"nodeType":"Return","src":"16963:19:24"}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"16492:310:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16816:7:24","nodeType":"FunctionDefinition","parameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"value","nameLocation":"16832:5:24","nodeType":"VariableDeclaration","scope":5817,"src":"16824:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"16824:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16823:15:24"},"returnParameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5817,"src":"16862:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5797,"name":"uint8","nodeType":"ElementaryTypeName","src":"16862:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16861:7:24"},"scope":6580,"src":"16807:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5837,"nodeType":"Block","src":"17263:103:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"17281:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17290:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17281:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17293:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17273:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17273:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5831,"nodeType":"ExpressionStatement","src":"17273:55:24"},{"expression":{"arguments":[{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"17353:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17345:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5832,"name":"uint256","nodeType":"ElementaryTypeName","src":"17345:7:24","typeDescriptions":{}}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17345:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5824,"id":5836,"nodeType":"Return","src":"17338:21:24"}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"16995:198:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17207:9:24","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"17224:5:24","nodeType":"VariableDeclaration","scope":5838,"src":"17217:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5819,"name":"int256","nodeType":"ElementaryTypeName","src":"17217:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17216:14:24"},"returnParameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5838,"src":"17254:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"17254:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17253:9:24"},"scope":6580,"src":"17198:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5860,"nodeType":"Block","src":"17801:124:24","statements":[{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"17831:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17824:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5847,"name":"int248","nodeType":"ElementaryTypeName","src":"17824:6:24","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17824:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17811:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5852,"nodeType":"ExpressionStatement","src":"17811:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"17855:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"17869:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17855:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17876:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17847:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17847:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5859,"nodeType":"ExpressionStatement","src":"17847:71:24"}]},"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"17372:350:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5861,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17736:8:24","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"17752:5:24","nodeType":"VariableDeclaration","scope":5861,"src":"17745:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5840,"name":"int256","nodeType":"ElementaryTypeName","src":"17745:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17744:14:24"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"downcasted","nameLocation":"17789:10:24","nodeType":"VariableDeclaration","scope":5861,"src":"17782:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5843,"name":"int248","nodeType":"ElementaryTypeName","src":"17782:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17781:19:24"},"scope":6580,"src":"17727:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5883,"nodeType":"Block","src":"18360:124:24","statements":[{"expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"18370:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18390:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18383:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5870,"name":"int240","nodeType":"ElementaryTypeName","src":"18383:6:24","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18383:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18370:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5875,"nodeType":"ExpressionStatement","src":"18370:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"18414:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18428:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18414:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18435:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18406:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18406:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"ExpressionStatement","src":"18406:71:24"}]},"documentation":{"id":5862,"nodeType":"StructuredDocumentation","src":"17931:350:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5884,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18295:8:24","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"18311:5:24","nodeType":"VariableDeclaration","scope":5884,"src":"18304:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5863,"name":"int256","nodeType":"ElementaryTypeName","src":"18304:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18303:14:24"},"returnParameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"downcasted","nameLocation":"18348:10:24","nodeType":"VariableDeclaration","scope":5884,"src":"18341:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5866,"name":"int240","nodeType":"ElementaryTypeName","src":"18341:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18340:19:24"},"scope":6580,"src":"18286:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5906,"nodeType":"Block","src":"18919:124:24","statements":[{"expression":{"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"18929:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"18949:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18942:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5893,"name":"int232","nodeType":"ElementaryTypeName","src":"18942:6:24","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18942:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18929:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5898,"nodeType":"ExpressionStatement","src":"18929:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5900,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"18973:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"18987:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18973:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18994:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18965:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18965:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5905,"nodeType":"ExpressionStatement","src":"18965:71:24"}]},"documentation":{"id":5885,"nodeType":"StructuredDocumentation","src":"18490:350:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5907,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18854:8:24","nodeType":"FunctionDefinition","parameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"value","nameLocation":"18870:5:24","nodeType":"VariableDeclaration","scope":5907,"src":"18863:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5886,"name":"int256","nodeType":"ElementaryTypeName","src":"18863:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18862:14:24"},"returnParameters":{"id":5891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"downcasted","nameLocation":"18907:10:24","nodeType":"VariableDeclaration","scope":5907,"src":"18900:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5889,"name":"int232","nodeType":"ElementaryTypeName","src":"18900:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18899:19:24"},"scope":6580,"src":"18845:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5929,"nodeType":"Block","src":"19478:124:24","statements":[{"expression":{"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"19488:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"19508:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19501:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5916,"name":"int224","nodeType":"ElementaryTypeName","src":"19501:6:24","typeDescriptions":{}}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19501:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19488:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5921,"nodeType":"ExpressionStatement","src":"19488:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"19532:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"19546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19532:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19553:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19524:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19524:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5928,"nodeType":"ExpressionStatement","src":"19524:71:24"}]},"documentation":{"id":5908,"nodeType":"StructuredDocumentation","src":"19049:350:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19413:8:24","nodeType":"FunctionDefinition","parameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"value","nameLocation":"19429:5:24","nodeType":"VariableDeclaration","scope":5930,"src":"19422:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5909,"name":"int256","nodeType":"ElementaryTypeName","src":"19422:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19421:14:24"},"returnParameters":{"id":5914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"downcasted","nameLocation":"19466:10:24","nodeType":"VariableDeclaration","scope":5930,"src":"19459:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5912,"name":"int224","nodeType":"ElementaryTypeName","src":"19459:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19458:19:24"},"scope":6580,"src":"19404:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"20037:124:24","statements":[{"expression":{"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"20047:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"20067:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20060:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5939,"name":"int216","nodeType":"ElementaryTypeName","src":"20060:6:24","typeDescriptions":{}}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20060:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20047:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5944,"nodeType":"ExpressionStatement","src":"20047:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"20091:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"20105:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20091:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20112:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20083:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20083:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5951,"nodeType":"ExpressionStatement","src":"20083:71:24"}]},"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"19608:350:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19972:8:24","nodeType":"FunctionDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"value","nameLocation":"19988:5:24","nodeType":"VariableDeclaration","scope":5953,"src":"19981:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5932,"name":"int256","nodeType":"ElementaryTypeName","src":"19981:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19980:14:24"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"downcasted","nameLocation":"20025:10:24","nodeType":"VariableDeclaration","scope":5953,"src":"20018:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5935,"name":"int216","nodeType":"ElementaryTypeName","src":"20018:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20017:19:24"},"scope":6580,"src":"19963:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5975,"nodeType":"Block","src":"20596:124:24","statements":[{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"20606:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"20626:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20619:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5962,"name":"int208","nodeType":"ElementaryTypeName","src":"20619:6:24","typeDescriptions":{}}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20619:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20606:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5967,"nodeType":"ExpressionStatement","src":"20606:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"20650:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"20664:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20650:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20671:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20642:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20642:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5974,"nodeType":"ExpressionStatement","src":"20642:71:24"}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"20167:350:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20531:8:24","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"value","nameLocation":"20547:5:24","nodeType":"VariableDeclaration","scope":5976,"src":"20540:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5955,"name":"int256","nodeType":"ElementaryTypeName","src":"20540:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20539:14:24"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"downcasted","nameLocation":"20584:10:24","nodeType":"VariableDeclaration","scope":5976,"src":"20577:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5958,"name":"int208","nodeType":"ElementaryTypeName","src":"20577:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20576:19:24"},"scope":6580,"src":"20522:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5998,"nodeType":"Block","src":"21155:124:24","statements":[{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"21165:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"21185:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21178:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5985,"name":"int200","nodeType":"ElementaryTypeName","src":"21178:6:24","typeDescriptions":{}}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21178:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21165:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5990,"nodeType":"ExpressionStatement","src":"21165:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"21209:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"21223:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21209:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21201:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21201:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5997,"nodeType":"ExpressionStatement","src":"21201:71:24"}]},"documentation":{"id":5977,"nodeType":"StructuredDocumentation","src":"20726:350:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21090:8:24","nodeType":"FunctionDefinition","parameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"value","nameLocation":"21106:5:24","nodeType":"VariableDeclaration","scope":5999,"src":"21099:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5978,"name":"int256","nodeType":"ElementaryTypeName","src":"21099:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21098:14:24"},"returnParameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"downcasted","nameLocation":"21143:10:24","nodeType":"VariableDeclaration","scope":5999,"src":"21136:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5981,"name":"int200","nodeType":"ElementaryTypeName","src":"21136:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21135:19:24"},"scope":6580,"src":"21081:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6021,"nodeType":"Block","src":"21714:124:24","statements":[{"expression":{"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"21724:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"21744:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21737:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6008,"name":"int192","nodeType":"ElementaryTypeName","src":"21737:6:24","typeDescriptions":{}}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21737:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21724:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6013,"nodeType":"ExpressionStatement","src":"21724:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"21768:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"21782:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21768:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21789:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6014,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21760:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21760:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6020,"nodeType":"ExpressionStatement","src":"21760:71:24"}]},"documentation":{"id":6000,"nodeType":"StructuredDocumentation","src":"21285:350:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6022,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21649:8:24","nodeType":"FunctionDefinition","parameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"value","nameLocation":"21665:5:24","nodeType":"VariableDeclaration","scope":6022,"src":"21658:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6001,"name":"int256","nodeType":"ElementaryTypeName","src":"21658:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21657:14:24"},"returnParameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"downcasted","nameLocation":"21702:10:24","nodeType":"VariableDeclaration","scope":6022,"src":"21695:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6004,"name":"int192","nodeType":"ElementaryTypeName","src":"21695:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21694:19:24"},"scope":6580,"src":"21640:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6044,"nodeType":"Block","src":"22273:124:24","statements":[{"expression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"22283:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"22303:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22296:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6031,"name":"int184","nodeType":"ElementaryTypeName","src":"22296:6:24","typeDescriptions":{}}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22296:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22283:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6036,"nodeType":"ExpressionStatement","src":"22283:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"22327:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"22341:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22327:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22348:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22319:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22319:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6043,"nodeType":"ExpressionStatement","src":"22319:71:24"}]},"documentation":{"id":6023,"nodeType":"StructuredDocumentation","src":"21844:350:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22208:8:24","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"value","nameLocation":"22224:5:24","nodeType":"VariableDeclaration","scope":6045,"src":"22217:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6024,"name":"int256","nodeType":"ElementaryTypeName","src":"22217:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22216:14:24"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"downcasted","nameLocation":"22261:10:24","nodeType":"VariableDeclaration","scope":6045,"src":"22254:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6027,"name":"int184","nodeType":"ElementaryTypeName","src":"22254:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22253:19:24"},"scope":6580,"src":"22199:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"22832:124:24","statements":[{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"22842:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22862:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22855:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6054,"name":"int176","nodeType":"ElementaryTypeName","src":"22855:6:24","typeDescriptions":{}}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22855:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22842:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6059,"nodeType":"ExpressionStatement","src":"22842:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"22886:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22907:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22878:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22878:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6066,"nodeType":"ExpressionStatement","src":"22878:71:24"}]},"documentation":{"id":6046,"nodeType":"StructuredDocumentation","src":"22403:350:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22767:8:24","nodeType":"FunctionDefinition","parameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"value","nameLocation":"22783:5:24","nodeType":"VariableDeclaration","scope":6068,"src":"22776:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6047,"name":"int256","nodeType":"ElementaryTypeName","src":"22776:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22775:14:24"},"returnParameters":{"id":6052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"mutability":"mutable","name":"downcasted","nameLocation":"22820:10:24","nodeType":"VariableDeclaration","scope":6068,"src":"22813:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6050,"name":"int176","nodeType":"ElementaryTypeName","src":"22813:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22812:19:24"},"scope":6580,"src":"22758:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6090,"nodeType":"Block","src":"23391:124:24","statements":[{"expression":{"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"23401:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"23421:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23414:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6077,"name":"int168","nodeType":"ElementaryTypeName","src":"23414:6:24","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23414:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23401:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6082,"nodeType":"ExpressionStatement","src":"23401:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"23445:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"23459:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23445:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23466:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23437:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23437:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6089,"nodeType":"ExpressionStatement","src":"23437:71:24"}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"22962:350:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6091,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23326:8:24","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"23342:5:24","nodeType":"VariableDeclaration","scope":6091,"src":"23335:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6070,"name":"int256","nodeType":"ElementaryTypeName","src":"23335:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23334:14:24"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"downcasted","nameLocation":"23379:10:24","nodeType":"VariableDeclaration","scope":6091,"src":"23372:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6073,"name":"int168","nodeType":"ElementaryTypeName","src":"23372:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23371:19:24"},"scope":6580,"src":"23317:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6113,"nodeType":"Block","src":"23950:124:24","statements":[{"expression":{"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"23960:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"23980:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23973:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6100,"name":"int160","nodeType":"ElementaryTypeName","src":"23973:6:24","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23973:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23960:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6105,"nodeType":"ExpressionStatement","src":"23960:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"24004:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"24018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24004:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24025:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23996:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23996:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6112,"nodeType":"ExpressionStatement","src":"23996:71:24"}]},"documentation":{"id":6092,"nodeType":"StructuredDocumentation","src":"23521:350:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23885:8:24","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"value","nameLocation":"23901:5:24","nodeType":"VariableDeclaration","scope":6114,"src":"23894:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6093,"name":"int256","nodeType":"ElementaryTypeName","src":"23894:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23893:14:24"},"returnParameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"downcasted","nameLocation":"23938:10:24","nodeType":"VariableDeclaration","scope":6114,"src":"23931:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6096,"name":"int160","nodeType":"ElementaryTypeName","src":"23931:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23930:19:24"},"scope":6580,"src":"23876:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"24509:124:24","statements":[{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"24519:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"24539:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24532:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6123,"name":"int152","nodeType":"ElementaryTypeName","src":"24532:6:24","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24532:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24519:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6128,"nodeType":"ExpressionStatement","src":"24519:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"24563:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"24577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24584:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":6129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24555:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24555:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6135,"nodeType":"ExpressionStatement","src":"24555:71:24"}]},"documentation":{"id":6115,"nodeType":"StructuredDocumentation","src":"24080:350:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24444:8:24","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"value","nameLocation":"24460:5:24","nodeType":"VariableDeclaration","scope":6137,"src":"24453:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6116,"name":"int256","nodeType":"ElementaryTypeName","src":"24453:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24452:14:24"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"downcasted","nameLocation":"24497:10:24","nodeType":"VariableDeclaration","scope":6137,"src":"24490:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6119,"name":"int152","nodeType":"ElementaryTypeName","src":"24490:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24489:19:24"},"scope":6580,"src":"24435:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6159,"nodeType":"Block","src":"25068:124:24","statements":[{"expression":{"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"25078:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"25098:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25091:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6146,"name":"int144","nodeType":"ElementaryTypeName","src":"25091:6:24","typeDescriptions":{}}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25091:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25078:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6151,"nodeType":"ExpressionStatement","src":"25078:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"25122:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"25136:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25122:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25143:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":6152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25114:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25114:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6158,"nodeType":"ExpressionStatement","src":"25114:71:24"}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"24639:350:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":6160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25003:8:24","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"25019:5:24","nodeType":"VariableDeclaration","scope":6160,"src":"25012:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6139,"name":"int256","nodeType":"ElementaryTypeName","src":"25012:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25011:14:24"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"downcasted","nameLocation":"25056:10:24","nodeType":"VariableDeclaration","scope":6160,"src":"25049:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6142,"name":"int144","nodeType":"ElementaryTypeName","src":"25049:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25048:19:24"},"scope":6580,"src":"24994:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"25627:124:24","statements":[{"expression":{"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"25637:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"25657:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25650:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6169,"name":"int136","nodeType":"ElementaryTypeName","src":"25650:6:24","typeDescriptions":{}}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25650:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25637:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6174,"nodeType":"ExpressionStatement","src":"25637:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"25681:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"25695:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25681:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25702:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":6175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25673:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25673:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6181,"nodeType":"ExpressionStatement","src":"25673:71:24"}]},"documentation":{"id":6161,"nodeType":"StructuredDocumentation","src":"25198:350:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25562:8:24","nodeType":"FunctionDefinition","parameters":{"id":6164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"value","nameLocation":"25578:5:24","nodeType":"VariableDeclaration","scope":6183,"src":"25571:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6162,"name":"int256","nodeType":"ElementaryTypeName","src":"25571:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25570:14:24"},"returnParameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"downcasted","nameLocation":"25615:10:24","nodeType":"VariableDeclaration","scope":6183,"src":"25608:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6165,"name":"int136","nodeType":"ElementaryTypeName","src":"25608:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25607:19:24"},"scope":6580,"src":"25553:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6205,"nodeType":"Block","src":"26186:124:24","statements":[{"expression":{"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"26196:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"26216:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26209:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6192,"name":"int128","nodeType":"ElementaryTypeName","src":"26209:6:24","typeDescriptions":{}}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26209:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26196:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6197,"nodeType":"ExpressionStatement","src":"26196:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"26240:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"26254:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26240:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26261:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":6198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26232:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26232:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6204,"nodeType":"ExpressionStatement","src":"26232:71:24"}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"25757:350:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":6206,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26121:8:24","nodeType":"FunctionDefinition","parameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"value","nameLocation":"26137:5:24","nodeType":"VariableDeclaration","scope":6206,"src":"26130:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6185,"name":"int256","nodeType":"ElementaryTypeName","src":"26130:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26129:14:24"},"returnParameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"downcasted","nameLocation":"26174:10:24","nodeType":"VariableDeclaration","scope":6206,"src":"26167:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6188,"name":"int128","nodeType":"ElementaryTypeName","src":"26167:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26166:19:24"},"scope":6580,"src":"26112:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6228,"nodeType":"Block","src":"26745:124:24","statements":[{"expression":{"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6214,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"26755:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"26775:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26768:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6215,"name":"int120","nodeType":"ElementaryTypeName","src":"26768:6:24","typeDescriptions":{}}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26768:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26755:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6220,"nodeType":"ExpressionStatement","src":"26755:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"26799:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"26813:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26799:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26820:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":6221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26791:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26791:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6227,"nodeType":"ExpressionStatement","src":"26791:71:24"}]},"documentation":{"id":6207,"nodeType":"StructuredDocumentation","src":"26316:350:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":6229,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26680:8:24","nodeType":"FunctionDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"value","nameLocation":"26696:5:24","nodeType":"VariableDeclaration","scope":6229,"src":"26689:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6208,"name":"int256","nodeType":"ElementaryTypeName","src":"26689:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26688:14:24"},"returnParameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"downcasted","nameLocation":"26733:10:24","nodeType":"VariableDeclaration","scope":6229,"src":"26726:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6211,"name":"int120","nodeType":"ElementaryTypeName","src":"26726:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26725:19:24"},"scope":6580,"src":"26671:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"27304:124:24","statements":[{"expression":{"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"27314:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"27334:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27327:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6238,"name":"int112","nodeType":"ElementaryTypeName","src":"27327:6:24","typeDescriptions":{}}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27327:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27314:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6243,"nodeType":"ExpressionStatement","src":"27314:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"27358:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"27372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":6248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27379:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":6244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27350:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27350:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"ExpressionStatement","src":"27350:71:24"}]},"documentation":{"id":6230,"nodeType":"StructuredDocumentation","src":"26875:350:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27239:8:24","nodeType":"FunctionDefinition","parameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"value","nameLocation":"27255:5:24","nodeType":"VariableDeclaration","scope":6252,"src":"27248:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6231,"name":"int256","nodeType":"ElementaryTypeName","src":"27248:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27247:14:24"},"returnParameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"downcasted","nameLocation":"27292:10:24","nodeType":"VariableDeclaration","scope":6252,"src":"27285:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6234,"name":"int112","nodeType":"ElementaryTypeName","src":"27285:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27284:19:24"},"scope":6580,"src":"27230:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6274,"nodeType":"Block","src":"27863:124:24","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"27873:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"27893:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27886:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6261,"name":"int104","nodeType":"ElementaryTypeName","src":"27886:6:24","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27886:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27873:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6266,"nodeType":"ExpressionStatement","src":"27873:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"27917:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"27931:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27917:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27938:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27909:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27909:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6273,"nodeType":"ExpressionStatement","src":"27909:71:24"}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"27434:350:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27798:8:24","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"value","nameLocation":"27814:5:24","nodeType":"VariableDeclaration","scope":6275,"src":"27807:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6254,"name":"int256","nodeType":"ElementaryTypeName","src":"27807:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27806:14:24"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"downcasted","nameLocation":"27851:10:24","nodeType":"VariableDeclaration","scope":6275,"src":"27844:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6257,"name":"int104","nodeType":"ElementaryTypeName","src":"27844:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27843:19:24"},"scope":6580,"src":"27789:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6297,"nodeType":"Block","src":"28415:122:24","statements":[{"expression":{"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"28425:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"28444:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28438:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6284,"name":"int96","nodeType":"ElementaryTypeName","src":"28438:5:24","typeDescriptions":{}}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28438:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28425:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6289,"nodeType":"ExpressionStatement","src":"28425:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"28468:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"28482:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28468:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28489:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28460:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28460:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6296,"nodeType":"ExpressionStatement","src":"28460:70:24"}]},"documentation":{"id":6276,"nodeType":"StructuredDocumentation","src":"27993:345:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":6298,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28352:7:24","nodeType":"FunctionDefinition","parameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"value","nameLocation":"28367:5:24","nodeType":"VariableDeclaration","scope":6298,"src":"28360:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6277,"name":"int256","nodeType":"ElementaryTypeName","src":"28360:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28359:14:24"},"returnParameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"downcasted","nameLocation":"28403:10:24","nodeType":"VariableDeclaration","scope":6298,"src":"28397:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6280,"name":"int96","nodeType":"ElementaryTypeName","src":"28397:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28396:18:24"},"scope":6580,"src":"28343:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6320,"nodeType":"Block","src":"28965:122:24","statements":[{"expression":{"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"28975:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"28994:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28988:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6307,"name":"int88","nodeType":"ElementaryTypeName","src":"28988:5:24","typeDescriptions":{}}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28988:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28975:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6312,"nodeType":"ExpressionStatement","src":"28975:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"29018:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"29032:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29018:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29039:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29010:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29010:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6319,"nodeType":"ExpressionStatement","src":"29010:70:24"}]},"documentation":{"id":6299,"nodeType":"StructuredDocumentation","src":"28543:345:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6321,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28902:7:24","nodeType":"FunctionDefinition","parameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"value","nameLocation":"28917:5:24","nodeType":"VariableDeclaration","scope":6321,"src":"28910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6300,"name":"int256","nodeType":"ElementaryTypeName","src":"28910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28909:14:24"},"returnParameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6304,"mutability":"mutable","name":"downcasted","nameLocation":"28953:10:24","nodeType":"VariableDeclaration","scope":6321,"src":"28947:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6303,"name":"int88","nodeType":"ElementaryTypeName","src":"28947:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28946:18:24"},"scope":6580,"src":"28893:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6343,"nodeType":"Block","src":"29515:122:24","statements":[{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"29525:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"29544:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29538:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6330,"name":"int80","nodeType":"ElementaryTypeName","src":"29538:5:24","typeDescriptions":{}}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29538:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29525:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6335,"nodeType":"ExpressionStatement","src":"29525:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"29568:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"29582:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29568:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29589:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29560:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29560:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6342,"nodeType":"ExpressionStatement","src":"29560:70:24"}]},"documentation":{"id":6322,"nodeType":"StructuredDocumentation","src":"29093:345:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6344,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29452:7:24","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"value","nameLocation":"29467:5:24","nodeType":"VariableDeclaration","scope":6344,"src":"29460:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6323,"name":"int256","nodeType":"ElementaryTypeName","src":"29460:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29459:14:24"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"downcasted","nameLocation":"29503:10:24","nodeType":"VariableDeclaration","scope":6344,"src":"29497:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6326,"name":"int80","nodeType":"ElementaryTypeName","src":"29497:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29496:18:24"},"scope":6580,"src":"29443:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"30065:122:24","statements":[{"expression":{"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"30075:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"30094:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30088:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6353,"name":"int72","nodeType":"ElementaryTypeName","src":"30088:5:24","typeDescriptions":{}}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30088:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30075:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6358,"nodeType":"ExpressionStatement","src":"30075:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"30118:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"30132:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30118:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30139:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30110:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30110:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6365,"nodeType":"ExpressionStatement","src":"30110:70:24"}]},"documentation":{"id":6345,"nodeType":"StructuredDocumentation","src":"29643:345:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30002:7:24","nodeType":"FunctionDefinition","parameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"value","nameLocation":"30017:5:24","nodeType":"VariableDeclaration","scope":6367,"src":"30010:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6346,"name":"int256","nodeType":"ElementaryTypeName","src":"30010:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30009:14:24"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"downcasted","nameLocation":"30053:10:24","nodeType":"VariableDeclaration","scope":6367,"src":"30047:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6349,"name":"int72","nodeType":"ElementaryTypeName","src":"30047:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30046:18:24"},"scope":6580,"src":"29993:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6389,"nodeType":"Block","src":"30615:122:24","statements":[{"expression":{"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"30625:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"30644:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30638:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6376,"name":"int64","nodeType":"ElementaryTypeName","src":"30638:5:24","typeDescriptions":{}}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30638:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30625:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6381,"nodeType":"ExpressionStatement","src":"30625:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"30668:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"30682:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30668:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30689:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30660:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30660:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"ExpressionStatement","src":"30660:70:24"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"30193:345:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30552:7:24","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"30567:5:24","nodeType":"VariableDeclaration","scope":6390,"src":"30560:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6369,"name":"int256","nodeType":"ElementaryTypeName","src":"30560:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30559:14:24"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"downcasted","nameLocation":"30603:10:24","nodeType":"VariableDeclaration","scope":6390,"src":"30597:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6372,"name":"int64","nodeType":"ElementaryTypeName","src":"30597:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30596:18:24"},"scope":6580,"src":"30543:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6412,"nodeType":"Block","src":"31165:122:24","statements":[{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"31175:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"31194:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31188:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6399,"name":"int56","nodeType":"ElementaryTypeName","src":"31188:5:24","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31188:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31175:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6404,"nodeType":"ExpressionStatement","src":"31175:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"31218:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"31232:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31218:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31239:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31210:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31210:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6411,"nodeType":"ExpressionStatement","src":"31210:70:24"}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"30743:345:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31102:7:24","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"31117:5:24","nodeType":"VariableDeclaration","scope":6413,"src":"31110:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6392,"name":"int256","nodeType":"ElementaryTypeName","src":"31110:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31109:14:24"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"downcasted","nameLocation":"31153:10:24","nodeType":"VariableDeclaration","scope":6413,"src":"31147:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6395,"name":"int56","nodeType":"ElementaryTypeName","src":"31147:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31146:18:24"},"scope":6580,"src":"31093:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6435,"nodeType":"Block","src":"31715:122:24","statements":[{"expression":{"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"31725:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"31744:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31738:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6422,"name":"int48","nodeType":"ElementaryTypeName","src":"31738:5:24","typeDescriptions":{}}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31738:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31725:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6427,"nodeType":"ExpressionStatement","src":"31725:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"31768:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"31782:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31768:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31789:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31760:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31760:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6434,"nodeType":"ExpressionStatement","src":"31760:70:24"}]},"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"31293:345:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31652:7:24","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"value","nameLocation":"31667:5:24","nodeType":"VariableDeclaration","scope":6436,"src":"31660:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6415,"name":"int256","nodeType":"ElementaryTypeName","src":"31660:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31659:14:24"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"downcasted","nameLocation":"31703:10:24","nodeType":"VariableDeclaration","scope":6436,"src":"31697:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6418,"name":"int48","nodeType":"ElementaryTypeName","src":"31697:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31696:18:24"},"scope":6580,"src":"31643:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"32265:122:24","statements":[{"expression":{"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"32275:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"32294:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32288:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6445,"name":"int40","nodeType":"ElementaryTypeName","src":"32288:5:24","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32288:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32275:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6450,"nodeType":"ExpressionStatement","src":"32275:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"32318:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"32332:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32318:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32339:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32310:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32310:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6457,"nodeType":"ExpressionStatement","src":"32310:70:24"}]},"documentation":{"id":6437,"nodeType":"StructuredDocumentation","src":"31843:345:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32202:7:24","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"value","nameLocation":"32217:5:24","nodeType":"VariableDeclaration","scope":6459,"src":"32210:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6438,"name":"int256","nodeType":"ElementaryTypeName","src":"32210:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32209:14:24"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"downcasted","nameLocation":"32253:10:24","nodeType":"VariableDeclaration","scope":6459,"src":"32247:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6441,"name":"int40","nodeType":"ElementaryTypeName","src":"32247:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32246:18:24"},"scope":6580,"src":"32193:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6481,"nodeType":"Block","src":"32815:122:24","statements":[{"expression":{"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"32825:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"32844:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32838:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6468,"name":"int32","nodeType":"ElementaryTypeName","src":"32838:5:24","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32838:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32825:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6473,"nodeType":"ExpressionStatement","src":"32825:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"32868:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"32882:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32868:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32889:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32860:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32860:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"ExpressionStatement","src":"32860:70:24"}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"32393:345:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":6482,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32752:7:24","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"32767:5:24","nodeType":"VariableDeclaration","scope":6482,"src":"32760:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6461,"name":"int256","nodeType":"ElementaryTypeName","src":"32760:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32759:14:24"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"downcasted","nameLocation":"32803:10:24","nodeType":"VariableDeclaration","scope":6482,"src":"32797:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6464,"name":"int32","nodeType":"ElementaryTypeName","src":"32797:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32796:18:24"},"scope":6580,"src":"32743:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6504,"nodeType":"Block","src":"33365:122:24","statements":[{"expression":{"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"33375:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"33394:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33388:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6491,"name":"int24","nodeType":"ElementaryTypeName","src":"33388:5:24","typeDescriptions":{}}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33388:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33375:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6496,"nodeType":"ExpressionStatement","src":"33375:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"33418:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"33432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33418:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33439:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33410:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33410:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6503,"nodeType":"ExpressionStatement","src":"33410:70:24"}]},"documentation":{"id":6483,"nodeType":"StructuredDocumentation","src":"32943:345:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6505,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33302:7:24","nodeType":"FunctionDefinition","parameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"value","nameLocation":"33317:5:24","nodeType":"VariableDeclaration","scope":6505,"src":"33310:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6484,"name":"int256","nodeType":"ElementaryTypeName","src":"33310:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33309:14:24"},"returnParameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"downcasted","nameLocation":"33353:10:24","nodeType":"VariableDeclaration","scope":6505,"src":"33347:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6487,"name":"int24","nodeType":"ElementaryTypeName","src":"33347:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33346:18:24"},"scope":6580,"src":"33293:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6527,"nodeType":"Block","src":"33915:122:24","statements":[{"expression":{"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"33925:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"33944:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33938:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6514,"name":"int16","nodeType":"ElementaryTypeName","src":"33938:5:24","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33938:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33925:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6519,"nodeType":"ExpressionStatement","src":"33925:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"33968:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"33982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33968:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33989:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33960:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33960:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6526,"nodeType":"ExpressionStatement","src":"33960:70:24"}]},"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"33493:345:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":6528,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33852:7:24","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"value","nameLocation":"33867:5:24","nodeType":"VariableDeclaration","scope":6528,"src":"33860:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6507,"name":"int256","nodeType":"ElementaryTypeName","src":"33860:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33859:14:24"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"downcasted","nameLocation":"33903:10:24","nodeType":"VariableDeclaration","scope":6528,"src":"33897:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6510,"name":"int16","nodeType":"ElementaryTypeName","src":"33897:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33896:18:24"},"scope":6580,"src":"33843:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6550,"nodeType":"Block","src":"34458:120:24","statements":[{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"34468:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"34486:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34481:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6537,"name":"int8","nodeType":"ElementaryTypeName","src":"34481:4:24","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34481:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34468:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6542,"nodeType":"ExpressionStatement","src":"34468:24:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"34510:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"34524:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34510:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34531:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34502:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34502:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6549,"nodeType":"ExpressionStatement","src":"34502:69:24"}]},"documentation":{"id":6529,"nodeType":"StructuredDocumentation","src":"34043:340:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":6551,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34397:6:24","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"value","nameLocation":"34411:5:24","nodeType":"VariableDeclaration","scope":6551,"src":"34404:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6530,"name":"int256","nodeType":"ElementaryTypeName","src":"34404:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34403:14:24"},"returnParameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"downcasted","nameLocation":"34446:10:24","nodeType":"VariableDeclaration","scope":6551,"src":"34441:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6533,"name":"int8","nodeType":"ElementaryTypeName","src":"34441:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34440:17:24"},"scope":6580,"src":"34388:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6578,"nodeType":"Block","src":"34856:233:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"34973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34995:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6564,"name":"int256","nodeType":"ElementaryTypeName","src":"34995:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34990:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34990:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34990:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34982:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6561,"name":"uint256","nodeType":"ElementaryTypeName","src":"34982:7:24","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34982:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34973:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35009:42:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":6559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34965:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34965:87:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6572,"nodeType":"ExpressionStatement","src":"34965:87:24"},{"expression":{"arguments":[{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"35076:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35069:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6573,"name":"int256","nodeType":"ElementaryTypeName","src":"35069:6:24","typeDescriptions":{}}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35069:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6558,"id":6577,"nodeType":"Return","src":"35062:20:24"}]},"documentation":{"id":6552,"nodeType":"StructuredDocumentation","src":"34584:203:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":6579,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34801:8:24","nodeType":"FunctionDefinition","parameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"value","nameLocation":"34818:5:24","nodeType":"VariableDeclaration","scope":6579,"src":"34810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"34810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34809:15:24"},"returnParameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6579,"src":"34848:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6556,"name":"int256","nodeType":"ElementaryTypeName","src":"34848:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34847:8:24"},"scope":6580,"src":"34792:297:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6581,"src":"927:34164:24","usedErrors":[]}],"src":"192:34900:24"},"id":24},"contracts/PKDR.sol":{"ast":{"absolutePath":"contracts/PKDR.sol","exportedSymbols":{"AddressUpgradeable":[3156],"ArraysUpgradeable":[3312],"ContextUpgradeable":[3354],"CountersUpgradeable":[3428],"ECDSAUpgradeable":[4024],"EIP712Upgradeable":[4174],"ERC20BurnableUpgradeable":[1317],"ERC20FlashMintUpgradeable":[1554],"ERC20PermitUpgradeable":[2836],"ERC20SnapshotUpgradeable":[1902],"ERC20Upgradeable":[1175],"ERC20VotesUpgradeable":[2620],"IERC20MetadataUpgradeable":[2645],"IERC20PermitUpgradeable":[2872],"IERC20Upgradeable":[1253],"IERC3156FlashBorrowerUpgradeable":[229],"IERC3156FlashLenderUpgradeable":[267],"IVotesUpgradeable":[209],"Initializable":[436],"MathUpgradeable":[5039],"OwnableUpgradeable":[131],"PKDR":[6774],"PausableUpgradeable":[563],"SafeCastUpgradeable":[6580],"StorageSlotUpgradeable":[3488],"StringsUpgradeable":[3663]},"id":6775,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6582,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":6583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":1176,"src":"57:78:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":6584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":1318,"src":"136:97:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol","id":6585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":1903,"src":"234:97:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":6586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":132,"src":"332:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":6587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":564,"src":"408:78:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","id":6588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":2837,"src":"487:101:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","id":6589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":2621,"src":"589:94:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","id":6590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":1555,"src":"684:98:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":6591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6775,"sourceUnit":437,"src":"783:75:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6593,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":436,"src":"935:13:25"},"id":6594,"nodeType":"InheritanceSpecifier","src":"935:13:25"},{"baseName":{"id":6595,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"954:16:25"},"id":6596,"nodeType":"InheritanceSpecifier","src":"954:16:25"},{"baseName":{"id":6597,"name":"ERC20BurnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1317,"src":"976:24:25"},"id":6598,"nodeType":"InheritanceSpecifier","src":"976:24:25"},{"baseName":{"id":6599,"name":"ERC20SnapshotUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"1006:24:25"},"id":6600,"nodeType":"InheritanceSpecifier","src":"1006:24:25"},{"baseName":{"id":6601,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"1036:18:25"},"id":6602,"nodeType":"InheritanceSpecifier","src":"1036:18:25"},{"baseName":{"id":6603,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":563,"src":"1060:19:25"},"id":6604,"nodeType":"InheritanceSpecifier","src":"1060:19:25"},{"baseName":{"id":6605,"name":"ERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2836,"src":"1085:22:25"},"id":6606,"nodeType":"InheritanceSpecifier","src":"1085:22:25"},{"baseName":{"id":6607,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2620,"src":"1113:21:25"},"id":6608,"nodeType":"InheritanceSpecifier","src":"1113:21:25"},{"baseName":{"id":6609,"name":"ERC20FlashMintUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1554,"src":"1140:25:25"},"id":6610,"nodeType":"InheritanceSpecifier","src":"1140:25:25"}],"canonicalName":"PKDR","contractDependencies":[],"contractKind":"contract","documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"860:54:25","text":"@custom:security-contact zohaib10092001@gmail.com"},"fullyImplemented":true,"id":6774,"linearizedBaseContracts":[6774,1554,267,2620,2836,4174,2872,563,131,1902,1317,1175,2645,1253,3354,209,436],"name":"PKDR","nameLocation":"923:4:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":6617,"nodeType":"Block","src":"1239:39:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6614,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1249:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"ExpressionStatement","src":"1249:22:25"}]},"documentation":{"id":6611,"nodeType":"StructuredDocumentation","src":"1172:48:25","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":6618,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[],"src":"1236:2:25"},"returnParameters":{"id":6613,"nodeType":"ParameterList","parameters":[],"src":"1239:0:25"},"scope":6774,"src":"1225:53:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6650,"nodeType":"Block","src":"1325:260:25","statements":[{"expression":{"arguments":[{"hexValue":"504b4452","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1348:6:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bbaa0e4d8fdedb8f9a158a0e968b58e599c9d14beb645c266cca2ef89ea6d5a","typeString":"literal_string \"PKDR\""},"value":"PKDR"},{"hexValue":"504b4452","id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1356:6:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bbaa0e4d8fdedb8f9a158a0e968b58e599c9d14beb645c266cca2ef89ea6d5a","typeString":"literal_string \"PKDR\""},"value":"PKDR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3bbaa0e4d8fdedb8f9a158a0e968b58e599c9d14beb645c266cca2ef89ea6d5a","typeString":"literal_string \"PKDR\""},{"typeIdentifier":"t_stringliteral_3bbaa0e4d8fdedb8f9a158a0e968b58e599c9d14beb645c266cca2ef89ea6d5a","typeString":"literal_string \"PKDR\""}],"id":6623,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"1335:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1335:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6627,"nodeType":"ExpressionStatement","src":"1335:28:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6628,"name":"__ERC20Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1373:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1373:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6630,"nodeType":"ExpressionStatement","src":"1373:22:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6631,"name":"__ERC20Snapshot_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1405:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1405:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6633,"nodeType":"ExpressionStatement","src":"1405:22:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6634,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1437:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1437:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6636,"nodeType":"ExpressionStatement","src":"1437:16:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6637,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"1463:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1463:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6639,"nodeType":"ExpressionStatement","src":"1463:17:25"},{"expression":{"arguments":[{"hexValue":"504b4452","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1509:6:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bbaa0e4d8fdedb8f9a158a0e968b58e599c9d14beb645c266cca2ef89ea6d5a","typeString":"literal_string \"PKDR\""},"value":"PKDR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3bbaa0e4d8fdedb8f9a158a0e968b58e599c9d14beb645c266cca2ef89ea6d5a","typeString":"literal_string \"PKDR\""}],"id":6640,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"1490:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1490:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6643,"nodeType":"ExpressionStatement","src":"1490:26:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6644,"name":"__ERC20Votes_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1526:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1526:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6646,"nodeType":"ExpressionStatement","src":"1526:19:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6647,"name":"__ERC20FlashMint_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"1555:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1555:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6649,"nodeType":"ExpressionStatement","src":"1555:23:25"}]},"functionSelector":"8129fc1c","id":6651,"implemented":true,"kind":"function","modifiers":[{"id":6621,"kind":"modifierInvocation","modifierName":{"id":6620,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":338,"src":"1313:11:25"},"nodeType":"ModifierInvocation","src":"1313:11:25"}],"name":"initialize","nameLocation":"1293:10:25","nodeType":"FunctionDefinition","parameters":{"id":6619,"nodeType":"ParameterList","parameters":[],"src":"1303:2:25"},"returnParameters":{"id":6622,"nodeType":"ParameterList","parameters":[],"src":"1325:0:25"},"scope":6774,"src":"1284:301:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6659,"nodeType":"Block","src":"1628:28:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6656,"name":"_snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1638:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1638:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6658,"nodeType":"ExpressionStatement","src":"1638:11:25"}]},"functionSelector":"9711715a","id":6660,"implemented":true,"kind":"function","modifiers":[{"id":6654,"kind":"modifierInvocation","modifierName":{"id":6653,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1618:9:25"},"nodeType":"ModifierInvocation","src":"1618:9:25"}],"name":"snapshot","nameLocation":"1600:8:25","nodeType":"FunctionDefinition","parameters":{"id":6652,"nodeType":"ParameterList","parameters":[],"src":"1608:2:25"},"returnParameters":{"id":6655,"nodeType":"ParameterList","parameters":[],"src":"1628:0:25"},"scope":6774,"src":"1591:65:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6668,"nodeType":"Block","src":"1696:25:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6665,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1706:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1706:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6667,"nodeType":"ExpressionStatement","src":"1706:8:25"}]},"functionSelector":"8456cb59","id":6669,"implemented":true,"kind":"function","modifiers":[{"id":6663,"kind":"modifierInvocation","modifierName":{"id":6662,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1686:9:25"},"nodeType":"ModifierInvocation","src":"1686:9:25"}],"name":"pause","nameLocation":"1671:5:25","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[],"src":"1676:2:25"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[],"src":"1696:0:25"},"scope":6774,"src":"1662:59:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6677,"nodeType":"Block","src":"1763:27:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6674,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"1773:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1773:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"ExpressionStatement","src":"1773:10:25"}]},"functionSelector":"3f4ba83a","id":6678,"implemented":true,"kind":"function","modifiers":[{"id":6672,"kind":"modifierInvocation","modifierName":{"id":6671,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1753:9:25"},"nodeType":"ModifierInvocation","src":"1753:9:25"}],"name":"unpause","nameLocation":"1736:7:25","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[],"src":"1743:2:25"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[],"src":"1763:0:25"},"scope":6774,"src":"1727:63:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6692,"nodeType":"Block","src":"1855:34:25","statements":[{"expression":{"arguments":[{"id":6688,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"1871:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"1875:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6687,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6755],"referencedDeclaration":6755,"src":"1865:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1865:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6691,"nodeType":"ExpressionStatement","src":"1865:17:25"}]},"functionSelector":"40c10f19","id":6693,"implemented":true,"kind":"function","modifiers":[{"id":6685,"kind":"modifierInvocation","modifierName":{"id":6684,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1845:9:25"},"nodeType":"ModifierInvocation","src":"1845:9:25"}],"name":"mint","nameLocation":"1805:4:25","nodeType":"FunctionDefinition","parameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"to","nameLocation":"1818:2:25","nodeType":"VariableDeclaration","scope":6693,"src":"1810:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6679,"name":"address","nodeType":"ElementaryTypeName","src":"1810:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6682,"mutability":"mutable","name":"amount","nameLocation":"1830:6:25","nodeType":"VariableDeclaration","scope":6693,"src":"1822:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1809:28:25"},"returnParameters":{"id":6686,"nodeType":"ParameterList","parameters":[],"src":"1855:0:25"},"scope":6774,"src":"1796:93:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1158,1753],"body":{"id":6715,"nodeType":"Block","src":"2101:61:25","statements":[{"expression":{"arguments":[{"id":6710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"2138:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"2144:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6712,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"2148:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6707,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2111:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PKDR_$6774_$","typeString":"type(contract super PKDR)"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"2111:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6714,"nodeType":"ExpressionStatement","src":"2111:44:25"}]},"id":6716,"implemented":true,"kind":"function","modifiers":[{"id":6705,"kind":"modifierInvocation","modifierName":{"id":6704,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":485,"src":"2083:13:25"},"nodeType":"ModifierInvocation","src":"2083:13:25"}],"name":"_beforeTokenTransfer","nameLocation":"1904:20:25","nodeType":"FunctionDefinition","overrides":{"id":6703,"nodeType":"OverrideSpecifier","overrides":[{"id":6701,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"2031:16:25"},{"id":6702,"name":"ERC20SnapshotUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"2049:24:25"}],"src":"2022:52:25"},"parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"from","nameLocation":"1942:4:25","nodeType":"VariableDeclaration","scope":6716,"src":"1934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6694,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"to","nameLocation":"1964:2:25","nodeType":"VariableDeclaration","scope":6716,"src":"1956:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6696,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6699,"mutability":"mutable","name":"amount","nameLocation":"1984:6:25","nodeType":"VariableDeclaration","scope":6716,"src":"1976:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1924:72:25"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[],"src":"2101:0:25"},"scope":6774,"src":"1895:267:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1169,2361],"body":{"id":6736,"nodeType":"Block","src":"2396:60:25","statements":[{"expression":{"arguments":[{"id":6731,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"2432:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"2438:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"2442:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6728,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2406:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PKDR_$6774_$","typeString":"type(contract super PKDR)"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"2406:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2406:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6735,"nodeType":"ExpressionStatement","src":"2406:43:25"}]},"id":6737,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"2245:19:25","nodeType":"FunctionDefinition","overrides":{"id":6726,"nodeType":"OverrideSpecifier","overrides":[{"id":6724,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"2355:16:25"},{"id":6725,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2620,"src":"2373:21:25"}],"src":"2346:49:25"},"parameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"from","nameLocation":"2282:4:25","nodeType":"VariableDeclaration","scope":6737,"src":"2274:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6717,"name":"address","nodeType":"ElementaryTypeName","src":"2274:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6720,"mutability":"mutable","name":"to","nameLocation":"2304:2:25","nodeType":"VariableDeclaration","scope":6737,"src":"2296:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6719,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6722,"mutability":"mutable","name":"amount","nameLocation":"2324:6:25","nodeType":"VariableDeclaration","scope":6737,"src":"2316:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6721,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2264:72:25"},"returnParameters":{"id":6727,"nodeType":"ParameterList","parameters":[],"src":"2396:0:25"},"scope":6774,"src":"2236:220:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[987,2308],"body":{"id":6754,"nodeType":"Block","src":"2586:40:25","statements":[{"expression":{"arguments":[{"id":6750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"2608:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"2612:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6747,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2596:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PKDR_$6774_$","typeString":"type(contract super PKDR)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"2596:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6753,"nodeType":"ExpressionStatement","src":"2596:23:25"}]},"id":6755,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"2471:5:25","nodeType":"FunctionDefinition","overrides":{"id":6745,"nodeType":"OverrideSpecifier","overrides":[{"id":6743,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"2545:16:25"},{"id":6744,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2620,"src":"2563:21:25"}],"src":"2536:49:25"},"parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"to","nameLocation":"2494:2:25","nodeType":"VariableDeclaration","scope":6755,"src":"2486:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6738,"name":"address","nodeType":"ElementaryTypeName","src":"2486:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6741,"mutability":"mutable","name":"amount","nameLocation":"2514:6:25","nodeType":"VariableDeclaration","scope":6755,"src":"2506:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"2506:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2476:50:25"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[],"src":"2586:0:25"},"scope":6774,"src":"2462:164:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1059,2331],"body":{"id":6772,"nodeType":"Block","src":"2761:45:25","statements":[{"expression":{"arguments":[{"id":6768,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"2783:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"2792:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6765,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2771:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PKDR_$6774_$","typeString":"type(contract super PKDR)"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"2771:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2771:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6771,"nodeType":"ExpressionStatement","src":"2771:28:25"}]},"id":6773,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2641:5:25","nodeType":"FunctionDefinition","overrides":{"id":6763,"nodeType":"OverrideSpecifier","overrides":[{"id":6761,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"2720:16:25"},{"id":6762,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2620,"src":"2738:21:25"}],"src":"2711:49:25"},"parameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"account","nameLocation":"2664:7:25","nodeType":"VariableDeclaration","scope":6773,"src":"2656:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6756,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6759,"mutability":"mutable","name":"amount","nameLocation":"2689:6:25","nodeType":"VariableDeclaration","scope":6773,"src":"2681:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2646:55:25"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[],"src":"2761:0:25"},"scope":6774,"src":"2632:174:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6775,"src":"914:1894:25","usedErrors":[]}],"src":"32:2777:25"},"id":25},"contracts/Profiles.sol":{"ast":{"absolutePath":"contracts/Profiles.sol","exportedSymbols":{"Profiles":[6789]},"id":6790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6776,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Profiles","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6789,"linearizedBaseContracts":[6789],"name":"Profiles","nameLocation":"294:8:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Profiles.users","id":6779,"members":[{"constant":false,"id":6778,"mutability":"mutable","name":"verificationStatus","nameLocation":"330:18:26","nodeType":"VariableDeclaration","scope":6779,"src":"325:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6777,"name":"bool","nodeType":"ElementaryTypeName","src":"325:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"users","nameLocation":"314:5:26","nodeType":"StructDefinition","scope":6789,"src":"307:45:26","visibility":"public"},{"constant":false,"id":6784,"mutability":"mutable","name":"name","nameLocation":"380:4:26","nodeType":"VariableDeclaration","scope":6789,"src":"353:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_users_$6779_storage_$","typeString":"mapping(address => struct Profiles.users)"},"typeName":{"id":6783,"keyType":{"id":6780,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"353:26:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_users_$6779_storage_$","typeString":"mapping(address => struct Profiles.users)"},"valueType":{"id":6782,"nodeType":"UserDefinedTypeName","pathNode":{"id":6781,"name":"users","nodeType":"IdentifierPath","referencedDeclaration":6779,"src":"373:5:26"},"referencedDeclaration":6779,"src":"373:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_users_$6779_storage_ptr","typeString":"struct Profiles.users"}}},"visibility":"internal"},{"body":{"id":6787,"nodeType":"Block","src":"401:4:26","statements":[]},"id":6788,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6785,"nodeType":"ParameterList","parameters":[],"src":"399:2:26"},"returnParameters":{"id":6786,"nodeType":"ParameterList","parameters":[],"src":"401:0:26"},"scope":6789,"src":"388:17:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6790,"src":"285:123:26","usedErrors":[]}],"src":"32:377:26"},"id":26}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"IVotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":\"IVotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol":{"IERC3156FlashBorrowerUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"IERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol\":\"IERC3156FlashBorrowerUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol\":{\"keccak256\":\"0x10083622669a064863aaaf7d666e1ff311dd05149fa7cf2a561b4a3a995f0dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b9b55b4bc108e5971481aadc522a0352f7a0b8d5ede7dc32bf6652f43f3ec82\",\"dweb:/ipfs/QmV2LNPwem52yKWUh8whtYSYv3sqXsVrE4cDpDyR1hmLcP\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol":{"IERC3156FlashLenderUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrowerUpgradeable","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrowerUpgradeable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol\":\"IERC3156FlashLenderUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol\":{\"keccak256\":\"0x10083622669a064863aaaf7d666e1ff311dd05149fa7cf2a561b4a3a995f0dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b9b55b4bc108e5971481aadc522a0352f7a0b8d5ede7dc32bf6652f43f3ec82\",\"dweb:/ipfs/QmV2LNPwem52yKWUh8whtYSYv3sqXsVrE4cDpDyR1hmLcP\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol\":{\"keccak256\":\"0xa31d534e79c2275bdef26559e5c03ff1d45fee94d0007130e67ee9273263b973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ec3b2422aa19327ab8c5f3bbd7ee161239d9b0fbedbc0fd1de17148cc9c3c0\",\"dweb:/ipfs/QmQJFvCCingXXjc7FAk6srbS27mzcWci6UgAr9JUYPeqsm\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611263806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1d565b60405180910390f35b6100e660048036038101906100e19190610bd8565b610308565b6040516100f39190610c33565b60405180910390f35b61010461032b565b6040516101119190610c5d565b60405180910390f35b610134600480360381019061012f9190610c78565b610335565b6040516101419190610c33565b60405180910390f35b610152610364565b60405161015f9190610ce7565b60405180910390f35b610182600480360381019061017d9190610bd8565b61036d565b60405161018f9190610c33565b60405180910390f35b6101b260048036038101906101ad9190610d02565b6103a4565b6040516101bf9190610c5d565b60405180910390f35b6101d06103ed565b6040516101dd9190610b1d565b60405180910390f35b61020060048036038101906101fb9190610bd8565b61047f565b60405161020d9190610c33565b60405180910390f35b610230600480360381019061022b9190610bd8565b6104f6565b60405161023d9190610c33565b60405180910390f35b610260600480360381019061025b9190610d2f565b610519565b60405161026d9190610c5d565b60405180910390f35b60606036805461028590610d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9e565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610773565b6103588585856107ff565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610dff565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610d9e565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610ec7565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107ff565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610f59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610feb565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107669190610c5d565b60405180910390a3505050565b600061077f8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f957818110156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290611057565b60405180910390fd5b6107f884848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610866906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d69061117b565b60405180910390fd5b6108ea838383610a7a565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109689061120d565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a619190610c5d565b60405180910390a3610a74848484610a7f565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abe578082015181840152602081019050610aa3565b83811115610acd576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aef82610a84565b610af98185610a8f565b9350610b09818560208601610aa0565b610b1281610ad3565b840191505092915050565b60006020820190508181036000830152610b378184610ae4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6f82610b44565b9050919050565b610b7f81610b64565b8114610b8a57600080fd5b50565b600081359050610b9c81610b76565b92915050565b6000819050919050565b610bb581610ba2565b8114610bc057600080fd5b50565b600081359050610bd281610bac565b92915050565b60008060408385031215610bef57610bee610b3f565b5b6000610bfd85828601610b8d565b9250506020610c0e85828601610bc3565b9150509250929050565b60008115159050919050565b610c2d81610c18565b82525050565b6000602082019050610c486000830184610c24565b92915050565b610c5781610ba2565b82525050565b6000602082019050610c726000830184610c4e565b92915050565b600080600060608486031215610c9157610c90610b3f565b5b6000610c9f86828701610b8d565b9350506020610cb086828701610b8d565b9250506040610cc186828701610bc3565b9150509250925092565b600060ff82169050919050565b610ce181610ccb565b82525050565b6000602082019050610cfc6000830184610cd8565b92915050565b600060208284031215610d1857610d17610b3f565b5b6000610d2684828501610b8d565b91505092915050565b60008060408385031215610d4657610d45610b3f565b5b6000610d5485828601610b8d565b9250506020610d6585828601610b8d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db657607f821691505b60208210811415610dca57610dc9610d6f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0a82610ba2565b9150610e1583610ba2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4a57610e49610dd0565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb1602583610a8f565b9150610ebc82610e55565b604082019050919050565b60006020820190508181036000830152610ee081610ea4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f43602483610a8f565b9150610f4e82610ee7565b604082019050919050565b60006020820190508181036000830152610f7281610f36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd5602283610a8f565b9150610fe082610f79565b604082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611041601d83610a8f565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d3602583610a8f565b91506110de82611077565b604082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611165602383610a8f565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f7602683610a8f565b91506112028261119b565b604082019050919050565b60006020820190508181036000830152611226816111ea565b905091905056fea26469706673582212209577599587b241898215ce0d4e95b1660b48bee7143513461b15e7f23221b76e64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1263 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP4 DUP4 DUP4 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA74 DUP5 DUP5 DUP5 PUSH2 0xA7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEF DUP3 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xAF9 DUP2 DUP6 PUSH2 0xA8F JUMP JUMPDEST SWAP4 POP PUSH2 0xB09 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB37 DUP2 DUP5 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F DUP3 PUSH2 0xB44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7F DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9C DUP2 PUSH2 0xB76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB5 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD2 DUP2 PUSH2 0xBAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0E DUP6 DUP3 DUP7 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC57 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC1 DUP7 DUP3 DUP8 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD18 JUMPI PUSH2 0xD17 PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD26 DUP5 DUP3 DUP6 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD46 JUMPI PUSH2 0xD45 PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP2 POP PUSH2 0xE15 DUP4 PUSH2 0xBA2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDD0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 PUSH1 0x25 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 PUSH1 0x24 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x22 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x1D DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1070 DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 PUSH1 0x25 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x10DE DUP3 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1102 DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x23 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1170 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH1 0x26 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1202 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH24 0x599587B241898215CE0D4E95B1660B48BEE7143513461B15 0xE7 CALLCODE ORIGIN 0x21 0xB7 PUSH15 0x64736F6C6343000809003300000000 ","sourceMap":"1480:12159:6:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1169":{"entryPoint":2687,"id":1169,"parameterSlots":3,"returnSlots":0},"@_approve_1104":{"entryPoint":1448,"id":1104,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1158":{"entryPoint":2682,"id":1158,"parameterSlots":3,"returnSlots":0},"@_msgSender_3339":{"entryPoint":1440,"id":3339,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1147":{"entryPoint":1907,"id":1147,"parameterSlots":3,"returnSlots":0},"@_transfer_930":{"entryPoint":2047,"id":930,"parameterSlots":3,"returnSlots":0},"@allowance_725":{"entryPoint":1305,"id":725,"parameterSlots":2,"returnSlots":1},"@approve_750":{"entryPoint":776,"id":750,"parameterSlots":2,"returnSlots":1},"@balanceOf_682":{"entryPoint":932,"id":682,"parameterSlots":1,"returnSlots":1},"@decimals_658":{"entryPoint":868,"id":658,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_853":{"entryPoint":1151,"id":853,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_812":{"entryPoint":877,"id":812,"parameterSlots":2,"returnSlots":1},"@name_638":{"entryPoint":630,"id":638,"parameterSlots":0,"returnSlots":1},"@symbol_648":{"entryPoint":1005,"id":648,"parameterSlots":0,"returnSlots":1},"@totalSupply_668":{"entryPoint":811,"id":668,"parameterSlots":0,"returnSlots":1},"@transferFrom_783":{"entryPoint":821,"id":783,"parameterSlots":3,"returnSlots":1},"@transfer_707":{"entryPoint":1270,"id":707,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3375,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3192,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3032,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4040,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3894,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3748,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3150,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3288,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4329,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3303,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2692,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2703,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3583,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2916,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2884,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2978,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3275,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2720,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3486,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3536,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3439,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2879,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2771,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4361,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3961,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4107,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4507,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4215,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3815,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3669,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2988,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:27","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:27","statements":[{"nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:27"},"nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:27"},"nodeType":"YulFunctionCall","src":"218:19:27"},"nodeType":"YulExpressionStatement","src":"218:19:27"},{"nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:27"},"nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nodeType":"YulBlock","src":"336:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:27"},"nodeType":"YulFunctionCall","src":"436:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:27"},"nodeType":"YulFunctionCall","src":"455:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:27"},"nodeType":"YulFunctionCall","src":"449:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:27"},"nodeType":"YulFunctionCall","src":"429:39:27"},"nodeType":"YulExpressionStatement","src":"429:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:27"},"nodeType":"YulFunctionCall","src":"373:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:27","statements":[{"nodeType":"YulAssignment","src":"389:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:27"},"nodeType":"YulFunctionCall","src":"394:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:27","statements":[]},"src":"365:113:27"},{"body":{"nodeType":"YulBlock","src":"512:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:27"},"nodeType":"YulFunctionCall","src":"558:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:27"},"nodeType":"YulFunctionCall","src":"551:27:27"},"nodeType":"YulExpressionStatement","src":"551:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:27"},"nodeType":"YulFunctionCall","src":"490:13:27"},"nodeType":"YulIf","src":"487:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:27","type":""}],"src":"287:307:27"},{"body":{"nodeType":"YulBlock","src":"648:54:27","statements":[{"nodeType":"YulAssignment","src":"658:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:27"},"nodeType":"YulFunctionCall","src":"672:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:27"},"nodeType":"YulFunctionCall","src":"688:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:27","type":""}],"src":"600:102:27"},{"body":{"nodeType":"YulBlock","src":"800:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:27"},"nodeType":"YulFunctionCall","src":"824:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:27","type":""}]},{"nodeType":"YulAssignment","src":"872:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:27"},"nodeType":"YulFunctionCall","src":"879:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:27"},"nodeType":"YulFunctionCall","src":"981:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:27"},"nodeType":"YulFunctionCall","src":"959:52:27"},"nodeType":"YulExpressionStatement","src":"959:52:27"},{"nodeType":"YulAssignment","src":"1020:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:27"},"nodeType":"YulFunctionCall","src":"1036:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:27"},"nodeType":"YulFunctionCall","src":"1027:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:27","type":""}],"src":"708:364:27"},{"body":{"nodeType":"YulBlock","src":"1196:195:27","statements":[{"nodeType":"YulAssignment","src":"1206:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:27"},"nodeType":"YulFunctionCall","src":"1214:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:27"},"nodeType":"YulFunctionCall","src":"1249:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:27"},"nodeType":"YulFunctionCall","src":"1268:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:27"},"nodeType":"YulFunctionCall","src":"1242:47:27"},"nodeType":"YulExpressionStatement","src":"1242:47:27"},{"nodeType":"YulAssignment","src":"1298:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:27"},"nodeType":"YulFunctionCall","src":"1306:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:27","type":""}],"src":"1078:313:27"},{"body":{"nodeType":"YulBlock","src":"1437:35:27","statements":[{"nodeType":"YulAssignment","src":"1447:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:27"},"nodeType":"YulFunctionCall","src":"1457:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:27","type":""}],"src":"1397:75:27"},{"body":{"nodeType":"YulBlock","src":"1567:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:27"},"nodeType":"YulFunctionCall","src":"1577:12:27"},"nodeType":"YulExpressionStatement","src":"1577:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:27"},{"body":{"nodeType":"YulBlock","src":"1690:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:27"},"nodeType":"YulFunctionCall","src":"1700:12:27"},"nodeType":"YulExpressionStatement","src":"1700:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:27"},{"body":{"nodeType":"YulBlock","src":"1769:81:27","statements":[{"nodeType":"YulAssignment","src":"1779:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:27"},"nodeType":"YulFunctionCall","src":"1790:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:27","type":""}],"src":"1724:126:27"},{"body":{"nodeType":"YulBlock","src":"1901:51:27","statements":[{"nodeType":"YulAssignment","src":"1911:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:27"},"nodeType":"YulFunctionCall","src":"1922:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:27","type":""}],"src":"1856:96:27"},{"body":{"nodeType":"YulBlock","src":"2001:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:27"},"nodeType":"YulFunctionCall","src":"2060:12:27"},"nodeType":"YulExpressionStatement","src":"2060:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:27"},"nodeType":"YulFunctionCall","src":"2031:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:27"},"nodeType":"YulFunctionCall","src":"2021:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:27"},"nodeType":"YulFunctionCall","src":"2014:43:27"},"nodeType":"YulIf","src":"2011:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:27","type":""}],"src":"1958:122:27"},{"body":{"nodeType":"YulBlock","src":"2138:87:27","statements":[{"nodeType":"YulAssignment","src":"2148:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:27"},"nodeType":"YulFunctionCall","src":"2157:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:27"},"nodeType":"YulFunctionCall","src":"2186:33:27"},"nodeType":"YulExpressionStatement","src":"2186:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:27","type":""}],"src":"2086:139:27"},{"body":{"nodeType":"YulBlock","src":"2276:32:27","statements":[{"nodeType":"YulAssignment","src":"2286:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:27","type":""}],"src":"2231:77:27"},{"body":{"nodeType":"YulBlock","src":"2357:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:27"},"nodeType":"YulFunctionCall","src":"2416:12:27"},"nodeType":"YulExpressionStatement","src":"2416:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:27"},"nodeType":"YulFunctionCall","src":"2387:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:27"},"nodeType":"YulFunctionCall","src":"2377:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:27"},"nodeType":"YulFunctionCall","src":"2370:43:27"},"nodeType":"YulIf","src":"2367:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:27","type":""}],"src":"2314:122:27"},{"body":{"nodeType":"YulBlock","src":"2494:87:27","statements":[{"nodeType":"YulAssignment","src":"2504:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:27"},"nodeType":"YulFunctionCall","src":"2513:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:27"},"nodeType":"YulFunctionCall","src":"2542:33:27"},"nodeType":"YulExpressionStatement","src":"2542:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:27","type":""}],"src":"2442:139:27"},{"body":{"nodeType":"YulBlock","src":"2670:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:27"},"nodeType":"YulFunctionCall","src":"2718:79:27"},"nodeType":"YulExpressionStatement","src":"2718:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:27"},"nodeType":"YulFunctionCall","src":"2687:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:27"},"nodeType":"YulFunctionCall","src":"2683:32:27"},"nodeType":"YulIf","src":"2680:119:27"},{"nodeType":"YulBlock","src":"2809:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:27"},"nodeType":"YulFunctionCall","src":"2884:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:27"},"nodeType":"YulFunctionCall","src":"2863:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:27"}]}]},{"nodeType":"YulBlock","src":"2936:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:27"},"nodeType":"YulFunctionCall","src":"3012:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:27"},"nodeType":"YulFunctionCall","src":"2991:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:27","type":""}],"src":"2587:474:27"},{"body":{"nodeType":"YulBlock","src":"3109:48:27","statements":[{"nodeType":"YulAssignment","src":"3119:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:27"},"nodeType":"YulFunctionCall","src":"3137:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:27"},"nodeType":"YulFunctionCall","src":"3130:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:27","type":""}],"src":"3067:90:27"},{"body":{"nodeType":"YulBlock","src":"3222:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:27"},"nodeType":"YulFunctionCall","src":"3244:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:27"},"nodeType":"YulFunctionCall","src":"3232:34:27"},"nodeType":"YulExpressionStatement","src":"3232:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:27","type":""}],"src":"3163:109:27"},{"body":{"nodeType":"YulBlock","src":"3370:118:27","statements":[{"nodeType":"YulAssignment","src":"3380:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:27"},"nodeType":"YulFunctionCall","src":"3388:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:27"},"nodeType":"YulFunctionCall","src":"3463:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:27"},"nodeType":"YulFunctionCall","src":"3416:65:27"},"nodeType":"YulExpressionStatement","src":"3416:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:27","type":""}],"src":"3278:210:27"},{"body":{"nodeType":"YulBlock","src":"3559:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:27"},"nodeType":"YulFunctionCall","src":"3581:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:27"},"nodeType":"YulFunctionCall","src":"3569:37:27"},"nodeType":"YulExpressionStatement","src":"3569:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:27","type":""}],"src":"3494:118:27"},{"body":{"nodeType":"YulBlock","src":"3716:124:27","statements":[{"nodeType":"YulAssignment","src":"3726:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:27"},"nodeType":"YulFunctionCall","src":"3734:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:27"},"nodeType":"YulFunctionCall","src":"3815:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:27"},"nodeType":"YulFunctionCall","src":"3762:71:27"},"nodeType":"YulExpressionStatement","src":"3762:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:27","type":""}],"src":"3618:222:27"},{"body":{"nodeType":"YulBlock","src":"3946:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:27"},"nodeType":"YulFunctionCall","src":"3994:79:27"},"nodeType":"YulExpressionStatement","src":"3994:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:27"},"nodeType":"YulFunctionCall","src":"3963:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:27"},"nodeType":"YulFunctionCall","src":"3959:32:27"},"nodeType":"YulIf","src":"3956:119:27"},{"nodeType":"YulBlock","src":"4085:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:27"},"nodeType":"YulFunctionCall","src":"4160:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:27"},"nodeType":"YulFunctionCall","src":"4139:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:27"}]}]},{"nodeType":"YulBlock","src":"4212:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:27"},"nodeType":"YulFunctionCall","src":"4288:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:27"},"nodeType":"YulFunctionCall","src":"4267:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:27"}]}]},{"nodeType":"YulBlock","src":"4340:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:27"},"nodeType":"YulFunctionCall","src":"4416:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:27"},"nodeType":"YulFunctionCall","src":"4395:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:27","type":""}],"src":"3846:619:27"},{"body":{"nodeType":"YulBlock","src":"4514:43:27","statements":[{"nodeType":"YulAssignment","src":"4524:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:27"},"nodeType":"YulFunctionCall","src":"4535:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:27","type":""}],"src":"4471:86:27"},{"body":{"nodeType":"YulBlock","src":"4624:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:27"},"nodeType":"YulFunctionCall","src":"4646:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:27"},"nodeType":"YulFunctionCall","src":"4634:35:27"},"nodeType":"YulExpressionStatement","src":"4634:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:27","type":""}],"src":"4563:112:27"},{"body":{"nodeType":"YulBlock","src":"4775:120:27","statements":[{"nodeType":"YulAssignment","src":"4785:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:27"},"nodeType":"YulFunctionCall","src":"4793:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:27"},"nodeType":"YulFunctionCall","src":"4870:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:27"},"nodeType":"YulFunctionCall","src":"4821:67:27"},"nodeType":"YulExpressionStatement","src":"4821:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:27","type":""}],"src":"4681:214:27"},{"body":{"nodeType":"YulBlock","src":"4967:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:27"},"nodeType":"YulFunctionCall","src":"5015:79:27"},"nodeType":"YulExpressionStatement","src":"5015:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:27"},"nodeType":"YulFunctionCall","src":"4984:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:27"},"nodeType":"YulFunctionCall","src":"4980:32:27"},"nodeType":"YulIf","src":"4977:119:27"},{"nodeType":"YulBlock","src":"5106:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:27"},"nodeType":"YulFunctionCall","src":"5181:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:27"},"nodeType":"YulFunctionCall","src":"5160:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:27","type":""}],"src":"4901:329:27"},{"body":{"nodeType":"YulBlock","src":"5319:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:27"},"nodeType":"YulFunctionCall","src":"5367:79:27"},"nodeType":"YulExpressionStatement","src":"5367:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:27"},"nodeType":"YulFunctionCall","src":"5336:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:27"},"nodeType":"YulFunctionCall","src":"5332:32:27"},"nodeType":"YulIf","src":"5329:119:27"},{"nodeType":"YulBlock","src":"5458:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:27"},"nodeType":"YulFunctionCall","src":"5533:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:27"},"nodeType":"YulFunctionCall","src":"5512:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:27"}]}]},{"nodeType":"YulBlock","src":"5585:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:27"},"nodeType":"YulFunctionCall","src":"5661:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:27"},"nodeType":"YulFunctionCall","src":"5640:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:27","type":""}],"src":"5236:474:27"},{"body":{"nodeType":"YulBlock","src":"5744:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:27"},"nodeType":"YulFunctionCall","src":"5754:88:27"},"nodeType":"YulExpressionStatement","src":"5754:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:27"},"nodeType":"YulFunctionCall","src":"5851:15:27"},"nodeType":"YulExpressionStatement","src":"5851:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:27"},"nodeType":"YulFunctionCall","src":"5875:15:27"},"nodeType":"YulExpressionStatement","src":"5875:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:27"},{"body":{"nodeType":"YulBlock","src":"5953:269:27","statements":[{"nodeType":"YulAssignment","src":"5963:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:27"},"nodeType":"YulFunctionCall","src":"5973:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:27"},"nodeType":"YulFunctionCall","src":"6020:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:27","statements":[{"nodeType":"YulAssignment","src":"6085:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:27"},"nodeType":"YulFunctionCall","src":"6095:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:27"},"nodeType":"YulFunctionCall","src":"6044:26:27"},"nodeType":"YulIf","src":"6041:81:27"},{"body":{"nodeType":"YulBlock","src":"6174:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:27"},"nodeType":"YulFunctionCall","src":"6188:18:27"},"nodeType":"YulExpressionStatement","src":"6188:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:27"},"nodeType":"YulFunctionCall","src":"6158:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:27"},"nodeType":"YulFunctionCall","src":"6135:38:27"},"nodeType":"YulIf","src":"6132:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:27","type":""}],"src":"5902:320:27"},{"body":{"nodeType":"YulBlock","src":"6256:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:27"},"nodeType":"YulFunctionCall","src":"6266:88:27"},"nodeType":"YulExpressionStatement","src":"6266:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:27"},"nodeType":"YulFunctionCall","src":"6363:15:27"},"nodeType":"YulExpressionStatement","src":"6363:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:27"},"nodeType":"YulFunctionCall","src":"6387:15:27"},"nodeType":"YulExpressionStatement","src":"6387:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:27"},{"body":{"nodeType":"YulBlock","src":"6458:261:27","statements":[{"nodeType":"YulAssignment","src":"6468:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:27"},"nodeType":"YulFunctionCall","src":"6473:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:27"}]},{"nodeType":"YulAssignment","src":"6502:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:27"},"nodeType":"YulFunctionCall","src":"6507:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:27"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:27"},"nodeType":"YulFunctionCall","src":"6667:18:27"},"nodeType":"YulExpressionStatement","src":"6667:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:27"},"nodeType":"YulFunctionCall","src":"6589:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:27"},"nodeType":"YulFunctionCall","src":"6583:81:27"},"nodeType":"YulIf","src":"6580:107:27"},{"nodeType":"YulAssignment","src":"6697:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:27"},"nodeType":"YulFunctionCall","src":"6704:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:27","type":""}],"src":"6414:305:27"},{"body":{"nodeType":"YulBlock","src":"6831:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:27"},"nodeType":"YulFunctionCall","src":"6849:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:27"},"nodeType":"YulFunctionCall","src":"6842:58:27"},"nodeType":"YulExpressionStatement","src":"6842:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:27"},"nodeType":"YulFunctionCall","src":"6917:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:27"},"nodeType":"YulFunctionCall","src":"6910:32:27"},"nodeType":"YulExpressionStatement","src":"6910:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:27","type":""}],"src":"6725:224:27"},{"body":{"nodeType":"YulBlock","src":"7101:220:27","statements":[{"nodeType":"YulAssignment","src":"7111:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:27"},"nodeType":"YulFunctionCall","src":"7118:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:27"},"nodeType":"YulFunctionCall","src":"7194:93:27"},"nodeType":"YulExpressionStatement","src":"7194:93:27"},{"nodeType":"YulAssignment","src":"7296:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:27"},"nodeType":"YulFunctionCall","src":"7303:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:27","type":""}],"src":"6955:366:27"},{"body":{"nodeType":"YulBlock","src":"7498:248:27","statements":[{"nodeType":"YulAssignment","src":"7508:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:27"},"nodeType":"YulFunctionCall","src":"7516:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:27"},"nodeType":"YulFunctionCall","src":"7551:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:27"},"nodeType":"YulFunctionCall","src":"7570:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:27"},"nodeType":"YulFunctionCall","src":"7544:47:27"},"nodeType":"YulExpressionStatement","src":"7544:47:27"},{"nodeType":"YulAssignment","src":"7600:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:27"},"nodeType":"YulFunctionCall","src":"7608:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:27","type":""}],"src":"7327:419:27"},{"body":{"nodeType":"YulBlock","src":"7858:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:27"},"nodeType":"YulFunctionCall","src":"7876:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:27"},"nodeType":"YulFunctionCall","src":"7869:58:27"},"nodeType":"YulExpressionStatement","src":"7869:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:27"},"nodeType":"YulFunctionCall","src":"7944:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:27"},"nodeType":"YulFunctionCall","src":"7937:31:27"},"nodeType":"YulExpressionStatement","src":"7937:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:27","type":""}],"src":"7752:223:27"},{"body":{"nodeType":"YulBlock","src":"8127:220:27","statements":[{"nodeType":"YulAssignment","src":"8137:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:27"},"nodeType":"YulFunctionCall","src":"8144:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:27"},"nodeType":"YulFunctionCall","src":"8220:93:27"},"nodeType":"YulExpressionStatement","src":"8220:93:27"},{"nodeType":"YulAssignment","src":"8322:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:27"},"nodeType":"YulFunctionCall","src":"8329:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:27","type":""}],"src":"7981:366:27"},{"body":{"nodeType":"YulBlock","src":"8524:248:27","statements":[{"nodeType":"YulAssignment","src":"8534:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:27"},"nodeType":"YulFunctionCall","src":"8542:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:27"},"nodeType":"YulFunctionCall","src":"8577:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:27"},"nodeType":"YulFunctionCall","src":"8596:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:27"},"nodeType":"YulFunctionCall","src":"8570:47:27"},"nodeType":"YulExpressionStatement","src":"8570:47:27"},{"nodeType":"YulAssignment","src":"8626:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:27"},"nodeType":"YulFunctionCall","src":"8634:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:27","type":""}],"src":"8353:419:27"},{"body":{"nodeType":"YulBlock","src":"8884:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:27"},"nodeType":"YulFunctionCall","src":"8902:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:27"},"nodeType":"YulFunctionCall","src":"8895:58:27"},"nodeType":"YulExpressionStatement","src":"8895:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:27"},"nodeType":"YulFunctionCall","src":"8970:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:27"},"nodeType":"YulFunctionCall","src":"8963:29:27"},"nodeType":"YulExpressionStatement","src":"8963:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:27","type":""}],"src":"8778:221:27"},{"body":{"nodeType":"YulBlock","src":"9151:220:27","statements":[{"nodeType":"YulAssignment","src":"9161:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:27"},"nodeType":"YulFunctionCall","src":"9168:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:27"},"nodeType":"YulFunctionCall","src":"9244:93:27"},"nodeType":"YulExpressionStatement","src":"9244:93:27"},{"nodeType":"YulAssignment","src":"9346:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:27"},"nodeType":"YulFunctionCall","src":"9353:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:27","type":""}],"src":"9005:366:27"},{"body":{"nodeType":"YulBlock","src":"9548:248:27","statements":[{"nodeType":"YulAssignment","src":"9558:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:27"},"nodeType":"YulFunctionCall","src":"9566:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:27"},"nodeType":"YulFunctionCall","src":"9601:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:27"},"nodeType":"YulFunctionCall","src":"9620:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:27"},"nodeType":"YulFunctionCall","src":"9594:47:27"},"nodeType":"YulExpressionStatement","src":"9594:47:27"},{"nodeType":"YulAssignment","src":"9650:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:27"},"nodeType":"YulFunctionCall","src":"9658:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:27","type":""}],"src":"9377:419:27"},{"body":{"nodeType":"YulBlock","src":"9908:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:27"},"nodeType":"YulFunctionCall","src":"9926:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:27"},"nodeType":"YulFunctionCall","src":"9919:55:27"},"nodeType":"YulExpressionStatement","src":"9919:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:27","type":""}],"src":"9802:179:27"},{"body":{"nodeType":"YulBlock","src":"10133:220:27","statements":[{"nodeType":"YulAssignment","src":"10143:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:27"},"nodeType":"YulFunctionCall","src":"10150:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:27"},"nodeType":"YulFunctionCall","src":"10226:93:27"},"nodeType":"YulExpressionStatement","src":"10226:93:27"},{"nodeType":"YulAssignment","src":"10328:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:27"},"nodeType":"YulFunctionCall","src":"10335:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:27","type":""}],"src":"9987:366:27"},{"body":{"nodeType":"YulBlock","src":"10530:248:27","statements":[{"nodeType":"YulAssignment","src":"10540:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:27"},"nodeType":"YulFunctionCall","src":"10548:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:27"},"nodeType":"YulFunctionCall","src":"10583:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:27"},"nodeType":"YulFunctionCall","src":"10602:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:27"},"nodeType":"YulFunctionCall","src":"10576:47:27"},"nodeType":"YulExpressionStatement","src":"10576:47:27"},{"nodeType":"YulAssignment","src":"10632:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:27"},"nodeType":"YulFunctionCall","src":"10640:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:27","type":""}],"src":"10359:419:27"},{"body":{"nodeType":"YulBlock","src":"10890:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:27"},"nodeType":"YulFunctionCall","src":"10908:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:27"},"nodeType":"YulFunctionCall","src":"10901:58:27"},"nodeType":"YulExpressionStatement","src":"10901:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:27"},"nodeType":"YulFunctionCall","src":"10976:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:27"},"nodeType":"YulFunctionCall","src":"10969:32:27"},"nodeType":"YulExpressionStatement","src":"10969:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:27","type":""}],"src":"10784:224:27"},{"body":{"nodeType":"YulBlock","src":"11160:220:27","statements":[{"nodeType":"YulAssignment","src":"11170:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:27"},"nodeType":"YulFunctionCall","src":"11177:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:27"},"nodeType":"YulFunctionCall","src":"11253:93:27"},"nodeType":"YulExpressionStatement","src":"11253:93:27"},{"nodeType":"YulAssignment","src":"11355:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:27"},"nodeType":"YulFunctionCall","src":"11362:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:27","type":""}],"src":"11014:366:27"},{"body":{"nodeType":"YulBlock","src":"11557:248:27","statements":[{"nodeType":"YulAssignment","src":"11567:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:27"},"nodeType":"YulFunctionCall","src":"11575:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:27"},"nodeType":"YulFunctionCall","src":"11610:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:27"},"nodeType":"YulFunctionCall","src":"11629:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:27"},"nodeType":"YulFunctionCall","src":"11603:47:27"},"nodeType":"YulExpressionStatement","src":"11603:47:27"},{"nodeType":"YulAssignment","src":"11659:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:27"},"nodeType":"YulFunctionCall","src":"11667:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:27","type":""}],"src":"11386:419:27"},{"body":{"nodeType":"YulBlock","src":"11917:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:27"},"nodeType":"YulFunctionCall","src":"11935:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:27"},"nodeType":"YulFunctionCall","src":"11928:58:27"},"nodeType":"YulExpressionStatement","src":"11928:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:27"},"nodeType":"YulFunctionCall","src":"12003:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:27"},"nodeType":"YulFunctionCall","src":"11996:30:27"},"nodeType":"YulExpressionStatement","src":"11996:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:27","type":""}],"src":"11811:222:27"},{"body":{"nodeType":"YulBlock","src":"12185:220:27","statements":[{"nodeType":"YulAssignment","src":"12195:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:27"},"nodeType":"YulFunctionCall","src":"12202:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:27"},"nodeType":"YulFunctionCall","src":"12278:93:27"},"nodeType":"YulExpressionStatement","src":"12278:93:27"},{"nodeType":"YulAssignment","src":"12380:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:27"},"nodeType":"YulFunctionCall","src":"12387:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:27","type":""}],"src":"12039:366:27"},{"body":{"nodeType":"YulBlock","src":"12582:248:27","statements":[{"nodeType":"YulAssignment","src":"12592:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:27"},"nodeType":"YulFunctionCall","src":"12600:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:27"},"nodeType":"YulFunctionCall","src":"12635:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:27"},"nodeType":"YulFunctionCall","src":"12654:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:27"},"nodeType":"YulFunctionCall","src":"12628:47:27"},"nodeType":"YulExpressionStatement","src":"12628:47:27"},{"nodeType":"YulAssignment","src":"12684:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:27"},"nodeType":"YulFunctionCall","src":"12692:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:27","type":""}],"src":"12411:419:27"},{"body":{"nodeType":"YulBlock","src":"12942:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:27"},"nodeType":"YulFunctionCall","src":"12960:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:27"},"nodeType":"YulFunctionCall","src":"12953:58:27"},"nodeType":"YulExpressionStatement","src":"12953:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:27"},"nodeType":"YulFunctionCall","src":"13028:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:27"},"nodeType":"YulFunctionCall","src":"13021:33:27"},"nodeType":"YulExpressionStatement","src":"13021:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:27","type":""}],"src":"12836:225:27"},{"body":{"nodeType":"YulBlock","src":"13213:220:27","statements":[{"nodeType":"YulAssignment","src":"13223:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:27"},"nodeType":"YulFunctionCall","src":"13230:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:27"},"nodeType":"YulFunctionCall","src":"13306:93:27"},"nodeType":"YulExpressionStatement","src":"13306:93:27"},{"nodeType":"YulAssignment","src":"13408:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:27"},"nodeType":"YulFunctionCall","src":"13415:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:27","type":""}],"src":"13067:366:27"},{"body":{"nodeType":"YulBlock","src":"13610:248:27","statements":[{"nodeType":"YulAssignment","src":"13620:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:27"},"nodeType":"YulFunctionCall","src":"13628:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:27"},"nodeType":"YulFunctionCall","src":"13663:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:27"},"nodeType":"YulFunctionCall","src":"13682:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:27"},"nodeType":"YulFunctionCall","src":"13656:47:27"},"nodeType":"YulExpressionStatement","src":"13656:47:27"},{"nodeType":"YulAssignment","src":"13712:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:27"},"nodeType":"YulFunctionCall","src":"13720:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:27","type":""}],"src":"13439:419:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1d565b60405180910390f35b6100e660048036038101906100e19190610bd8565b610308565b6040516100f39190610c33565b60405180910390f35b61010461032b565b6040516101119190610c5d565b60405180910390f35b610134600480360381019061012f9190610c78565b610335565b6040516101419190610c33565b60405180910390f35b610152610364565b60405161015f9190610ce7565b60405180910390f35b610182600480360381019061017d9190610bd8565b61036d565b60405161018f9190610c33565b60405180910390f35b6101b260048036038101906101ad9190610d02565b6103a4565b6040516101bf9190610c5d565b60405180910390f35b6101d06103ed565b6040516101dd9190610b1d565b60405180910390f35b61020060048036038101906101fb9190610bd8565b61047f565b60405161020d9190610c33565b60405180910390f35b610230600480360381019061022b9190610bd8565b6104f6565b60405161023d9190610c33565b60405180910390f35b610260600480360381019061025b9190610d2f565b610519565b60405161026d9190610c5d565b60405180910390f35b60606036805461028590610d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9e565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610773565b6103588585856107ff565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610dff565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610d9e565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610ec7565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107ff565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610f59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610feb565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107669190610c5d565b60405180910390a3505050565b600061077f8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f957818110156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290611057565b60405180910390fd5b6107f884848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610866906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d69061117b565b60405180910390fd5b6108ea838383610a7a565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109689061120d565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a619190610c5d565b60405180910390a3610a74848484610a7f565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abe578082015181840152602081019050610aa3565b83811115610acd576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aef82610a84565b610af98185610a8f565b9350610b09818560208601610aa0565b610b1281610ad3565b840191505092915050565b60006020820190508181036000830152610b378184610ae4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6f82610b44565b9050919050565b610b7f81610b64565b8114610b8a57600080fd5b50565b600081359050610b9c81610b76565b92915050565b6000819050919050565b610bb581610ba2565b8114610bc057600080fd5b50565b600081359050610bd281610bac565b92915050565b60008060408385031215610bef57610bee610b3f565b5b6000610bfd85828601610b8d565b9250506020610c0e85828601610bc3565b9150509250929050565b60008115159050919050565b610c2d81610c18565b82525050565b6000602082019050610c486000830184610c24565b92915050565b610c5781610ba2565b82525050565b6000602082019050610c726000830184610c4e565b92915050565b600080600060608486031215610c9157610c90610b3f565b5b6000610c9f86828701610b8d565b9350506020610cb086828701610b8d565b9250506040610cc186828701610bc3565b9150509250925092565b600060ff82169050919050565b610ce181610ccb565b82525050565b6000602082019050610cfc6000830184610cd8565b92915050565b600060208284031215610d1857610d17610b3f565b5b6000610d2684828501610b8d565b91505092915050565b60008060408385031215610d4657610d45610b3f565b5b6000610d5485828601610b8d565b9250506020610d6585828601610b8d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db657607f821691505b60208210811415610dca57610dc9610d6f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0a82610ba2565b9150610e1583610ba2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4a57610e49610dd0565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb1602583610a8f565b9150610ebc82610e55565b604082019050919050565b60006020820190508181036000830152610ee081610ea4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f43602483610a8f565b9150610f4e82610ee7565b604082019050919050565b60006020820190508181036000830152610f7281610f36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd5602283610a8f565b9150610fe082610f79565b604082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611041601d83610a8f565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d3602583610a8f565b91506110de82611077565b604082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611165602383610a8f565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f7602683610a8f565b91506112028261119b565b604082019050919050565b60006020820190508181036000830152611226816111ea565b905091905056fea26469706673582212209577599587b241898215ce0d4e95b1660b48bee7143513461b15e7f23221b76e64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP4 DUP4 DUP4 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA74 DUP5 DUP5 DUP5 PUSH2 0xA7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEF DUP3 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xAF9 DUP2 DUP6 PUSH2 0xA8F JUMP JUMPDEST SWAP4 POP PUSH2 0xB09 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB37 DUP2 DUP5 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F DUP3 PUSH2 0xB44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7F DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9C DUP2 PUSH2 0xB76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB5 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD2 DUP2 PUSH2 0xBAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0E DUP6 DUP3 DUP7 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC57 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC1 DUP7 DUP3 DUP8 ADD PUSH2 0xBC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD18 JUMPI PUSH2 0xD17 PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD26 DUP5 DUP3 DUP6 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD46 JUMPI PUSH2 0xD45 PUSH2 0xB3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP2 POP PUSH2 0xE15 DUP4 PUSH2 0xBA2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDD0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 PUSH1 0x25 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 PUSH1 0x24 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x22 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x1D DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1070 DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 PUSH1 0x25 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x10DE DUP3 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1102 DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x23 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1170 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH1 0x26 DUP4 PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1202 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH24 0x599587B241898215CE0D4E95B1660B48BEE7143513461B15 0xE7 CALLCODE ORIGIN 0x21 0xB7 PUSH15 0x64736F6C6343000809003300000000 ","sourceMap":"1480:12159:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3579:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5527:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3428:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6208:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3743:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2702:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6929:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4064:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4311:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2491:98;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;4867:13;4883:12;:10;:12::i;:::-;4867:28;;4905:32;4914:5;4921:7;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;:::o;3579:106::-;3640:7;3666:12;;3659:19;;3579:106;:::o;5527:286::-;5654:4;5670:15;5688:12;:10;:12::i;:::-;5670:30;;5710:38;5726:4;5732:7;5741:6;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;5802:4;5795:11;;;5527:286;;;;;:::o;3428:91::-;3486:5;3510:2;3503:9;;3428:91;:::o;6208:234::-;6296:4;6312:13;6328:12;:10;:12::i;:::-;6312:28;;6350:64;6359:5;6366:7;6403:10;6375:25;6385:5;6392:7;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;:::-;6431:4;6424:11;;;6208:234;;;;:::o;3743:125::-;3817:7;3843:9;:18;3853:7;3843:18;;;;;;;;;;;;;;;;3836:25;;3743:125;;;:::o;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:102;:::o;6929:427::-;7022:4;7038:13;7054:12;:10;:12::i;:::-;7038:28;;7076:24;7103:25;7113:5;7120:7;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;:::-;7345:4;7338:11;;;;6929:427;;;;:::o;4064:189::-;4143:4;4159:13;4175:12;:10;:12::i;:::-;4159:28;;4197;4207:5;4214:2;4218:6;4197:9;:28::i;:::-;4242:4;4235:11;;;4064:189;;;;:::o;4311:149::-;4400:7;4426:11;:18;4438:5;4426:18;;;;;;;;;;;;;;;:27;4445:7;4426:27;;;;;;;;;;;;;;;;4419:34;;4311:149;;;;:::o;850:96:17:-;903:7;929:10;922:17;;850:96;:::o;10841:370:6:-;10989:1;10972:19;;:5;:19;;;;10964:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11069:1;11050:21;;:7;:21;;;;11042:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11151:6;11121:11;:18;11133:5;11121:18;;;;;;;;;;;;;;;:27;11140:7;11121:27;;;;;;;;;;;;;;;:36;;;;11188:7;11172:32;;11181:5;11172:32;;;11197:6;11172:32;;;;;;:::i;:::-;;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;11708:17;11688:16;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11684:243;11612:321;11492:441;;;:::o;7810:818::-;7952:1;7936:18;;:4;:18;;;;7928:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8028:1;8014:16;;:2;:16;;;;8006:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8081:38;8102:4;8108:2;8112:6;8081:20;:38::i;:::-;8130:19;8152:9;:15;8162:4;8152:15;;;;;;;;;;;;;;;;8130:37;;8200:6;8185:11;:21;;8177:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8315:6;8301:11;:20;8283:9;:15;8293:4;8283:15;;;;;;;;;;;;;;;:38;;;;8515:6;8498:9;:13;8508:2;8498:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8562:2;8547:26;;8556:4;8547:26;;;8566:6;8547:26;;;;;;:::i;:::-;;;;;;;;8584:37;8604:4;8610:2;8614:6;8584:19;:37::i;:::-;7918:710;7810:818;;;:::o;12517:121::-;;;;:::o;13226:120::-;;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"ERC20FlashMintUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrowerUpgradeable","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","increaseAllowance(address,uint256)":"39509351","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrowerUpgradeable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"token\":\"The token to be flash loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own amount + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":\"ERC20FlashMintUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol\":{\"keccak256\":\"0x10083622669a064863aaaf7d666e1ff311dd05149fa7cf2a561b4a3a995f0dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b9b55b4bc108e5971481aadc522a0352f7a0b8d5ede7dc32bf6652f43f3ec82\",\"dweb:/ipfs/QmV2LNPwem52yKWUh8whtYSYv3sqXsVrE4cDpDyR1hmLcP\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol\":{\"keccak256\":\"0xa31d534e79c2275bdef26559e5c03ff1d45fee94d0007130e67ee9273263b973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ec3b2422aa19327ab8c5f3bbd7ee161239d9b0fbedbc0fd1de17148cc9c3c0\",\"dweb:/ipfs/QmQJFvCCingXXjc7FAk6srbS27mzcWci6UgAr9JUYPeqsm\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":{\"keccak256\":\"0x586a49fbcb32c2382dff9c3075f63ca9d91196f6a3bccd6e7333a5fb5f4978ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9293ebaa7b07a21c7eb3d486e69e096c759acc81fb28e9588b99b445b6ef6eec\",\"dweb:/ipfs/QmZXxQHXmWBNnYmV5EThedC1WULBbmZdGv7qEAFbeGvbtG\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol":{"ERC20SnapshotUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Snapshot","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceOfAt(address,uint256)":"4ee2cd7e","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and total supply at the time are recorded for later access. This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting. In naive implementations it's possible to perform a \\\"double spend\\\" attack by reusing the same balance from different accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be used to create an efficient ERC20 forking mechanism. Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id and the account address. NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract. Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient alternative consider {ERC20Votes}. ==== Gas Costs Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much smaller since identical balances in subsequent snapshots are stored as a single entry. There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent transfers will have normal cost until the next snapshot, and so on.\",\"events\":{\"Snapshot(uint256)\":{\"details\":\"Emitted by {_snapshot} when a snapshot identified by `id` is created.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol\":\"ERC20SnapshotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol\":{\"keccak256\":\"0x42da8099f59958af496f6c8f0d9c1ce0a929151e02f877e4be23aca4cc440cbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781b129c8102160319aeaf01b4760e50291bbe1e4ae12b97fbdb79bda38c0d3f\",\"dweb:/ipfs/QmNPDyvAPLaVBE5mS6fZJbqW4zZ93osaYdZEz2CPYRYtPU\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":{\"keccak256\":\"0xc3821e9d41b2b19b612238b308dcc8f4ab46afcd0f6b3bd174e89789bbf59e26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e31dc401f4ddf373f106ddbab972d14eee74305c8fe358a4a6eedac7b934569a\",\"dweb:/ipfs/QmQ8zCXY1UkGLkRnA346kjSqAnfj1iWWH2Q4pE4qivqW3p\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ERC20VotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":\"ERC20VotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x89743b8a05107d361d56ffc5c5b50f5c3a9d5c5ba40c80751fd54d272488b3b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863438ae3da8d852e830b1fb72e03abd29aa115081b6eb6207d809a946d5bb18\",\"dweb:/ipfs/Qma7b2828J7LkWUPEAtWRCjwuCaTSV24qxXj1H7B46GtPy\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b62a6adfb90b267d07b6e0165849d3a1dc4900598434a6b8aa70a0491f68d49864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0x2A PUSH11 0xDFB90B267D07B6E0165849 0xD3 LOG1 0xDC 0x49 STOP MSIZE DUP5 CALLVALUE 0xA6 0xB8 0xAA PUSH17 0xA0491F68D49864736F6C63430008090033 ","sourceMap":"194:8087:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b62a6adfb90b267d07b6e0165849d3a1dc4900598434a6b8aa70a0491f68d49864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0x2A PUSH11 0xDFB90B267D07B6E0165849 0xD3 LOG1 0xDC 0x49 STOP MSIZE DUP5 CALLVALUE 0xA6 0xB8 0xAA PUSH17 0xA0491F68D49864736F6C63430008090033 ","sourceMap":"194:8087:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol":{"ArraysUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ebfed3de3be37767592be5315c8981b0d0621d42e198487ce2bb384cbdb8415464736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB INVALID 0xD3 0xDE EXTCODESIZE 0xE3 PUSH24 0x67592BE5315C8981B0D0621D42E198487CE2BB384CBDB841 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"266:3077:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ebfed3de3be37767592be5315c8981b0d0621d42e198487ce2bb384cbdb8415464736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB INVALID 0xD3 0xDE EXTCODESIZE 0xE3 PUSH24 0x67592BE5315C8981B0D0621D42E198487CE2BB384CBDB841 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"266:3077:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":\"ArraysUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":{\"keccak256\":\"0xc3821e9d41b2b19b612238b308dcc8f4ab46afcd0f6b3bd174e89789bbf59e26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e31dc401f4ddf373f106ddbab972d14eee74305c8fe358a4a6eedac7b934569a\",\"dweb:/ipfs/QmQ8zCXY1UkGLkRnA346kjSqAnfj1iWWH2Q4pE4qivqW3p\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203edeff80fe3b3cb8d7019084756369a2d9c1b18a0f994f5814aad7f095ce481b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xDE SELFDESTRUCT DUP1 INVALID EXTCODESIZE EXTCODECOPY 0xB8 0xD7 ADD SWAP1 DUP5 PUSH22 0x6369A2D9C1B18A0F994F5814AAD7F095CE481B64736F PUSH13 0x63430008090033000000000000 ","sourceMap":"424:982:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203edeff80fe3b3cb8d7019084756369a2d9c1b18a0f994f5814aad7f095ce481b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xDE SELFDESTRUCT DUP1 INVALID EXTCODESIZE EXTCODECOPY 0xB8 0xD7 ADD SWAP1 DUP5 PUSH22 0x6369A2D9C1B18A0F994F5814AAD7F095CE481B64736F PUSH13 0x63430008090033000000000000 ","sourceMap":"424:982:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220714a44cae5e685d9dd85d68c0e11106cf8f5144c9c82f2cce6418989ba21ecba64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4A44CAE5E685D9DD85D68C0E11106CF8F514 0x4C SWAP13 DUP3 CALLCODE 0xCC 0xE6 COINBASE DUP10 DUP10 0xBA 0x21 0xEC 0xBA PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1279:1402:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220714a44cae5e685d9dd85d68c0e11106cf8f5144c9c82f2cce6418989ba21ecba64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4A44CAE5E685D9DD85D68C0E11106CF8F514 0x4C SWAP13 DUP3 CALLCODE 0xCC 0xE6 COINBASE DUP10 DUP10 0xBA 0x21 0xEC 0xBA PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1279:1402:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e1f5c034b100fce72af5648a39c368db63ca8fbdc826187005653737dd0fd6b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0x1F 0x5C SUB 0x4B LT 0xF 0xCE PUSH19 0xAF5648A39C368DB63CA8FBDC82618700565373 PUSH30 0xD0FD6B64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"199:2098:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e1f5c034b100fce72af5648a39c368db63ca8fbdc826187005653737dd0fd6b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0x1F 0x5C SUB 0x4B LT 0xF 0xCE PUSH19 0xAF5648A39C368DB63CA8FBDC82618700565373 PUSH30 0xD0FD6B64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"199:2098:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220441a9e21925f7b940a4624488e9410ab04cf169cebd8ae0ab6ec4324436b3a3a64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY BYTE SWAP15 0x21 SWAP3 0x5F PUSH28 0x940A4624488E9410AB04CF169CEBD8AE0AB6EC4324436B3A3A64736F PUSH13 0x63430008090033000000000000 ","sourceMap":"380:8190:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220441a9e21925f7b940a4624488e9410ab04cf169cebd8ae0ab6ec4324436b3a3a64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY BYTE SWAP15 0x21 SWAP3 0x5F PUSH28 0x940A4624488E9410AB04CF169CEBD8AE0AB6EC4324436B3A3A64736F PUSH13 0x63430008090033000000000000 ","sourceMap":"380:8190:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:storage-size\":\"52\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7e8216d657ce61cf5ed2afe581e3fb19a709ee1d0a3bcf1aa238974f8b9942564736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE8 0x21 PUSH14 0x657CE61CF5ED2AFE581E3FB19A70 SWAP15 0xE1 0xD0 LOG3 0xBC CALL 0xAA 0x23 DUP10 PUSH21 0xF8B9942564736F6C63430008090033000000000000 ","sourceMap":"202:12313:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7e8216d657ce61cf5ed2afe581e3fb19a709ee1d0a3bcf1aa238974f8b9942564736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE8 0x21 PUSH14 0x657CE61CF5ED2AFE581E3FB19A70 SWAP15 0xE1 0xD0 LOG3 0xBC CALL 0xAA 0x23 DUP10 PUSH21 0xF8B9942564736F6C63430008090033000000000000 ","sourceMap":"202:12313:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"SafeCastUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec64161d295c326581e62a956521f0b428904f57cf0c65ead23e25211ce4b5ff64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC PUSH5 0x161D295C32 PUSH6 0x81E62A956521 CREATE 0xB4 0x28 SWAP1 0x4F JUMPI 0xCF 0xC PUSH6 0xEAD23E25211C 0xE4 0xB5 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34164:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec64161d295c326581e62a956521f0b428904f57cf0c65ead23e25211ce4b5ff64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC PUSH5 0x161D295C32 PUSH6 0x81E62A956521 CREATE 0xB4 0x28 SWAP1 0x4F JUMPI 0xCF 0xC PUSH6 0xEAD23E25211C 0xE4 0xB5 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34164:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":\"SafeCastUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]}},\"version\":1}"}},"contracts/PKDR.sol":{"PKDR":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Snapshot","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrowerUpgradeable","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"snapshot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_6618":{"entryPoint":null,"id":6618,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_417":{"entryPoint":40,"id":417,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":335,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":438,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":408,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":256,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:27","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:27"},"nodeType":"YulFunctionCall","src":"113:19:27"},"nodeType":"YulExpressionStatement","src":"113:19:27"},{"nodeType":"YulAssignment","src":"141:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:27"},"nodeType":"YulFunctionCall","src":"156:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:27","type":""}],"src":"7:169:27"},{"body":{"nodeType":"YulBlock","src":"288:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:27"},"nodeType":"YulFunctionCall","src":"306:14:27"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:27","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:27"},"nodeType":"YulFunctionCall","src":"299:58:27"},"nodeType":"YulExpressionStatement","src":"299:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:27"},"nodeType":"YulFunctionCall","src":"374:15:27"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:27","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:27"},"nodeType":"YulFunctionCall","src":"367:34:27"},"nodeType":"YulExpressionStatement","src":"367:34:27"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:27","type":""}],"src":"182:226:27"},{"body":{"nodeType":"YulBlock","src":"560:220:27","statements":[{"nodeType":"YulAssignment","src":"570:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:27"},"nodeType":"YulFunctionCall","src":"577:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:27"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:27"},"nodeType":"YulFunctionCall","src":"653:93:27"},"nodeType":"YulExpressionStatement","src":"653:93:27"},{"nodeType":"YulAssignment","src":"755:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:27"},"nodeType":"YulFunctionCall","src":"762:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:27"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:27","type":""}],"src":"414:366:27"},{"body":{"nodeType":"YulBlock","src":"957:248:27","statements":[{"nodeType":"YulAssignment","src":"967:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:27"},"nodeType":"YulFunctionCall","src":"975:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:27"},"nodeType":"YulFunctionCall","src":"1010:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:27"},"nodeType":"YulFunctionCall","src":"1029:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:27"},"nodeType":"YulFunctionCall","src":"1003:47:27"},"nodeType":"YulExpressionStatement","src":"1003:47:27"},{"nodeType":"YulAssignment","src":"1059:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:27"},"nodeType":"YulFunctionCall","src":"1067:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:27","type":""}],"src":"786:419:27"},{"body":{"nodeType":"YulBlock","src":"1254:43:27","statements":[{"nodeType":"YulAssignment","src":"1264:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:27"},"nodeType":"YulFunctionCall","src":"1275:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:27","type":""}],"src":"1211:86:27"},{"body":{"nodeType":"YulBlock","src":"1364:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:27"},"nodeType":"YulFunctionCall","src":"1386:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:27"},"nodeType":"YulFunctionCall","src":"1374:35:27"},"nodeType":"YulExpressionStatement","src":"1374:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:27","type":""}],"src":"1303:112:27"},{"body":{"nodeType":"YulBlock","src":"1515:120:27","statements":[{"nodeType":"YulAssignment","src":"1525:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:27"},"nodeType":"YulFunctionCall","src":"1533:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:27"},"nodeType":"YulFunctionCall","src":"1610:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:27"},"nodeType":"YulFunctionCall","src":"1561:67:27"},"nodeType":"YulExpressionStatement","src":"1561:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:27","type":""}],"src":"1421:214:27"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d3565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000176565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff161015620000ed5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e49190620001b6565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015e602783620000ef565b91506200016b8262000100565b604082019050919050565b6000602082019050818103600083015262000191816200014f565b9050919050565b600060ff82169050919050565b620001b08162000198565b82525050565b6000602082019050620001cd6000830184620001a5565b92915050565b61592280620001e36000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c8063715018a611610130578063981b24d0116100b8578063d505accf1161007c578063d505accf146106c7578063d9d98ce4146106e3578063dd62ed3e14610713578063f1127ed814610743578063f2fde38b1461077357610232565b8063981b24d0146105eb5780639ab24eb01461061b578063a457c2d71461064b578063a9059cbb1461067b578063c3cda520146106ab57610232565b80638456cb59116100ff5780638456cb591461056b5780638da5cb5b146105755780638e539e8c1461059357806395d89b41146105c35780639711715a146105e157610232565b8063715018a61461050b57806379cc6790146105155780637ecebe00146105315780638129fc1c1461056157610232565b806340c10f19116101be5780635c975abb116101825780635c975abb1461042d5780635cffe9de1461044b578063613255ab1461047b5780636fcfff45146104ab57806370a08231146104db57610232565b806340c10f191461037957806342966c68146103955780634ee2cd7e146103b1578063587cde1e146103e15780635c19a95c1461041157610232565b8063313ce56711610205578063313ce567146102d35780633644e515146102f1578063395093511461030f5780633a46b1a81461033f5780633f4ba83a1461036f57610232565b806306fdde0314610237578063095ea7b31461025557806318160ddd1461028557806323b872dd146102a3575b600080fd5b61023f61078f565b60405161024c9190613ce3565b60405180910390f35b61026f600480360381019061026a9190613da3565b610821565b60405161027c9190613dfe565b60405180910390f35b61028d610844565b60405161029a9190613e28565b60405180910390f35b6102bd60048036038101906102b89190613e43565b61084e565b6040516102ca9190613dfe565b60405180910390f35b6102db61087d565b6040516102e89190613eb2565b60405180910390f35b6102f9610886565b6040516103069190613ee6565b60405180910390f35b61032960048036038101906103249190613da3565b610895565b6040516103369190613dfe565b60405180910390f35b61035960048036038101906103549190613da3565b6108cc565b6040516103669190613e28565b60405180910390f35b610377610961565b005b610393600480360381019061038e9190613da3565b610973565b005b6103af60048036038101906103aa9190613f01565b610989565b005b6103cb60048036038101906103c69190613da3565b61099d565b6040516103d89190613e28565b60405180910390f35b6103fb60048036038101906103f69190613f2e565b610a0d565b6040516104089190613f6a565b60405180910390f35b61042b60048036038101906104269190613f2e565b610a77565b005b610435610a8b565b6040516104429190613dfe565b60405180910390f35b61046560048036038101906104609190614028565b610aa2565b6040516104729190613dfe565b60405180910390f35b61049560048036038101906104909190613f2e565b610c9e565b6040516104a29190613e28565b60405180910390f35b6104c560048036038101906104c09190613f2e565b610d15565b6040516104d291906140cf565b60405180910390f35b6104f560048036038101906104f09190613f2e565b610d6a565b6040516105029190613e28565b60405180910390f35b610513610db3565b005b61052f600480360381019061052a9190613da3565b610dc7565b005b61054b60048036038101906105469190613f2e565b610de7565b6040516105589190613e28565b60405180910390f35b610569610e38565b005b610573611050565b005b61057d611062565b60405161058a9190613f6a565b60405180910390f35b6105ad60048036038101906105a89190613f01565b61108c565b6040516105ba9190613e28565b60405180910390f35b6105cb6110e3565b6040516105d89190613ce3565b60405180910390f35b6105e9611175565b005b61060560048036038101906106009190613f01565b611188565b6040516106129190613e28565b60405180910390f35b61063560048036038101906106309190613f2e565b6111b9565b6040516106429190613e28565b60405180910390f35b61066560048036038101906106609190613da3565b6112cc565b6040516106729190613dfe565b60405180910390f35b61069560048036038101906106909190613da3565b611343565b6040516106a29190613dfe565b60405180910390f35b6106c560048036038101906106c09190614142565b611366565b005b6106e160048036038101906106dc91906141cf565b61146a565b005b6106fd60048036038101906106f89190613da3565b6115ac565b60405161070a9190613e28565b60405180910390f35b61072d60048036038101906107289190614271565b61162e565b60405161073a9190613e28565b60405180910390f35b61075d600480360381019061075891906142dd565b6116b5565b60405161076a9190614392565b60405180910390f35b61078d60048036038101906107889190613f2e565b6117c6565b005b60606036805461079e906143dc565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca906143dc565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b60008061082c61184a565b9050610839818585611852565b600191505092915050565b6000603554905090565b60008061085961184a565b9050610866858285611a1d565b610871858585611aa9565b60019150509392505050565b60006012905090565b6000610890611d24565b905090565b6000806108a061184a565b90506108c18185856108b2858961162e565b6108bc919061443d565b611852565b600191505092915050565b6000438210610910576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610907906144df565b60405180910390fd5b61095961019560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611d64565b905092915050565b610969611eb5565b610971611f33565b565b61097b611eb5565b6109858282611f96565b5050565b61099a61099461184a565b82611fa4565b50565b60008060006109ea84609760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fb2565b9150915081610a01576109fc85610d6a565b610a03565b805b9250505092915050565b600061019460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610a88610a8261184a565b826120a8565b50565b600060fb60009054906101000a900460ff16905090565b6000610aad85610c9e565b841115610aef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae690614571565b60405180910390fd5b6000610afb86866115ac565b9050610b078786611f96565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98773ffffffffffffffffffffffffffffffffffffffff166323e30c8b338989868a8a6040518763ffffffff1660e01b8152600401610b6b969594939291906145de565b602060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd919061464f565b14610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906146ee565b60405180910390fd5b6000610c076121c3565b9050610c1f88308489610c1a919061443d565b611a1d565b6000821480610c5a5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610c7957610c74888388610c6f919061443d565b611fa4565b610c8f565b610c838887611fa4565b610c8e888284611aa9565b5b60019250505095945050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610cda576000610d0e565b610ce2610844565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d0d919061470e565b5b9050919050565b6000610d6361019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506121c8565b9050919050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610dbb611eb5565b610dc5600061221b565b565b610dd982610dd361184a565b83611a1d565b610de38282611fa4565b5050565b6000610e3161016160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122e1565b9050919050565b60008060019054906101000a900460ff16159050808015610e695750600160008054906101000a900460ff1660ff16105b80610e965750610e78306122ef565b158015610e955750600160008054906101000a900460ff1660ff16145b5b610ed5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecc906147b4565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610f12576001600060016101000a81548160ff0219169083151502179055505b610f866040518060400160405280600481526020017f504b4452000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f504b445200000000000000000000000000000000000000000000000000000000815250612312565b610f8e61236f565b610f966123c0565b610f9e612411565b610fa661246a565b610fe46040518060400160405280600481526020017f504b4452000000000000000000000000000000000000000000000000000000008152506124c3565b610fec612554565b610ff46125a5565b801561104d5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516110449190614819565b60405180910390a15b50565b611058611eb5565b6110606125f6565b565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004382106110d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c7906144df565b60405180910390fd5b6110dc61019683611d64565b9050919050565b6060603780546110f2906143dc565b80601f016020809104026020016040519081016040528092919081815260200182805461111e906143dc565b801561116b5780601f106111405761010080835404028352916020019161116b565b820191906000526020600020905b81548152906001019060200180831161114e57829003601f168201915b5050505050905090565b61117d611eb5565b611185612659565b50565b6000806000611198846098611fb2565b91509150816111ae576111a9610844565b6111b0565b805b92505050919050565b60008061019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600081146112a35761019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600182611257919061470e565b8154811061126857611267614834565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166112a6565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b6000806112d761184a565b905060006112e5828661162e565b90508381101561132a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611321906148d5565b60405180910390fd5b6113378286868403611852565b60019250505092915050565b60008061134e61184a565b905061135b818585611aa9565b600191505092915050565b834211156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a090614941565b60405180910390fd5b600061140b6114037fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8989896040516020016113e89493929190614961565b604051602081830303815290604052805190602001206126af565b8585856126c9565b9050611416816126f4565b8614611457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144e906149f2565b60405180910390fd5b61146181886120a8565b50505050505050565b834211156114ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a490614a5e565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886114dc8c6126f4565b896040516020016114f296959493929190614a7e565b6040516020818303038152906040528051906020012090506000611515826126af565b90506000611525828787876126c9565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158c90614b2b565b60405180910390fd5b6115a08a8a8a611852565b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461161c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161390614b97565b60405180910390fd5b6116268383612753565b905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6116bd613b69565b61019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061171557611714614834565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6117ce611eb5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561183e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183590614c29565b60405180910390fd5b6118478161221b565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b990614cbb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192990614d4d565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a109190613e28565b60405180910390a3505050565b6000611a29848461162e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611aa35781811015611a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8c90614db9565b60405180910390fd5b611aa28484848403611852565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1090614e4b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8090614edd565b60405180910390fd5b611b9483838361275b565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1290614f6f565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d0b9190613e28565b60405180910390a3611d1e848484612773565b50505050565b6000611d5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d52612783565b611d5a61278e565b612799565b905090565b600080838054905090506000808290506005831115611dda576000611d88846127d3565b84611d93919061470e565b905085611da088836128cd565b60000160009054906101000a900463ffffffff1663ffffffff161115611dc857809150611dd8565b600181611dd5919061443d565b92505b505b5b80821015611e3a576000611def83836128e2565b905085611dfc88836128cd565b60000160009054906101000a900463ffffffff1663ffffffff161115611e2457809150611e34565b600181611e31919061443d565b92505b50611ddb565b60008114611e8957611e5886600183611e53919061470e565b6128cd565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611e8c565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b611ebd61184a565b73ffffffffffffffffffffffffffffffffffffffff16611edb611062565b73ffffffffffffffffffffffffffffffffffffffff1614611f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2890614fdb565b60405180910390fd5b565b611f3b612908565b600060fb60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611f7f61184a565b604051611f8c9190613f6a565b60405180910390a1565b611fa08282612951565b5050565b611fae82826129df565b5050565b60008060008411611ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fef90615047565b60405180910390fd5b6120006129fe565b841115612042576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612039906150b3565b60405180910390fd5b600061205a8585600001612a0f90919063ffffffff16565b905083600001805490508114156120785760008092509250506120a1565b60018460010182815481106120905761208f614834565b5b906000526020600020015492509250505b9250929050565b60006120b383610a0d565b905060006120c084610d6a565b90508261019460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46121bd828483612ac9565b50505050565b600090565b600063ffffffff8016821115612213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220a90615145565b60405180910390fd5b819050919050565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16612361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612358906151d7565b60405180910390fd5b61236b8282612cc4565b5050565b600060019054906101000a900460ff166123be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123b5906151d7565b60405180910390fd5b565b600060019054906101000a900460ff1661240f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612406906151d7565b60405180910390fd5b565b600060019054906101000a900460ff16612460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612457906151d7565b60405180910390fd5b612468612d45565b565b600060019054906101000a900460ff166124b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b0906151d7565b60405180910390fd5b6124c1612da6565b565b600060019054906101000a900460ff16612512576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612509906151d7565b60405180910390fd5b612551816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250612e12565b50565b600060019054906101000a900460ff166125a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259a906151d7565b60405180910390fd5b565b600060019054906101000a900460ff166125f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125eb906151d7565b60405180910390fd5b565b6125fe612e8f565b600160fb60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861264261184a565b60405161264f9190613f6a565b60405180910390a1565b6000612665609a612ed9565b600061266f6129fe565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040516126a09190613e28565b60405180910390a18091505090565b60006126c26126bc611d24565b83612eef565b9050919050565b60008060006126da87878787612f22565b915091506126e781613005565b8192505050949350505050565b60008061016160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050612742816122e1565b915061274d81612ed9565b50919050565b600092915050565b612763612e8f565b61276e838383613173565b505050565b61277e83838361322d565b505050565b600061012d54905090565b600061012e54905090565b600083838346306040516020016127b49594939291906151f7565b6040516020818303038152906040528051906020012090509392505050565b6000808214156127e657600090506128c8565b600060016127f384613258565b901c6001901b9050600181848161280d5761280c61524a565b5b048201901c905060018184816128265761282561524a565b5b048201901c9050600181848161283f5761283e61524a565b5b048201901c905060018184816128585761285761524a565b5b048201901c905060018184816128715761287061524a565b5b048201901c9050600181848161288a5761288961524a565b5b048201901c905060018184816128a3576128a261524a565b5b048201901c90506128c4818285816128be576128bd61524a565b5b04613339565b9150505b919050565b60008260005281602060002001905092915050565b600060028284186128f39190615279565b828416612900919061443d565b905092915050565b612910610a8b565b61294f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612946906152f6565b60405180910390fd5b565b61295b8282613352565b6129636134aa565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612989610844565b11156129ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c190615388565b60405180910390fd5b6129d96101966134ce836134e4565b50505050565b6129e982826137b3565b6129f8610196613983836134e4565b50505050565b6000612a0a609a6122e1565b905090565b60008083805490501415612a265760009050612ac3565b600080848054905090505b80821015612a7a576000612a4583836128e2565b905084612a528783613999565b600001541115612a6457809150612a74565b600181612a71919061443d565b92505b50612a31565b600082118015612aa2575083612a9c86600185612a97919061470e565b613999565b60000154145b15612abd57600182612ab4919061470e565b92505050612ac3565b81925050505b92915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612b055750600081115b15612cbf57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612be457600080612b8d61019560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613983856134e4565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612bd99291906153a8565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612cbe57600080612c6761019560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206134ce856134e4565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612cb39291906153a8565b60405180910390a250505b5b505050565b600060019054906101000a900460ff16612d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0a906151d7565b60405180910390fd5b8160369080519060200190612d29929190613ba7565b508060379080519060200190612d40929190613ba7565b505050565b600060019054906101000a900460ff16612d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d8b906151d7565b60405180910390fd5b612da4612d9f61184a565b61221b565b565b600060019054906101000a900460ff16612df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dec906151d7565b60405180910390fd5b600060fb60006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16612e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e58906151d7565b60405180910390fd5b6000828051906020012090506000828051906020012090508161012d819055508061012e8190555050505050565b612e97610a8b565b15612ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ece9061541d565b60405180910390fd5b565b6001816000016000828254019250508190555050565b60008282604051602001612f049291906154b5565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115612f5d576000600391509150612ffc565b600060018787878760405160008152602001604052604051612f8294939291906154ec565b6020604051602081039080840390855afa158015612fa4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ff357600060019250925050612ffc565b80600092509250505b94509492505050565b6000600481111561301957613018615531565b5b81600481111561302c5761302b615531565b5b141561303757613170565b6001600481111561304b5761304a615531565b5b81600481111561305e5761305d615531565b5b141561309f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613096906155ac565b60405180910390fd5b600260048111156130b3576130b2615531565b5b8160048111156130c6576130c5615531565b5b1415613107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130fe90615618565b60405180910390fd5b6003600481111561311b5761311a615531565b5b81600481111561312e5761312d615531565b5b141561316f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613166906156aa565b60405180910390fd5b5b50565b61317e8383836139bb565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156131c9576131bc826139c0565b6131c4613a13565b613228565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561321457613207836139c0565b61320f613a13565b613227565b61321d836139c0565b613226826139c0565b5b5b505050565b613238838383613a27565b61325361324484610a0d565b61324d84610a0d565b83612ac9565b505050565b600080600090506000608084901c111561327a57608083901c92506080810190505b6000604084901c111561329557604083901c92506040810190505b6000602084901c11156132b057602083901c92506020810190505b6000601084901c11156132cb57601083901c92506010810190505b6000600884901c11156132e657600883901c92506008810190505b6000600484901c111561330157600483901c92506004810190505b6000600284901c111561331c57600283901c92506002810190505b6000600184901c1115613330576001810190505b80915050919050565b6000818310613348578161334a565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133b990615716565b60405180910390fd5b6133ce6000838361275b565b80603560008282546133e0919061443d565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516134929190613e28565b60405180910390a36134a660008383612773565b5050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b600081836134dc919061443d565b905092915050565b60008060008580549050905060008082146135b35761350f8760018461350a919061470e565b6128cd565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250506135ef565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935061362484868863ffffffff16565b925060008211801561363f575043816000015163ffffffff16145b156136b95761364d83613a2c565b6136638860018561365e919061470e565b6128cd565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506137a9565b8660405180604001604052806136ce436121c8565b63ffffffff1681526020016136e286613a2c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161381a906157a8565b60405180910390fd5b61382f8260008361275b565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156138b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138ad9061583a565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603560008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161396a9190613e28565b60405180910390a361397e83600084612773565b505050565b60008183613991919061470e565b905092915050565b600080836000528260206000200190506139b281613a97565b91505092915050565b505050565b613a10609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a0b83610d6a565b613aa1565b50565b613a256098613a20610844565b613aa1565b565b505050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115613a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a86906158cc565b60405180910390fd5b819050919050565b6000819050919050565b6000613aab6129fe565b905080613aba84600001613b1c565b1015613b175782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b60008082805490501415613b335760009050613b64565b8160018380549050613b45919061470e565b81548110613b5657613b55614834565b5b906000526020600020015490505b919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b828054613bb3906143dc565b90600052602060002090601f016020900481019282613bd55760008555613c1c565b82601f10613bee57805160ff1916838001178555613c1c565b82800160010185558215613c1c579182015b82811115613c1b578251825591602001919060010190613c00565b5b509050613c299190613c2d565b5090565b5b80821115613c46576000816000905550600101613c2e565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015613c84578082015181840152602081019050613c69565b83811115613c93576000848401525b50505050565b6000601f19601f8301169050919050565b6000613cb582613c4a565b613cbf8185613c55565b9350613ccf818560208601613c66565b613cd881613c99565b840191505092915050565b60006020820190508181036000830152613cfd8184613caa565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613d3a82613d0f565b9050919050565b613d4a81613d2f565b8114613d5557600080fd5b50565b600081359050613d6781613d41565b92915050565b6000819050919050565b613d8081613d6d565b8114613d8b57600080fd5b50565b600081359050613d9d81613d77565b92915050565b60008060408385031215613dba57613db9613d05565b5b6000613dc885828601613d58565b9250506020613dd985828601613d8e565b9150509250929050565b60008115159050919050565b613df881613de3565b82525050565b6000602082019050613e136000830184613def565b92915050565b613e2281613d6d565b82525050565b6000602082019050613e3d6000830184613e19565b92915050565b600080600060608486031215613e5c57613e5b613d05565b5b6000613e6a86828701613d58565b9350506020613e7b86828701613d58565b9250506040613e8c86828701613d8e565b9150509250925092565b600060ff82169050919050565b613eac81613e96565b82525050565b6000602082019050613ec76000830184613ea3565b92915050565b6000819050919050565b613ee081613ecd565b82525050565b6000602082019050613efb6000830184613ed7565b92915050565b600060208284031215613f1757613f16613d05565b5b6000613f2584828501613d8e565b91505092915050565b600060208284031215613f4457613f43613d05565b5b6000613f5284828501613d58565b91505092915050565b613f6481613d2f565b82525050565b6000602082019050613f7f6000830184613f5b565b92915050565b6000613f9082613d2f565b9050919050565b613fa081613f85565b8114613fab57600080fd5b50565b600081359050613fbd81613f97565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613fe857613fe7613fc3565b5b8235905067ffffffffffffffff81111561400557614004613fc8565b5b60208301915083600182028301111561402157614020613fcd565b5b9250929050565b60008060008060006080868803121561404457614043613d05565b5b600061405288828901613fae565b955050602061406388828901613d58565b945050604061407488828901613d8e565b935050606086013567ffffffffffffffff81111561409557614094613d0a565b5b6140a188828901613fd2565b92509250509295509295909350565b600063ffffffff82169050919050565b6140c9816140b0565b82525050565b60006020820190506140e460008301846140c0565b92915050565b6140f381613e96565b81146140fe57600080fd5b50565b600081359050614110816140ea565b92915050565b61411f81613ecd565b811461412a57600080fd5b50565b60008135905061413c81614116565b92915050565b60008060008060008060c0878903121561415f5761415e613d05565b5b600061416d89828a01613d58565b965050602061417e89828a01613d8e565b955050604061418f89828a01613d8e565b94505060606141a089828a01614101565b93505060806141b189828a0161412d565b92505060a06141c289828a0161412d565b9150509295509295509295565b600080600080600080600060e0888a0312156141ee576141ed613d05565b5b60006141fc8a828b01613d58565b975050602061420d8a828b01613d58565b965050604061421e8a828b01613d8e565b955050606061422f8a828b01613d8e565b94505060806142408a828b01614101565b93505060a06142518a828b0161412d565b92505060c06142628a828b0161412d565b91505092959891949750929550565b6000806040838503121561428857614287613d05565b5b600061429685828601613d58565b92505060206142a785828601613d58565b9150509250929050565b6142ba816140b0565b81146142c557600080fd5b50565b6000813590506142d7816142b1565b92915050565b600080604083850312156142f4576142f3613d05565b5b600061430285828601613d58565b9250506020614313858286016142c8565b9150509250929050565b614326816140b0565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61435d8161432c565b82525050565b604082016000820151614379600085018261431d565b50602082015161438c6020850182614354565b50505050565b60006040820190506143a76000830184614363565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806143f457607f821691505b60208210811415614408576144076143ad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061444882613d6d565b915061445383613d6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156144885761448761440e565b5b828201905092915050565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b60006144c9601f83613c55565b91506144d482614493565b602082019050919050565b600060208201905081810360008301526144f8816144bc565b9050919050565b7f4552433230466c6173684d696e743a20616d6f756e742065786365656473206d60008201527f6178466c6173684c6f616e000000000000000000000000000000000000000000602082015250565b600061455b602b83613c55565b9150614566826144ff565b604082019050919050565b6000602082019050818103600083015261458a8161454e565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006145bd8385614591565b93506145ca8385846145a2565b6145d383613c99565b840190509392505050565b600060a0820190506145f36000830189613f5b565b6146006020830188613f5b565b61460d6040830187613e19565b61461a6060830186613e19565b818103608083015261462d8184866145b1565b9050979650505050505050565b60008151905061464981614116565b92915050565b60006020828403121561466557614664613d05565b5b60006146738482850161463a565b91505092915050565b7f4552433230466c6173684d696e743a20696e76616c69642072657475726e207660008201527f616c756500000000000000000000000000000000000000000000000000000000602082015250565b60006146d8602483613c55565b91506146e38261467c565b604082019050919050565b60006020820190508181036000830152614707816146cb565b9050919050565b600061471982613d6d565b915061472483613d6d565b9250828210156147375761473661440e565b5b828203905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061479e602e83613c55565b91506147a982614742565b604082019050919050565b600060208201905081810360008301526147cd81614791565b9050919050565b6000819050919050565b6000819050919050565b60006148036147fe6147f9846147d4565b6147de565b613e96565b9050919050565b614813816147e8565b82525050565b600060208201905061482e600083018461480a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006148bf602583613c55565b91506148ca82614863565b604082019050919050565b600060208201905081810360008301526148ee816148b2565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b600061492b601d83613c55565b9150614936826148f5565b602082019050919050565b6000602082019050818103600083015261495a8161491e565b9050919050565b60006080820190506149766000830187613ed7565b6149836020830186613f5b565b6149906040830185613e19565b61499d6060830184613e19565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b60006149dc601983613c55565b91506149e7826149a6565b602082019050919050565b60006020820190508181036000830152614a0b816149cf565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000614a48601d83613c55565b9150614a5382614a12565b602082019050919050565b60006020820190508181036000830152614a7781614a3b565b9050919050565b600060c082019050614a936000830189613ed7565b614aa06020830188613f5b565b614aad6040830187613f5b565b614aba6060830186613e19565b614ac76080830185613e19565b614ad460a0830184613e19565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b6000614b15601e83613c55565b9150614b2082614adf565b602082019050919050565b60006020820190508181036000830152614b4481614b08565b9050919050565b7f4552433230466c6173684d696e743a2077726f6e6720746f6b656e0000000000600082015250565b6000614b81601b83613c55565b9150614b8c82614b4b565b602082019050919050565b60006020820190508181036000830152614bb081614b74565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614c13602683613c55565b9150614c1e82614bb7565b604082019050919050565b60006020820190508181036000830152614c4281614c06565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000614ca5602483613c55565b9150614cb082614c49565b604082019050919050565b60006020820190508181036000830152614cd481614c98565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000614d37602283613c55565b9150614d4282614cdb565b604082019050919050565b60006020820190508181036000830152614d6681614d2a565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000614da3601d83613c55565b9150614dae82614d6d565b602082019050919050565b60006020820190508181036000830152614dd281614d96565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000614e35602583613c55565b9150614e4082614dd9565b604082019050919050565b60006020820190508181036000830152614e6481614e28565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614ec7602383613c55565b9150614ed282614e6b565b604082019050919050565b60006020820190508181036000830152614ef681614eba565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000614f59602683613c55565b9150614f6482614efd565b604082019050919050565b60006020820190508181036000830152614f8881614f4c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000614fc5602083613c55565b9150614fd082614f8f565b602082019050919050565b60006020820190508181036000830152614ff481614fb8565b9050919050565b7f4552433230536e617073686f743a206964206973203000000000000000000000600082015250565b6000615031601683613c55565b915061503c82614ffb565b602082019050919050565b6000602082019050818103600083015261506081615024565b9050919050565b7f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000600082015250565b600061509d601d83613c55565b91506150a882615067565b602082019050919050565b600060208201905081810360008301526150cc81615090565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b600061512f602683613c55565b915061513a826150d3565b604082019050919050565b6000602082019050818103600083015261515e81615122565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006151c1602b83613c55565b91506151cc82615165565b604082019050919050565b600060208201905081810360008301526151f0816151b4565b9050919050565b600060a08201905061520c6000830188613ed7565b6152196020830187613ed7565b6152266040830186613ed7565b6152336060830185613e19565b6152406080830184613f5b565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061528482613d6d565b915061528f83613d6d565b92508261529f5761529e61524a565b5b828204905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006152e0601483613c55565b91506152eb826152aa565b602082019050919050565b6000602082019050818103600083015261530f816152d3565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b6000615372603083613c55565b915061537d82615316565b604082019050919050565b600060208201905081810360008301526153a181615365565b9050919050565b60006040820190506153bd6000830185613e19565b6153ca6020830184613e19565b9392505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000615407601083613c55565b9150615412826153d1565b602082019050919050565b60006020820190508181036000830152615436816153fa565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061547e60028361543d565b915061548982615448565b600282019050919050565b6000819050919050565b6154af6154aa82613ecd565b615494565b82525050565b60006154c082615471565b91506154cc828561549e565b6020820191506154dc828461549e565b6020820191508190509392505050565b60006080820190506155016000830187613ed7565b61550e6020830186613ea3565b61551b6040830185613ed7565b6155286060830184613ed7565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000615596601883613c55565b91506155a182615560565b602082019050919050565b600060208201905081810360008301526155c581615589565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000615602601f83613c55565b915061560d826155cc565b602082019050919050565b60006020820190508181036000830152615631816155f5565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000615694602283613c55565b915061569f82615638565b604082019050919050565b600060208201905081810360008301526156c381615687565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000615700601f83613c55565b915061570b826156ca565b602082019050919050565b6000602082019050818103600083015261572f816156f3565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000615792602183613c55565b915061579d82615736565b604082019050919050565b600060208201905081810360008301526157c181615785565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000615824602283613c55565b915061582f826157c8565b604082019050919050565b6000602082019050818103600083015261585381615817565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b60006158b6602783613c55565b91506158c18261585a565b604082019050919050565b600060208201905081810360008301526158e5816158a9565b905091905056fea2646970667358221220b86d618d01f34491c16f320172c16517afbfa3ac68853be4d551ef1b59fcb1a664736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT ISZERO PUSH3 0xED JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE4 SWAP2 SWAP1 PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15E PUSH1 0x27 DUP4 PUSH3 0xEF JUMP JUMPDEST SWAP2 POP PUSH3 0x16B DUP3 PUSH3 0x100 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x191 DUP2 PUSH3 0x14F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B0 DUP2 PUSH3 0x198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5922 DUP1 PUSH3 0x1E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x981B24D0 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x6E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x773 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x6AB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x5E1 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x561 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x411 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36F JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x3EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x3F01 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x40CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0xE38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x573 PUSH2 0x1050 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57D PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x3F01 JUMP JUMPDEST PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH2 0x1175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x3F01 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x635 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x695 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x4142 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x41CF JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x4271 JUMP JUMPDEST PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x4392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x79E SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CA SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x817 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x817 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82C PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x839 DUP2 DUP6 DUP6 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x859 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x866 DUP6 DUP3 DUP6 PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x871 DUP6 DUP6 DUP6 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A0 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 DUP2 DUP6 DUP6 PUSH2 0x8B2 DUP6 DUP10 PUSH2 0x162E JUMP JUMPDEST PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x44DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x959 PUSH2 0x195 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x971 PUSH2 0x1F33 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x97B PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x985 DUP3 DUP3 PUSH2 0x1F96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x99A PUSH2 0x994 PUSH2 0x184A JUMP JUMPDEST DUP3 PUSH2 0x1FA4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9EA DUP5 PUSH1 0x97 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1FB2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xA01 JUMPI PUSH2 0x9FC DUP6 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA88 PUSH2 0xA82 PUSH2 0x184A JUMP JUMPDEST DUP3 PUSH2 0x20A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAD DUP6 PUSH2 0xC9E JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE6 SWAP1 PUSH2 0x4571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP7 DUP7 PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP PUSH2 0xB07 DUP8 DUP7 PUSH2 0x1F96 JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23E30C8B CALLER DUP10 DUP10 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x464F JUMP JUMPDEST EQ PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x46EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC07 PUSH2 0x21C3 JUMP JUMPDEST SWAP1 POP PUSH2 0xC1F DUP9 ADDRESS DUP5 DUP10 PUSH2 0xC1A SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0xC5A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC74 DUP9 DUP4 DUP9 PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xC83 DUP9 DUP8 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0xC8E DUP9 DUP3 DUP5 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDA JUMPI PUSH1 0x0 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0xCE2 PUSH2 0x844 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBB PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0xDC5 PUSH1 0x0 PUSH2 0x221B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDD9 DUP3 PUSH2 0xDD3 PUSH2 0x184A JUMP JUMPDEST DUP4 PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0xDE3 DUP3 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE31 PUSH2 0x161 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x22E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xE69 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xE96 JUMPI POP PUSH2 0xE78 ADDRESS PUSH2 0x22EF JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xE95 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECC SWAP1 PUSH2 0x47B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF12 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF86 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504B445200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504B445200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2312 JUMP JUMPDEST PUSH2 0xF8E PUSH2 0x236F JUMP JUMPDEST PUSH2 0xF96 PUSH2 0x23C0 JUMP JUMPDEST PUSH2 0xF9E PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xFA6 PUSH2 0x246A JUMP JUMPDEST PUSH2 0xFE4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504B445200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0xFEC PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x25A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x104D JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x4819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1058 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x25F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x10D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C7 SWAP1 PUSH2 0x44DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DC PUSH2 0x196 DUP4 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x10F2 SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x111E SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x116B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1140 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x116B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x114E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x117D PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x1185 PUSH2 0x2659 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1198 DUP5 PUSH1 0x98 PUSH2 0x1FB2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x11AE JUMPI PUSH2 0x11A9 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x11B0 JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x12A3 JUMPI PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12D7 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12E5 DUP3 DUP7 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1321 SWAP1 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1337 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x134E PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x135B DUP2 DUP6 DUP6 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A0 SWAP1 PUSH2 0x4941 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140B PUSH2 0x1403 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x26AF JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x26C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1416 DUP2 PUSH2 0x26F4 JUMP JUMPDEST DUP7 EQ PUSH2 0x1457 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144E SWAP1 PUSH2 0x49F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1461 DUP2 DUP9 PUSH2 0x20A8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x14AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A4 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x14DC DUP13 PUSH2 0x26F4 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14F2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1515 DUP3 PUSH2 0x26AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1525 DUP3 DUP8 DUP8 DUP8 PUSH2 0x26C9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158C SWAP1 PUSH2 0x4B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A0 DUP11 DUP11 DUP11 PUSH2 0x1852 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP1 PUSH2 0x4B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1626 DUP4 DUP4 PUSH2 0x2753 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16BD PUSH2 0x3B69 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CE PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x183E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1835 SWAP1 PUSH2 0x4C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1847 DUP2 PUSH2 0x221B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B9 SWAP1 PUSH2 0x4CBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1929 SWAP1 PUSH2 0x4D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A10 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A29 DUP5 DUP5 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1AA3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8C SWAP1 PUSH2 0x4DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AA2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1852 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B10 SWAP1 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B80 SWAP1 PUSH2 0x4EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B94 DUP4 DUP4 DUP4 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C12 SWAP1 PUSH2 0x4F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1D1E DUP5 DUP5 DUP5 PUSH2 0x2773 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5F PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1D52 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1D5A PUSH2 0x278E JUMP JUMPDEST PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1DDA JUMPI PUSH1 0x0 PUSH2 0x1D88 DUP5 PUSH2 0x27D3 JUMP JUMPDEST DUP5 PUSH2 0x1D93 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1DA0 DUP9 DUP4 PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1DC8 JUMPI DUP1 SWAP2 POP PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1DD5 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1E3A JUMPI PUSH1 0x0 PUSH2 0x1DEF DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1DFC DUP9 DUP4 PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1E24 JUMPI DUP1 SWAP2 POP PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1E31 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1E89 JUMPI PUSH2 0x1E58 DUP7 PUSH1 0x1 DUP4 PUSH2 0x1E53 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EBD PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EDB PUSH2 0x1062 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F28 SWAP1 PUSH2 0x4FDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1F3B PUSH2 0x2908 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1F7F PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8C SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1FA0 DUP3 DUP3 PUSH2 0x2951 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1FAE DUP3 DUP3 PUSH2 0x29DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x1FF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEF SWAP1 PUSH2 0x5047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2000 PUSH2 0x29FE JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x2042 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2039 SWAP1 PUSH2 0x50B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x205A DUP6 DUP6 PUSH1 0x0 ADD PUSH2 0x2A0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 EQ ISZERO PUSH2 0x2078 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B3 DUP4 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20C0 DUP5 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x194 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x21BD DUP3 DUP5 DUP4 PUSH2 0x2AC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220A SWAP1 PUSH2 0x5145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2358 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236B DUP3 DUP3 PUSH2 0x2CC4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B5 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2406 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2457 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2468 PUSH2 0x2D45 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B0 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24C1 PUSH2 0x2DA6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2509 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2551 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2E12 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259A SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25EB SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x25FE PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2642 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264F SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2665 PUSH1 0x9A PUSH2 0x2ED9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266F PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP PUSH32 0x8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x26A0 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C2 PUSH2 0x26BC PUSH2 0x1D24 JUMP JUMPDEST DUP4 PUSH2 0x2EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x26DA DUP8 DUP8 DUP8 DUP8 PUSH2 0x2F22 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x26E7 DUP2 PUSH2 0x3005 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x161 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2742 DUP2 PUSH2 0x22E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x274D DUP2 PUSH2 0x2ED9 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2763 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x276E DUP4 DUP4 DUP4 PUSH2 0x3173 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x277E DUP4 DUP4 DUP4 PUSH2 0x322D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27B4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x27E6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x27F3 DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2826 JUMPI PUSH2 0x2825 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x283F JUMPI PUSH2 0x283E PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2858 JUMPI PUSH2 0x2857 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2871 JUMPI PUSH2 0x2870 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x288A JUMPI PUSH2 0x2889 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28A3 JUMPI PUSH2 0x28A2 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x28C4 DUP2 DUP3 DUP6 DUP2 PUSH2 0x28BE JUMPI PUSH2 0x28BD PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV PUSH2 0x3339 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x28F3 SWAP2 SWAP1 PUSH2 0x5279 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2900 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2910 PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x294F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2946 SWAP1 PUSH2 0x52F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x295B DUP3 DUP3 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x2963 PUSH2 0x34AA JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2989 PUSH2 0x844 JUMP JUMPDEST GT ISZERO PUSH2 0x29CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C1 SWAP1 PUSH2 0x5388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29D9 PUSH2 0x196 PUSH2 0x34CE DUP4 PUSH2 0x34E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x29E9 DUP3 DUP3 PUSH2 0x37B3 JUMP JUMPDEST PUSH2 0x29F8 PUSH2 0x196 PUSH2 0x3983 DUP4 PUSH2 0x34E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0A PUSH1 0x9A PUSH2 0x22E1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x2A26 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 SLOAD SWAP1 POP SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2A7A JUMPI PUSH1 0x0 PUSH2 0x2A45 DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x2A52 DUP8 DUP4 PUSH2 0x3999 JUMP JUMPDEST PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2A64 JUMPI DUP1 SWAP2 POP PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2A71 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2AA2 JUMPI POP DUP4 PUSH2 0x2A9C DUP7 PUSH1 0x1 DUP6 PUSH2 0x2A97 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x3999 JUMP JUMPDEST PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2ABD JUMPI PUSH1 0x1 DUP3 PUSH2 0x2AB4 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2AC3 JUMP JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2B05 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2CBF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BE4 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B8D PUSH2 0x195 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3983 DUP6 PUSH2 0x34E4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2BD9 SWAP3 SWAP2 SWAP1 PUSH2 0x53A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CBE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2C67 PUSH2 0x195 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x34CE DUP6 PUSH2 0x34E4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CB3 SWAP3 SWAP2 SWAP1 PUSH2 0x53A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0A SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2D29 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA7 JUMP JUMPDEST POP DUP1 PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2D40 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8B SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DA4 PUSH2 0x2D9F PUSH2 0x184A JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DEC SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E58 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH2 0x12D DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x12E DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E97 PUSH2 0xA8B JUMP JUMPDEST ISZERO PUSH2 0x2ED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ECE SWAP1 PUSH2 0x541D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F04 SWAP3 SWAP2 SWAP1 PUSH2 0x54B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2F5D JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2F82 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x54EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2FF3 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2FFC JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3019 JUMPI PUSH2 0x3018 PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x302C JUMPI PUSH2 0x302B PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3037 JUMPI PUSH2 0x3170 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x304B JUMPI PUSH2 0x304A PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x305E JUMPI PUSH2 0x305D PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x309F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3096 SWAP1 PUSH2 0x55AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x30B3 JUMPI PUSH2 0x30B2 PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x30C6 JUMPI PUSH2 0x30C5 PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3107 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30FE SWAP1 PUSH2 0x5618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x311B JUMPI PUSH2 0x311A PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x312E JUMPI PUSH2 0x312D PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x316F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3166 SWAP1 PUSH2 0x56AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x317E DUP4 DUP4 DUP4 PUSH2 0x39BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31C9 JUMPI PUSH2 0x31BC DUP3 PUSH2 0x39C0 JUMP JUMPDEST PUSH2 0x31C4 PUSH2 0x3A13 JUMP JUMPDEST PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3214 JUMPI PUSH2 0x3207 DUP4 PUSH2 0x39C0 JUMP JUMPDEST PUSH2 0x320F PUSH2 0x3A13 JUMP JUMPDEST PUSH2 0x3227 JUMP JUMPDEST PUSH2 0x321D DUP4 PUSH2 0x39C0 JUMP JUMPDEST PUSH2 0x3226 DUP3 PUSH2 0x39C0 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3238 DUP4 DUP4 DUP4 PUSH2 0x3A27 JUMP JUMPDEST PUSH2 0x3253 PUSH2 0x3244 DUP5 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x324D DUP5 PUSH2 0xA0D JUMP JUMPDEST DUP4 PUSH2 0x2AC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x327A JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3295 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32B0 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32CB JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32E6 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3301 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x331C JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3330 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3348 JUMPI DUP2 PUSH2 0x334A JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x33C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B9 SWAP1 PUSH2 0x5716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33CE PUSH1 0x0 DUP4 DUP4 PUSH2 0x275B JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33E0 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3492 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x34A6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2773 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x34DC SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x35B3 JUMPI PUSH2 0x350F DUP8 PUSH1 0x1 DUP5 PUSH2 0x350A SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x3624 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x363F JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x36B9 JUMPI PUSH2 0x364D DUP4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x3663 DUP9 PUSH1 0x1 DUP6 PUSH2 0x365E SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x37A9 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x36CE NUMBER PUSH2 0x21C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36E2 DUP7 PUSH2 0x3A2C JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381A SWAP1 PUSH2 0x57A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382F DUP3 PUSH1 0x0 DUP4 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x38B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38AD SWAP1 PUSH2 0x583A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x396A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x397E DUP4 PUSH1 0x0 DUP5 PUSH2 0x2773 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3991 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP PUSH2 0x39B2 DUP2 PUSH2 0x3A97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3A10 PUSH1 0x97 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3A0B DUP4 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x3AA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A25 PUSH1 0x98 PUSH2 0x3A20 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x3AA1 JUMP JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x3A8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A86 SWAP1 PUSH2 0x58CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAB PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3ABA DUP5 PUSH1 0x0 ADD PUSH2 0x3B1C JUMP JUMPDEST LT ISZERO PUSH2 0x3B17 JUMPI DUP3 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x3B33 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B64 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x3B45 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3B56 JUMPI PUSH2 0x3B55 PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3BB3 SWAP1 PUSH2 0x43DC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3BD5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3C1C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3BEE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3C1C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3C1C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3C1B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3C00 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3C29 SWAP2 SWAP1 PUSH2 0x3C2D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3C46 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3C2E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C84 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C69 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C93 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB5 DUP3 PUSH2 0x3C4A JUMP JUMPDEST PUSH2 0x3CBF DUP2 DUP6 PUSH2 0x3C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C66 JUMP JUMPDEST PUSH2 0x3CD8 DUP2 PUSH2 0x3C99 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CFD DUP2 DUP5 PUSH2 0x3CAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3A DUP3 PUSH2 0x3D0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D4A DUP2 PUSH2 0x3D2F JUMP JUMPDEST DUP2 EQ PUSH2 0x3D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D67 DUP2 PUSH2 0x3D41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D80 DUP2 PUSH2 0x3D6D JUMP JUMPDEST DUP2 EQ PUSH2 0x3D8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D9D DUP2 PUSH2 0x3D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DBA JUMPI PUSH2 0x3DB9 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DC8 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3DD9 DUP6 DUP3 DUP7 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DF8 DUP2 PUSH2 0x3DE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E22 DUP2 PUSH2 0x3D6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E5C JUMPI PUSH2 0x3E5B PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6A DUP7 DUP3 DUP8 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E7B DUP7 DUP3 DUP8 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E8C DUP7 DUP3 DUP8 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EAC DUP2 PUSH2 0x3E96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3EA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE0 DUP2 PUSH2 0x3ECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F17 JUMPI PUSH2 0x3F16 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F25 DUP5 DUP3 DUP6 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F44 JUMPI PUSH2 0x3F43 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F52 DUP5 DUP3 DUP6 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F64 DUP2 PUSH2 0x3D2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F90 DUP3 PUSH2 0x3D2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA0 DUP2 PUSH2 0x3F85 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FBD DUP2 PUSH2 0x3F97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3FE8 JUMPI PUSH2 0x3FE7 PUSH2 0x3FC3 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4005 JUMPI PUSH2 0x4004 PUSH2 0x3FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4021 JUMPI PUSH2 0x4020 PUSH2 0x3FCD JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4044 JUMPI PUSH2 0x4043 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4052 DUP9 DUP3 DUP10 ADD PUSH2 0x3FAE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4063 DUP9 DUP3 DUP10 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4074 DUP9 DUP3 DUP10 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4095 JUMPI PUSH2 0x4094 PUSH2 0x3D0A JUMP JUMPDEST JUMPDEST PUSH2 0x40A1 DUP9 DUP3 DUP10 ADD PUSH2 0x3FD2 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40C9 DUP2 PUSH2 0x40B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x40F3 DUP2 PUSH2 0x3E96 JUMP JUMPDEST DUP2 EQ PUSH2 0x40FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4110 DUP2 PUSH2 0x40EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x411F DUP2 PUSH2 0x3ECD JUMP JUMPDEST DUP2 EQ PUSH2 0x412A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x413C DUP2 PUSH2 0x4116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x415F JUMPI PUSH2 0x415E PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x416D DUP10 DUP3 DUP11 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x417E DUP10 DUP3 DUP11 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x418F DUP10 DUP3 DUP11 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x41A0 DUP10 DUP3 DUP11 ADD PUSH2 0x4101 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x41B1 DUP10 DUP3 DUP11 ADD PUSH2 0x412D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x41C2 DUP10 DUP3 DUP11 ADD PUSH2 0x412D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x41EE JUMPI PUSH2 0x41ED PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41FC DUP11 DUP3 DUP12 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x420D DUP11 DUP3 DUP12 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x421E DUP11 DUP3 DUP12 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x422F DUP11 DUP3 DUP12 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4240 DUP11 DUP3 DUP12 ADD PUSH2 0x4101 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4251 DUP11 DUP3 DUP12 ADD PUSH2 0x412D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4262 DUP11 DUP3 DUP12 ADD PUSH2 0x412D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4288 JUMPI PUSH2 0x4287 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4296 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42A7 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x42BA DUP2 PUSH2 0x40B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x42C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42D7 DUP2 PUSH2 0x42B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42F4 JUMPI PUSH2 0x42F3 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4302 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4313 DUP6 DUP3 DUP7 ADD PUSH2 0x42C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4326 DUP2 PUSH2 0x40B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x435D DUP2 PUSH2 0x432C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4379 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x431D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x438C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4354 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x43A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x43F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4408 JUMPI PUSH2 0x4407 PUSH2 0x43AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4448 DUP3 PUSH2 0x3D6D JUMP JUMPDEST SWAP2 POP PUSH2 0x4453 DUP4 PUSH2 0x3D6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4488 JUMPI PUSH2 0x4487 PUSH2 0x440E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C9 PUSH1 0x1F DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x44D4 DUP3 PUSH2 0x4493 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44F8 DUP2 PUSH2 0x44BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230466C6173684D696E743A20616D6F756E742065786365656473206D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6178466C6173684C6F616E000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455B PUSH1 0x2B DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4566 DUP3 PUSH2 0x44FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x458A DUP2 PUSH2 0x454E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45BD DUP4 DUP6 PUSH2 0x4591 JUMP JUMPDEST SWAP4 POP PUSH2 0x45CA DUP4 DUP6 DUP5 PUSH2 0x45A2 JUMP JUMPDEST PUSH2 0x45D3 DUP4 PUSH2 0x3C99 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x45F3 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4600 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x460D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x461A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3E19 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x462D DUP2 DUP5 DUP7 PUSH2 0x45B1 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4649 DUP2 PUSH2 0x4116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4665 JUMPI PUSH2 0x4664 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4673 DUP5 DUP3 DUP6 ADD PUSH2 0x463A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230466C6173684D696E743A20696E76616C69642072657475726E2076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C756500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D8 PUSH1 0x24 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E3 DUP3 PUSH2 0x467C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4707 DUP2 PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4719 DUP3 PUSH2 0x3D6D JUMP JUMPDEST SWAP2 POP PUSH2 0x4724 DUP4 PUSH2 0x3D6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4737 JUMPI PUSH2 0x4736 PUSH2 0x440E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479E PUSH1 0x2E DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x47A9 DUP3 PUSH2 0x4742 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47CD DUP2 PUSH2 0x4791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4803 PUSH2 0x47FE PUSH2 0x47F9 DUP5 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x47DE JUMP JUMPDEST PUSH2 0x3E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4813 DUP2 PUSH2 0x47E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x482E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x480A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48BF PUSH1 0x25 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x48CA DUP3 PUSH2 0x4863 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48EE DUP2 PUSH2 0x48B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x492B PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4936 DUP3 PUSH2 0x48F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x495A DUP2 PUSH2 0x491E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4976 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x4983 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4990 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x499D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49DC PUSH1 0x19 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E7 DUP3 PUSH2 0x49A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A0B DUP2 PUSH2 0x49CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A48 PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A53 DUP3 PUSH2 0x4A12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A77 DUP2 PUSH2 0x4A3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x4A93 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x4AA0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4AAD PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4ABA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x4AC7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x4AD4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B15 PUSH1 0x1E DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B20 DUP3 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B44 DUP2 PUSH2 0x4B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230466C6173684D696E743A2077726F6E6720746F6B656E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B81 PUSH1 0x1B DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B8C DUP3 PUSH2 0x4B4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB0 DUP2 PUSH2 0x4B74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C13 PUSH1 0x26 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C1E DUP3 PUSH2 0x4BB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C42 DUP2 PUSH2 0x4C06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA5 PUSH1 0x24 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CB0 DUP3 PUSH2 0x4C49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CD4 DUP2 PUSH2 0x4C98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D37 PUSH1 0x22 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D42 DUP3 PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D66 DUP2 PUSH2 0x4D2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA3 PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DAE DUP3 PUSH2 0x4D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DD2 DUP2 PUSH2 0x4D96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E35 PUSH1 0x25 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E40 DUP3 PUSH2 0x4DD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E64 DUP2 PUSH2 0x4E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC7 PUSH1 0x23 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ED2 DUP3 PUSH2 0x4E6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EF6 DUP2 PUSH2 0x4EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F59 PUSH1 0x26 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F64 DUP3 PUSH2 0x4EFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F88 DUP2 PUSH2 0x4F4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC5 PUSH1 0x20 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FD0 DUP3 PUSH2 0x4F8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FF4 DUP2 PUSH2 0x4FB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206964206973203000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5031 PUSH1 0x16 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x503C DUP3 PUSH2 0x4FFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5060 DUP2 PUSH2 0x5024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206E6F6E6578697374656E74206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x509D PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x50A8 DUP3 PUSH2 0x5067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50CC DUP2 PUSH2 0x5090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512F PUSH1 0x26 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x513A DUP3 PUSH2 0x50D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x515E DUP2 PUSH2 0x5122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C1 PUSH1 0x2B DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x51CC DUP3 PUSH2 0x5165 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51F0 DUP2 PUSH2 0x51B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x520C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5219 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5226 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5233 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x5240 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3F5B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5284 DUP3 PUSH2 0x3D6D JUMP JUMPDEST SWAP2 POP PUSH2 0x528F DUP4 PUSH2 0x3D6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x529F JUMPI PUSH2 0x529E PUSH2 0x524A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E0 PUSH1 0x14 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x52EB DUP3 PUSH2 0x52AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x530F DUP2 PUSH2 0x52D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5372 PUSH1 0x30 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x537D DUP3 PUSH2 0x5316 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53A1 DUP2 PUSH2 0x5365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x53BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x53CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5407 PUSH1 0x10 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x5412 DUP3 PUSH2 0x53D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5436 DUP2 PUSH2 0x53FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547E PUSH1 0x2 DUP4 PUSH2 0x543D JUMP JUMPDEST SWAP2 POP PUSH2 0x5489 DUP3 PUSH2 0x5448 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54AF PUSH2 0x54AA DUP3 PUSH2 0x3ECD JUMP JUMPDEST PUSH2 0x5494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C0 DUP3 PUSH2 0x5471 JUMP JUMPDEST SWAP2 POP PUSH2 0x54CC DUP3 DUP6 PUSH2 0x549E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x54DC DUP3 DUP5 PUSH2 0x549E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5501 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x550E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3EA3 JUMP JUMPDEST PUSH2 0x551B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5528 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3ED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5596 PUSH1 0x18 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x55A1 DUP3 PUSH2 0x5560 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55C5 DUP2 PUSH2 0x5589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5602 PUSH1 0x1F DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x560D DUP3 PUSH2 0x55CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5631 DUP2 PUSH2 0x55F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5694 PUSH1 0x22 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x569F DUP3 PUSH2 0x5638 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56C3 DUP2 PUSH2 0x5687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5700 PUSH1 0x1F DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x570B DUP3 PUSH2 0x56CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x572F DUP2 PUSH2 0x56F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5792 PUSH1 0x21 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x579D DUP3 PUSH2 0x5736 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57C1 DUP2 PUSH2 0x5785 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5824 PUSH1 0x22 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x582F DUP3 PUSH2 0x57C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5853 DUP2 PUSH2 0x5817 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B6 PUSH1 0x27 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x58C1 DUP3 PUSH2 0x585A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58E5 DUP2 PUSH2 0x58A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH14 0x618D01F34491C16F320172C16517 0xAF 0xBF LOG3 0xAC PUSH9 0x853BE4D551EF1B59FC 0xB1 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"914:1894:25:-:0;;;1225:53;;;;;;;;;;1249:22;:20;;;:22;;:::i;:::-;914:1894;;5928:279:4;5996:13;;;;;;;;;;;5995:14;5987:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6082:15;6067:30;;:12;;;;;;;;;;:30;;;6063:138;;;6128:15;6113:12;;:30;;;;;;;;;;;;;;;;;;6162:28;6174:15;6162:28;;;;;;:::i;:::-;;;;;;;;6063:138;5928:279::o;7:169:27:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;914:1894:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_2801":{"entryPoint":2182,"id":2801,"parameterSlots":0,"returnSlots":1},"@_EIP712NameHash_4159":{"entryPoint":10115,"id":4159,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_4168":{"entryPoint":10126,"id":4168,"parameterSlots":0,"returnSlots":1},"@__EIP712_init_unchained_4092":{"entryPoint":11794,"id":4092,"parameterSlots":2,"returnSlots":0},"@__ERC20Burnable_init_1271":{"entryPoint":9071,"id":1271,"parameterSlots":0,"returnSlots":0},"@__ERC20FlashMint_init_1336":{"entryPoint":9637,"id":1336,"parameterSlots":0,"returnSlots":0},"@__ERC20Permit_init_2693":{"entryPoint":9411,"id":2693,"parameterSlots":1,"returnSlots":0},"@__ERC20Snapshot_init_1571":{"entryPoint":9152,"id":1571,"parameterSlots":0,"returnSlots":0},"@__ERC20Votes_init_1923":{"entryPoint":9556,"id":1923,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_610":{"entryPoint":8978,"id":610,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_628":{"entryPoint":11460,"id":628,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_26":{"entryPoint":9233,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_37":{"entryPoint":11589,"id":37,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_467":{"entryPoint":9322,"id":467,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_477":{"entryPoint":11686,"id":477,"parameterSlots":0,"returnSlots":0},"@_add_2585":{"entryPoint":13518,"id":2585,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1169":{"entryPoint":14887,"id":1169,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_2361":{"entryPoint":12845,"id":2361,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6737":{"entryPoint":10099,"id":6737,"parameterSlots":3,"returnSlots":0},"@_approve_1104":{"entryPoint":6226,"id":1104,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1158":{"entryPoint":14779,"id":1158,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1753":{"entryPoint":12659,"id":1753,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6716":{"entryPoint":10075,"id":6716,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_4134":{"entryPoint":10137,"id":4134,"parameterSlots":3,"returnSlots":1},"@_burn_1059":{"entryPoint":14259,"id":1059,"parameterSlots":2,"returnSlots":0},"@_burn_2331":{"entryPoint":10719,"id":2331,"parameterSlots":2,"returnSlots":0},"@_burn_6773":{"entryPoint":8100,"id":6773,"parameterSlots":2,"returnSlots":0},"@_checkOwner_68":{"entryPoint":7861,"id":68,"parameterSlots":0,"returnSlots":0},"@_checkpointsLookup_2189":{"entryPoint":7524,"id":2189,"parameterSlots":2,"returnSlots":1},"@_delegate_2400":{"entryPoint":8360,"id":2400,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_4107":{"entryPoint":7460,"id":4107,"parameterSlots":0,"returnSlots":1},"@_flashFeeReceiver_1431":{"entryPoint":8643,"id":1431,"parameterSlots":0,"returnSlots":1},"@_flashFee_1419":{"entryPoint":10067,"id":1419,"parameterSlots":2,"returnSlots":1},"@_getCurrentSnapshotId_1642":{"entryPoint":10750,"id":1642,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_4150":{"entryPoint":9903,"id":4150,"parameterSlots":1,"returnSlots":1},"@_lastSnapshotId_1896":{"entryPoint":15132,"id":1896,"parameterSlots":1,"returnSlots":1},"@_maxSupply_2276":{"entryPoint":13482,"id":2276,"parameterSlots":0,"returnSlots":1},"@_mint_2308":{"entryPoint":10577,"id":2308,"parameterSlots":2,"returnSlots":0},"@_mint_6755":{"entryPoint":8086,"id":6755,"parameterSlots":2,"returnSlots":0},"@_mint_987":{"entryPoint":13138,"id":987,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_2471":{"entryPoint":10953,"id":2471,"parameterSlots":3,"returnSlots":0},"@_msgSender_3339":{"entryPoint":6218,"id":3339,"parameterSlots":0,"returnSlots":1},"@_pause_541":{"entryPoint":9718,"id":541,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_514":{"entryPoint":11919,"id":514,"parameterSlots":0,"returnSlots":0},"@_requirePaused_525":{"entryPoint":10504,"id":525,"parameterSlots":0,"returnSlots":0},"@_snapshot_1631":{"entryPoint":9817,"id":1631,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1147":{"entryPoint":6685,"id":1147,"parameterSlots":3,"returnSlots":0},"@_subtract_2599":{"entryPoint":14723,"id":2599,"parameterSlots":2,"returnSlots":1},"@_throwError_3717":{"entryPoint":12293,"id":3717,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_125":{"entryPoint":8731,"id":125,"parameterSlots":1,"returnSlots":0},"@_transfer_930":{"entryPoint":6825,"id":930,"parameterSlots":3,"returnSlots":0},"@_unpause_557":{"entryPoint":7987,"id":557,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_2614":{"entryPoint":10445,"id":2614,"parameterSlots":2,"returnSlots":1},"@_updateAccountSnapshot_1823":{"entryPoint":14784,"id":1823,"parameterSlots":1,"returnSlots":0},"@_updateSnapshot_1871":{"entryPoint":15009,"id":1871,"parameterSlots":2,"returnSlots":0},"@_updateTotalSupplySnapshot_1833":{"entryPoint":14867,"id":1833,"parameterSlots":0,"returnSlots":0},"@_useNonce_2830":{"entryPoint":9972,"id":2830,"parameterSlots":1,"returnSlots":1},"@_valueAt_1808":{"entryPoint":8114,"id":1808,"parameterSlots":2,"returnSlots":2},"@_writeCheckpoint_2571":{"entryPoint":13540,"id":2571,"parameterSlots":3,"returnSlots":2},"@allowance_725":{"entryPoint":5678,"id":725,"parameterSlots":2,"returnSlots":1},"@approve_750":{"entryPoint":2081,"id":750,"parameterSlots":2,"returnSlots":1},"@average_4240":{"entryPoint":10466,"id":4240,"parameterSlots":2,"returnSlots":1},"@balanceOfAt_1671":{"entryPoint":2461,"id":1671,"parameterSlots":2,"returnSlots":1},"@balanceOf_682":{"entryPoint":3434,"id":682,"parameterSlots":1,"returnSlots":1},"@burnFrom_1311":{"entryPoint":3527,"id":1311,"parameterSlots":2,"returnSlots":0},"@burn_1290":{"entryPoint":2441,"id":1290,"parameterSlots":1,"returnSlots":0},"@checkpoints_1971":{"entryPoint":5813,"id":1971,"parameterSlots":2,"returnSlots":1},"@current_3372":{"entryPoint":8929,"id":3372,"parameterSlots":1,"returnSlots":1},"@decimals_658":{"entryPoint":2173,"id":658,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_853":{"entryPoint":4812,"id":853,"parameterSlots":2,"returnSlots":1},"@delegateBySig_2263":{"entryPoint":4966,"id":2263,"parameterSlots":6,"returnSlots":0},"@delegate_2203":{"entryPoint":2679,"id":2203,"parameterSlots":1,"returnSlots":0},"@delegates_2002":{"entryPoint":2573,"id":2002,"parameterSlots":1,"returnSlots":1},"@findUpperBound_3248":{"entryPoint":10767,"id":3248,"parameterSlots":2,"returnSlots":1},"@flashFee_1402":{"entryPoint":5548,"id":1402,"parameterSlots":2,"returnSlots":1},"@flashLoan_1548":{"entryPoint":2722,"id":1548,"parameterSlots":5,"returnSlots":1},"@getPastTotalSupply_2083":{"entryPoint":4236,"id":2083,"parameterSlots":1,"returnSlots":1},"@getPastVotes_2060":{"entryPoint":2252,"id":2060,"parameterSlots":2,"returnSlots":1},"@getUint256Slot_3487":{"entryPoint":14999,"id":3487,"parameterSlots":1,"returnSlots":1},"@getVotes_2033":{"entryPoint":4537,"id":2033,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_812":{"entryPoint":2197,"id":812,"parameterSlots":2,"returnSlots":1},"@increment_3386":{"entryPoint":11993,"id":3386,"parameterSlots":1,"returnSlots":0},"@initialize_6651":{"entryPoint":3640,"id":6651,"parameterSlots":0,"returnSlots":0},"@isContract_2890":{"entryPoint":8943,"id":2890,"parameterSlots":1,"returnSlots":1},"@log2_4711":{"entryPoint":12888,"id":4711,"parameterSlots":1,"returnSlots":1},"@maxFlashLoan_1375":{"entryPoint":3230,"id":1375,"parameterSlots":1,"returnSlots":1},"@min_4217":{"entryPoint":13113,"id":4217,"parameterSlots":2,"returnSlots":1},"@mint_6693":{"entryPoint":2419,"id":6693,"parameterSlots":2,"returnSlots":0},"@name_638":{"entryPoint":1935,"id":638,"parameterSlots":0,"returnSlots":1},"@nonces_2790":{"entryPoint":3559,"id":2790,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1988":{"entryPoint":3349,"id":1988,"parameterSlots":1,"returnSlots":1},"@owner_54":{"entryPoint":4194,"id":54,"parameterSlots":0,"returnSlots":1},"@pause_6669":{"entryPoint":4176,"id":6669,"parameterSlots":0,"returnSlots":0},"@paused_502":{"entryPoint":2699,"id":502,"parameterSlots":0,"returnSlots":1},"@permit_2774":{"entryPoint":5226,"id":2774,"parameterSlots":7,"returnSlots":0},"@recover_3964":{"entryPoint":9929,"id":3964,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_82":{"entryPoint":3507,"id":82,"parameterSlots":0,"returnSlots":0},"@snapshot_6660":{"entryPoint":4469,"id":6660,"parameterSlots":0,"returnSlots":0},"@sqrt_4543":{"entryPoint":10195,"id":4543,"parameterSlots":1,"returnSlots":1},"@symbol_648":{"entryPoint":4323,"id":648,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_4023":{"entryPoint":12015,"id":4023,"parameterSlots":2,"returnSlots":1},"@toUint224_5142":{"entryPoint":14892,"id":5142,"parameterSlots":1,"returnSlots":1},"@toUint32_5742":{"entryPoint":8648,"id":5742,"parameterSlots":1,"returnSlots":1},"@totalSupplyAt_1695":{"entryPoint":4488,"id":1695,"parameterSlots":1,"returnSlots":1},"@totalSupply_668":{"entryPoint":2116,"id":668,"parameterSlots":0,"returnSlots":1},"@transferFrom_783":{"entryPoint":2126,"id":783,"parameterSlots":3,"returnSlots":1},"@transferOwnership_105":{"entryPoint":6086,"id":105,"parameterSlots":1,"returnSlots":0},"@transfer_707":{"entryPoint":4931,"id":707,"parameterSlots":2,"returnSlots":1},"@tryRecover_3931":{"entryPoint":12066,"id":3931,"parameterSlots":4,"returnSlots":2},"@unpause_6678":{"entryPoint":2401,"id":6678,"parameterSlots":0,"returnSlots":0},"@unsafeAccess_3311":{"entryPoint":14745,"id":3311,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":16685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":17978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":16338,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_contract$_IERC3156FlashBorrowerUpgradeable_$229":{"entryPoint":16302,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":17096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":16641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":16174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":17009,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":15939,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":16847,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":15779,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":16706,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":17117,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":17999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC3156FlashBorrowerUpgradeable_$229t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":16424,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":16129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":16219,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15855,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":16087,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":21662,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":17841,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":18442,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":21897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack":{"entryPoint":20624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":20154,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack":{"entryPoint":17596,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":21203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":18718,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":22551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":22005,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":18895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":19462,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":19754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":19862,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":19003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":20300,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":22151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb_to_t_string_memory_ptr_fromStack":{"entryPoint":18123,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":21498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":18321,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30_to_t_string_memory_ptr_fromStack":{"entryPoint":19316,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":19208,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":21349,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":20408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":22697,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9_to_t_string_memory_ptr_fromStack":{"entryPoint":17742,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":22405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":20008,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":20770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":19608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":20916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack":{"entryPoint":20516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":18610,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":22259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$1934_memory_ptr_to_t_struct$_Checkpoint_$1934_memory_ptr_fromStack":{"entryPoint":17251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":17236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15897,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":17181,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":16576,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":16035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":21685,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":16234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17886,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":16102,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":19070,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":18785,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":20983,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":21740,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":18457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17631,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18753,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22040,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18930,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19789,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19038,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20335,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22186,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18356,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19243,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17777,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1934_memory_ptr__to_t_struct$_Checkpoint_$1934_memory_ptr__fromStack_reversed":{"entryPoint":17298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":15912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21416,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":16591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":16050,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15434,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":17809,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15445,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21565,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17469,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":21113,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18190,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":15663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":15843,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":16077,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC3156FlashBorrowerUpgradeable_$229":{"entryPoint":16261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":18388,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15631,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":17196,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":16560,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":16022,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":18408,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":17826,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":15462,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":17372,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":18398,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":21652,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17422,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":21066,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":21809,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":17325,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18484,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":16328,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":16323,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":16333,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":15626,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":15621,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":15513,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":21856,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940":{"entryPoint":20583,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":20075,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d":{"entryPoint":17555,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":21162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":18677,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":22472,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":21964,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":18854,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":19383,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":19675,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":21576,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":19821,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":18962,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":20221,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":22072,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb":{"entryPoint":18044,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":21457,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":18242,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30":{"entryPoint":19275,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":19167,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":21270,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":20367,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":22618,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9":{"entryPoint":17663,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":22326,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":19929,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":20691,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":19529,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":20837,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6":{"entryPoint":20475,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":18531,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":22218,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15681,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":16662,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC3156FlashBorrowerUpgradeable_$229":{"entryPoint":16279,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15735,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":17073,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":16618,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:56100:27","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:27","statements":[{"nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:27"},"nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:27"},"nodeType":"YulFunctionCall","src":"218:19:27"},"nodeType":"YulExpressionStatement","src":"218:19:27"},{"nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:27"},"nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nodeType":"YulBlock","src":"336:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:27"},"nodeType":"YulFunctionCall","src":"436:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:27"},"nodeType":"YulFunctionCall","src":"455:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:27"},"nodeType":"YulFunctionCall","src":"449:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:27"},"nodeType":"YulFunctionCall","src":"429:39:27"},"nodeType":"YulExpressionStatement","src":"429:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:27"},"nodeType":"YulFunctionCall","src":"373:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:27","statements":[{"nodeType":"YulAssignment","src":"389:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:27"},"nodeType":"YulFunctionCall","src":"394:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:27","statements":[]},"src":"365:113:27"},{"body":{"nodeType":"YulBlock","src":"512:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:27"},"nodeType":"YulFunctionCall","src":"558:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:27"},"nodeType":"YulFunctionCall","src":"551:27:27"},"nodeType":"YulExpressionStatement","src":"551:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:27"},"nodeType":"YulFunctionCall","src":"490:13:27"},"nodeType":"YulIf","src":"487:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:27","type":""}],"src":"287:307:27"},{"body":{"nodeType":"YulBlock","src":"648:54:27","statements":[{"nodeType":"YulAssignment","src":"658:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:27"},"nodeType":"YulFunctionCall","src":"672:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:27"},"nodeType":"YulFunctionCall","src":"688:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:27","type":""}],"src":"600:102:27"},{"body":{"nodeType":"YulBlock","src":"800:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:27"},"nodeType":"YulFunctionCall","src":"824:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:27","type":""}]},{"nodeType":"YulAssignment","src":"872:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:27"},"nodeType":"YulFunctionCall","src":"879:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:27"},"nodeType":"YulFunctionCall","src":"981:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:27"},"nodeType":"YulFunctionCall","src":"959:52:27"},"nodeType":"YulExpressionStatement","src":"959:52:27"},{"nodeType":"YulAssignment","src":"1020:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:27"},"nodeType":"YulFunctionCall","src":"1036:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:27"},"nodeType":"YulFunctionCall","src":"1027:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:27","type":""}],"src":"708:364:27"},{"body":{"nodeType":"YulBlock","src":"1196:195:27","statements":[{"nodeType":"YulAssignment","src":"1206:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:27"},"nodeType":"YulFunctionCall","src":"1214:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:27"},"nodeType":"YulFunctionCall","src":"1249:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:27"},"nodeType":"YulFunctionCall","src":"1268:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:27"},"nodeType":"YulFunctionCall","src":"1242:47:27"},"nodeType":"YulExpressionStatement","src":"1242:47:27"},{"nodeType":"YulAssignment","src":"1298:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:27"},"nodeType":"YulFunctionCall","src":"1306:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:27","type":""}],"src":"1078:313:27"},{"body":{"nodeType":"YulBlock","src":"1437:35:27","statements":[{"nodeType":"YulAssignment","src":"1447:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:27"},"nodeType":"YulFunctionCall","src":"1457:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:27","type":""}],"src":"1397:75:27"},{"body":{"nodeType":"YulBlock","src":"1567:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:27"},"nodeType":"YulFunctionCall","src":"1577:12:27"},"nodeType":"YulExpressionStatement","src":"1577:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:27"},{"body":{"nodeType":"YulBlock","src":"1690:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:27"},"nodeType":"YulFunctionCall","src":"1700:12:27"},"nodeType":"YulExpressionStatement","src":"1700:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:27"},{"body":{"nodeType":"YulBlock","src":"1769:81:27","statements":[{"nodeType":"YulAssignment","src":"1779:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:27"},"nodeType":"YulFunctionCall","src":"1790:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:27","type":""}],"src":"1724:126:27"},{"body":{"nodeType":"YulBlock","src":"1901:51:27","statements":[{"nodeType":"YulAssignment","src":"1911:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:27"},"nodeType":"YulFunctionCall","src":"1922:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:27","type":""}],"src":"1856:96:27"},{"body":{"nodeType":"YulBlock","src":"2001:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:27"},"nodeType":"YulFunctionCall","src":"2060:12:27"},"nodeType":"YulExpressionStatement","src":"2060:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:27"},"nodeType":"YulFunctionCall","src":"2031:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:27"},"nodeType":"YulFunctionCall","src":"2021:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:27"},"nodeType":"YulFunctionCall","src":"2014:43:27"},"nodeType":"YulIf","src":"2011:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:27","type":""}],"src":"1958:122:27"},{"body":{"nodeType":"YulBlock","src":"2138:87:27","statements":[{"nodeType":"YulAssignment","src":"2148:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:27"},"nodeType":"YulFunctionCall","src":"2157:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:27"},"nodeType":"YulFunctionCall","src":"2186:33:27"},"nodeType":"YulExpressionStatement","src":"2186:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:27","type":""}],"src":"2086:139:27"},{"body":{"nodeType":"YulBlock","src":"2276:32:27","statements":[{"nodeType":"YulAssignment","src":"2286:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:27","type":""}],"src":"2231:77:27"},{"body":{"nodeType":"YulBlock","src":"2357:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:27"},"nodeType":"YulFunctionCall","src":"2416:12:27"},"nodeType":"YulExpressionStatement","src":"2416:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:27"},"nodeType":"YulFunctionCall","src":"2387:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:27"},"nodeType":"YulFunctionCall","src":"2377:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:27"},"nodeType":"YulFunctionCall","src":"2370:43:27"},"nodeType":"YulIf","src":"2367:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:27","type":""}],"src":"2314:122:27"},{"body":{"nodeType":"YulBlock","src":"2494:87:27","statements":[{"nodeType":"YulAssignment","src":"2504:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:27"},"nodeType":"YulFunctionCall","src":"2513:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:27"},"nodeType":"YulFunctionCall","src":"2542:33:27"},"nodeType":"YulExpressionStatement","src":"2542:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:27","type":""}],"src":"2442:139:27"},{"body":{"nodeType":"YulBlock","src":"2670:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:27"},"nodeType":"YulFunctionCall","src":"2718:79:27"},"nodeType":"YulExpressionStatement","src":"2718:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:27"},"nodeType":"YulFunctionCall","src":"2687:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:27"},"nodeType":"YulFunctionCall","src":"2683:32:27"},"nodeType":"YulIf","src":"2680:119:27"},{"nodeType":"YulBlock","src":"2809:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:27"},"nodeType":"YulFunctionCall","src":"2884:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:27"},"nodeType":"YulFunctionCall","src":"2863:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:27"}]}]},{"nodeType":"YulBlock","src":"2936:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:27"},"nodeType":"YulFunctionCall","src":"3012:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:27"},"nodeType":"YulFunctionCall","src":"2991:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:27","type":""}],"src":"2587:474:27"},{"body":{"nodeType":"YulBlock","src":"3109:48:27","statements":[{"nodeType":"YulAssignment","src":"3119:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:27"},"nodeType":"YulFunctionCall","src":"3137:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:27"},"nodeType":"YulFunctionCall","src":"3130:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:27","type":""}],"src":"3067:90:27"},{"body":{"nodeType":"YulBlock","src":"3222:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:27"},"nodeType":"YulFunctionCall","src":"3244:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:27"},"nodeType":"YulFunctionCall","src":"3232:34:27"},"nodeType":"YulExpressionStatement","src":"3232:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:27","type":""}],"src":"3163:109:27"},{"body":{"nodeType":"YulBlock","src":"3370:118:27","statements":[{"nodeType":"YulAssignment","src":"3380:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:27"},"nodeType":"YulFunctionCall","src":"3388:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:27"},"nodeType":"YulFunctionCall","src":"3463:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:27"},"nodeType":"YulFunctionCall","src":"3416:65:27"},"nodeType":"YulExpressionStatement","src":"3416:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:27","type":""}],"src":"3278:210:27"},{"body":{"nodeType":"YulBlock","src":"3559:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:27"},"nodeType":"YulFunctionCall","src":"3581:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:27"},"nodeType":"YulFunctionCall","src":"3569:37:27"},"nodeType":"YulExpressionStatement","src":"3569:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:27","type":""}],"src":"3494:118:27"},{"body":{"nodeType":"YulBlock","src":"3716:124:27","statements":[{"nodeType":"YulAssignment","src":"3726:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:27"},"nodeType":"YulFunctionCall","src":"3734:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:27"},"nodeType":"YulFunctionCall","src":"3815:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:27"},"nodeType":"YulFunctionCall","src":"3762:71:27"},"nodeType":"YulExpressionStatement","src":"3762:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:27","type":""}],"src":"3618:222:27"},{"body":{"nodeType":"YulBlock","src":"3946:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:27"},"nodeType":"YulFunctionCall","src":"3994:79:27"},"nodeType":"YulExpressionStatement","src":"3994:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:27"},"nodeType":"YulFunctionCall","src":"3963:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:27"},"nodeType":"YulFunctionCall","src":"3959:32:27"},"nodeType":"YulIf","src":"3956:119:27"},{"nodeType":"YulBlock","src":"4085:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:27"},"nodeType":"YulFunctionCall","src":"4160:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:27"},"nodeType":"YulFunctionCall","src":"4139:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:27"}]}]},{"nodeType":"YulBlock","src":"4212:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:27"},"nodeType":"YulFunctionCall","src":"4288:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:27"},"nodeType":"YulFunctionCall","src":"4267:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:27"}]}]},{"nodeType":"YulBlock","src":"4340:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:27"},"nodeType":"YulFunctionCall","src":"4416:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:27"},"nodeType":"YulFunctionCall","src":"4395:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:27","type":""}],"src":"3846:619:27"},{"body":{"nodeType":"YulBlock","src":"4514:43:27","statements":[{"nodeType":"YulAssignment","src":"4524:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:27"},"nodeType":"YulFunctionCall","src":"4535:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:27","type":""}],"src":"4471:86:27"},{"body":{"nodeType":"YulBlock","src":"4624:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:27"},"nodeType":"YulFunctionCall","src":"4646:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:27"},"nodeType":"YulFunctionCall","src":"4634:35:27"},"nodeType":"YulExpressionStatement","src":"4634:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:27","type":""}],"src":"4563:112:27"},{"body":{"nodeType":"YulBlock","src":"4775:120:27","statements":[{"nodeType":"YulAssignment","src":"4785:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:27"},"nodeType":"YulFunctionCall","src":"4793:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:27"},"nodeType":"YulFunctionCall","src":"4870:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:27"},"nodeType":"YulFunctionCall","src":"4821:67:27"},"nodeType":"YulExpressionStatement","src":"4821:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:27","type":""}],"src":"4681:214:27"},{"body":{"nodeType":"YulBlock","src":"4946:32:27","statements":[{"nodeType":"YulAssignment","src":"4956:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4967:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4956:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4938:7:27","type":""}],"src":"4901:77:27"},{"body":{"nodeType":"YulBlock","src":"5049:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5066:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5071:17:27"},"nodeType":"YulFunctionCall","src":"5071:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5059:6:27"},"nodeType":"YulFunctionCall","src":"5059:37:27"},"nodeType":"YulExpressionStatement","src":"5059:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5037:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5044:3:27","type":""}],"src":"4984:118:27"},{"body":{"nodeType":"YulBlock","src":"5206:124:27","statements":[{"nodeType":"YulAssignment","src":"5216:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5228:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5224:3:27"},"nodeType":"YulFunctionCall","src":"5224:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5216:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5296:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5309:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:27"},"nodeType":"YulFunctionCall","src":"5305:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5252:43:27"},"nodeType":"YulFunctionCall","src":"5252:71:27"},"nodeType":"YulExpressionStatement","src":"5252:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5178:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5190:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5201:4:27","type":""}],"src":"5108:222:27"},{"body":{"nodeType":"YulBlock","src":"5402:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5448:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5450:77:27"},"nodeType":"YulFunctionCall","src":"5450:79:27"},"nodeType":"YulExpressionStatement","src":"5450:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5423:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5419:3:27"},"nodeType":"YulFunctionCall","src":"5419:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5444:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5415:3:27"},"nodeType":"YulFunctionCall","src":"5415:32:27"},"nodeType":"YulIf","src":"5412:119:27"},{"nodeType":"YulBlock","src":"5541:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5556:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5570:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5560:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5585:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5631:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:27"},"nodeType":"YulFunctionCall","src":"5616:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5595:20:27"},"nodeType":"YulFunctionCall","src":"5595:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5372:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5383:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5395:6:27","type":""}],"src":"5336:329:27"},{"body":{"nodeType":"YulBlock","src":"5737:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5783:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5785:77:27"},"nodeType":"YulFunctionCall","src":"5785:79:27"},"nodeType":"YulExpressionStatement","src":"5785:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5758:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5754:3:27"},"nodeType":"YulFunctionCall","src":"5754:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5779:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5750:3:27"},"nodeType":"YulFunctionCall","src":"5750:32:27"},"nodeType":"YulIf","src":"5747:119:27"},{"nodeType":"YulBlock","src":"5876:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5891:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5905:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5895:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5920:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5955:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5966:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:27"},"nodeType":"YulFunctionCall","src":"5951:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5975:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5930:20:27"},"nodeType":"YulFunctionCall","src":"5930:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5920:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5707:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5718:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5730:6:27","type":""}],"src":"5671:329:27"},{"body":{"nodeType":"YulBlock","src":"6071:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6088:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6111:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6093:17:27"},"nodeType":"YulFunctionCall","src":"6093:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6081:6:27"},"nodeType":"YulFunctionCall","src":"6081:37:27"},"nodeType":"YulExpressionStatement","src":"6081:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6059:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6066:3:27","type":""}],"src":"6006:118:27"},{"body":{"nodeType":"YulBlock","src":"6228:124:27","statements":[{"nodeType":"YulAssignment","src":"6238:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6250:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6261:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6246:3:27"},"nodeType":"YulFunctionCall","src":"6246:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6238:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6318:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6331:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6342:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6327:3:27"},"nodeType":"YulFunctionCall","src":"6327:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6274:43:27"},"nodeType":"YulFunctionCall","src":"6274:71:27"},"nodeType":"YulExpressionStatement","src":"6274:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6200:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6212:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6223:4:27","type":""}],"src":"6130:222:27"},{"body":{"nodeType":"YulBlock","src":"6443:51:27","statements":[{"nodeType":"YulAssignment","src":"6453:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6482:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6464:17:27"},"nodeType":"YulFunctionCall","src":"6464:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6453:7:27"}]}]},"name":"cleanup_t_contract$_IERC3156FlashBorrowerUpgradeable_$229","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6425:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6435:7:27","type":""}],"src":"6358:136:27"},{"body":{"nodeType":"YulBlock","src":"6583:119:27","statements":[{"body":{"nodeType":"YulBlock","src":"6680:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6689:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6692:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6682:6:27"},"nodeType":"YulFunctionCall","src":"6682:12:27"},"nodeType":"YulExpressionStatement","src":"6682:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6606:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6671:5:27"}],"functionName":{"name":"cleanup_t_contract$_IERC3156FlashBorrowerUpgradeable_$229","nodeType":"YulIdentifier","src":"6613:57:27"},"nodeType":"YulFunctionCall","src":"6613:64:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6603:2:27"},"nodeType":"YulFunctionCall","src":"6603:75:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6596:6:27"},"nodeType":"YulFunctionCall","src":"6596:83:27"},"nodeType":"YulIf","src":"6593:103:27"}]},"name":"validator_revert_t_contract$_IERC3156FlashBorrowerUpgradeable_$229","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6576:5:27","type":""}],"src":"6500:202:27"},{"body":{"nodeType":"YulBlock","src":"6800:127:27","statements":[{"nodeType":"YulAssignment","src":"6810:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6832:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6819:12:27"},"nodeType":"YulFunctionCall","src":"6819:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6810:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6915:5:27"}],"functionName":{"name":"validator_revert_t_contract$_IERC3156FlashBorrowerUpgradeable_$229","nodeType":"YulIdentifier","src":"6848:66:27"},"nodeType":"YulFunctionCall","src":"6848:73:27"},"nodeType":"YulExpressionStatement","src":"6848:73:27"}]},"name":"abi_decode_t_contract$_IERC3156FlashBorrowerUpgradeable_$229","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6778:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"6786:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6794:5:27","type":""}],"src":"6708:219:27"},{"body":{"nodeType":"YulBlock","src":"7022:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7039:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7042:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7032:6:27"},"nodeType":"YulFunctionCall","src":"7032:12:27"},"nodeType":"YulExpressionStatement","src":"7032:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6933:117:27"},{"body":{"nodeType":"YulBlock","src":"7145:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7162:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7165:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7155:6:27"},"nodeType":"YulFunctionCall","src":"7155:12:27"},"nodeType":"YulExpressionStatement","src":"7155:12:27"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7056:117:27"},{"body":{"nodeType":"YulBlock","src":"7268:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7285:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7288:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7278:6:27"},"nodeType":"YulFunctionCall","src":"7278:12:27"},"nodeType":"YulExpressionStatement","src":"7278:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7179:117:27"},{"body":{"nodeType":"YulBlock","src":"7389:478:27","statements":[{"body":{"nodeType":"YulBlock","src":"7438:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7440:77:27"},"nodeType":"YulFunctionCall","src":"7440:79:27"},"nodeType":"YulExpressionStatement","src":"7440:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7417:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:27"},"nodeType":"YulFunctionCall","src":"7413:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"7432:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7409:3:27"},"nodeType":"YulFunctionCall","src":"7409:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7402:6:27"},"nodeType":"YulFunctionCall","src":"7402:35:27"},"nodeType":"YulIf","src":"7399:122:27"},{"nodeType":"YulAssignment","src":"7530:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7553:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7540:12:27"},"nodeType":"YulFunctionCall","src":"7540:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7530:6:27"}]},{"body":{"nodeType":"YulBlock","src":"7603:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"7605:77:27"},"nodeType":"YulFunctionCall","src":"7605:79:27"},"nodeType":"YulExpressionStatement","src":"7605:79:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7575:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7583:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7572:2:27"},"nodeType":"YulFunctionCall","src":"7572:30:27"},"nodeType":"YulIf","src":"7569:117:27"},{"nodeType":"YulAssignment","src":"7695:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7711:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7719:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7707:3:27"},"nodeType":"YulFunctionCall","src":"7707:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7695:8:27"}]},{"body":{"nodeType":"YulBlock","src":"7778:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7780:77:27"},"nodeType":"YulFunctionCall","src":"7780:79:27"},"nodeType":"YulExpressionStatement","src":"7780:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7743:8:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7757:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7765:4:27","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7753:3:27"},"nodeType":"YulFunctionCall","src":"7753:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:27"},"nodeType":"YulFunctionCall","src":"7739:32:27"},{"name":"end","nodeType":"YulIdentifier","src":"7773:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7736:2:27"},"nodeType":"YulFunctionCall","src":"7736:41:27"},"nodeType":"YulIf","src":"7733:128:27"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7356:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"7364:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7372:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"7382:6:27","type":""}],"src":"7315:552:27"},{"body":{"nodeType":"YulBlock","src":"8049:867:27","statements":[{"body":{"nodeType":"YulBlock","src":"8096:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8098:77:27"},"nodeType":"YulFunctionCall","src":"8098:79:27"},"nodeType":"YulExpressionStatement","src":"8098:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8070:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8079:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8066:3:27"},"nodeType":"YulFunctionCall","src":"8066:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"8091:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8062:3:27"},"nodeType":"YulFunctionCall","src":"8062:33:27"},"nodeType":"YulIf","src":"8059:120:27"},{"nodeType":"YulBlock","src":"8189:157:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8204:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8218:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8208:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8233:103:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8308:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8319:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:27"},"nodeType":"YulFunctionCall","src":"8304:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8328:7:27"}],"functionName":{"name":"abi_decode_t_contract$_IERC3156FlashBorrowerUpgradeable_$229","nodeType":"YulIdentifier","src":"8243:60:27"},"nodeType":"YulFunctionCall","src":"8243:93:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8233:6:27"}]}]},{"nodeType":"YulBlock","src":"8356:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8371:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8385:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8375:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8401:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8436:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8447:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8432:3:27"},"nodeType":"YulFunctionCall","src":"8432:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8456:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8411:20:27"},"nodeType":"YulFunctionCall","src":"8411:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8401:6:27"}]}]},{"nodeType":"YulBlock","src":"8484:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8499:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8513:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8503:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8529:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8564:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8575:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:27"},"nodeType":"YulFunctionCall","src":"8560:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8584:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8539:20:27"},"nodeType":"YulFunctionCall","src":"8539:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8529:6:27"}]}]},{"nodeType":"YulBlock","src":"8612:297:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8627:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8658:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8669:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8654:3:27"},"nodeType":"YulFunctionCall","src":"8654:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8641:12:27"},"nodeType":"YulFunctionCall","src":"8641:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8631:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8720:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8722:77:27"},"nodeType":"YulFunctionCall","src":"8722:79:27"},"nodeType":"YulExpressionStatement","src":"8722:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8692:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8700:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8689:2:27"},"nodeType":"YulFunctionCall","src":"8689:30:27"},"nodeType":"YulIf","src":"8686:117:27"},{"nodeType":"YulAssignment","src":"8817:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8871:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8882:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8867:3:27"},"nodeType":"YulFunctionCall","src":"8867:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8891:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8835:31:27"},"nodeType":"YulFunctionCall","src":"8835:64:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8817:6:27"},{"name":"value4","nodeType":"YulIdentifier","src":"8825:6:27"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC3156FlashBorrowerUpgradeable_$229t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7987:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7998:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8010:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8018:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8026:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8034:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8042:6:27","type":""}],"src":"7873:1043:27"},{"body":{"nodeType":"YulBlock","src":"8966:49:27","statements":[{"nodeType":"YulAssignment","src":"8976:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8991:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8998:10:27","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8987:3:27"},"nodeType":"YulFunctionCall","src":"8987:22:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8976:7:27"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8948:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8958:7:27","type":""}],"src":"8922:93:27"},{"body":{"nodeType":"YulBlock","src":"9084:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9101:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9123:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"9106:16:27"},"nodeType":"YulFunctionCall","src":"9106:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9094:6:27"},"nodeType":"YulFunctionCall","src":"9094:36:27"},"nodeType":"YulExpressionStatement","src":"9094:36:27"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9072:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9079:3:27","type":""}],"src":"9021:115:27"},{"body":{"nodeType":"YulBlock","src":"9238:122:27","statements":[{"nodeType":"YulAssignment","src":"9248:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9260:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9271:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9256:3:27"},"nodeType":"YulFunctionCall","src":"9256:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9248:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9326:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9339:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9350:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9335:3:27"},"nodeType":"YulFunctionCall","src":"9335:17:27"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"9284:41:27"},"nodeType":"YulFunctionCall","src":"9284:69:27"},"nodeType":"YulExpressionStatement","src":"9284:69:27"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9210:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9222:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9233:4:27","type":""}],"src":"9142:218:27"},{"body":{"nodeType":"YulBlock","src":"9407:77:27","statements":[{"body":{"nodeType":"YulBlock","src":"9462:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9471:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9474:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9464:6:27"},"nodeType":"YulFunctionCall","src":"9464:12:27"},"nodeType":"YulExpressionStatement","src":"9464:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9430:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9453:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"9437:15:27"},"nodeType":"YulFunctionCall","src":"9437:22:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9427:2:27"},"nodeType":"YulFunctionCall","src":"9427:33:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9420:6:27"},"nodeType":"YulFunctionCall","src":"9420:41:27"},"nodeType":"YulIf","src":"9417:61:27"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9400:5:27","type":""}],"src":"9366:118:27"},{"body":{"nodeType":"YulBlock","src":"9540:85:27","statements":[{"nodeType":"YulAssignment","src":"9550:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9572:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9559:12:27"},"nodeType":"YulFunctionCall","src":"9559:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9550:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9613:5:27"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"9588:24:27"},"nodeType":"YulFunctionCall","src":"9588:31:27"},"nodeType":"YulExpressionStatement","src":"9588:31:27"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9518:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"9526:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9534:5:27","type":""}],"src":"9490:135:27"},{"body":{"nodeType":"YulBlock","src":"9674:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"9731:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9740:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9743:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9733:6:27"},"nodeType":"YulFunctionCall","src":"9733:12:27"},"nodeType":"YulExpressionStatement","src":"9733:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9697:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9722:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9704:17:27"},"nodeType":"YulFunctionCall","src":"9704:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9694:2:27"},"nodeType":"YulFunctionCall","src":"9694:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9687:6:27"},"nodeType":"YulFunctionCall","src":"9687:43:27"},"nodeType":"YulIf","src":"9684:63:27"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9667:5:27","type":""}],"src":"9631:122:27"},{"body":{"nodeType":"YulBlock","src":"9811:87:27","statements":[{"nodeType":"YulAssignment","src":"9821:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9843:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9830:12:27"},"nodeType":"YulFunctionCall","src":"9830:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9821:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9886:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9859:26:27"},"nodeType":"YulFunctionCall","src":"9859:33:27"},"nodeType":"YulExpressionStatement","src":"9859:33:27"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9789:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"9797:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9805:5:27","type":""}],"src":"9759:139:27"},{"body":{"nodeType":"YulBlock","src":"10053:904:27","statements":[{"body":{"nodeType":"YulBlock","src":"10100:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10102:77:27"},"nodeType":"YulFunctionCall","src":"10102:79:27"},"nodeType":"YulExpressionStatement","src":"10102:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10074:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10083:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10070:3:27"},"nodeType":"YulFunctionCall","src":"10070:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"10095:3:27","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10066:3:27"},"nodeType":"YulFunctionCall","src":"10066:33:27"},"nodeType":"YulIf","src":"10063:120:27"},{"nodeType":"YulBlock","src":"10193:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10208:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10222:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10212:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10237:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10272:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10283:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10268:3:27"},"nodeType":"YulFunctionCall","src":"10268:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10292:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10247:20:27"},"nodeType":"YulFunctionCall","src":"10247:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10237:6:27"}]}]},{"nodeType":"YulBlock","src":"10320:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10335:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10349:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10339:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10365:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10400:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10411:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10396:3:27"},"nodeType":"YulFunctionCall","src":"10396:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10420:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10375:20:27"},"nodeType":"YulFunctionCall","src":"10375:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10365:6:27"}]}]},{"nodeType":"YulBlock","src":"10448:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10463:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10477:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10467:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10493:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10528:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10539:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10524:3:27"},"nodeType":"YulFunctionCall","src":"10524:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10548:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10503:20:27"},"nodeType":"YulFunctionCall","src":"10503:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10493:6:27"}]}]},{"nodeType":"YulBlock","src":"10576:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10591:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10605:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10595:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10621:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10654:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10665:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10650:3:27"},"nodeType":"YulFunctionCall","src":"10650:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10674:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10631:18:27"},"nodeType":"YulFunctionCall","src":"10631:51:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10621:6:27"}]}]},{"nodeType":"YulBlock","src":"10702:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10717:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10731:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10721:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10748:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10783:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10794:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10779:3:27"},"nodeType":"YulFunctionCall","src":"10779:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10803:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10758:20:27"},"nodeType":"YulFunctionCall","src":"10758:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10748:6:27"}]}]},{"nodeType":"YulBlock","src":"10831:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10846:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10860:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10850:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10877:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10912:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10923:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:27"},"nodeType":"YulFunctionCall","src":"10908:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10932:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10887:20:27"},"nodeType":"YulFunctionCall","src":"10887:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10877:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9983:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9994:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10006:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10014:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10022:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10030:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10038:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10046:6:27","type":""}],"src":"9904:1053:27"},{"body":{"nodeType":"YulBlock","src":"11129:1033:27","statements":[{"body":{"nodeType":"YulBlock","src":"11176:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11178:77:27"},"nodeType":"YulFunctionCall","src":"11178:79:27"},"nodeType":"YulExpressionStatement","src":"11178:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11150:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11159:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11146:3:27"},"nodeType":"YulFunctionCall","src":"11146:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"11171:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11142:3:27"},"nodeType":"YulFunctionCall","src":"11142:33:27"},"nodeType":"YulIf","src":"11139:120:27"},{"nodeType":"YulBlock","src":"11269:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11284:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11298:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11288:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11313:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11348:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11359:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11344:3:27"},"nodeType":"YulFunctionCall","src":"11344:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11368:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11323:20:27"},"nodeType":"YulFunctionCall","src":"11323:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11313:6:27"}]}]},{"nodeType":"YulBlock","src":"11396:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11411:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11425:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11415:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11441:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11476:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11487:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11472:3:27"},"nodeType":"YulFunctionCall","src":"11472:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11496:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11451:20:27"},"nodeType":"YulFunctionCall","src":"11451:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11441:6:27"}]}]},{"nodeType":"YulBlock","src":"11524:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11539:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11553:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11543:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11569:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11604:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11615:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:27"},"nodeType":"YulFunctionCall","src":"11600:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11624:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11579:20:27"},"nodeType":"YulFunctionCall","src":"11579:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11569:6:27"}]}]},{"nodeType":"YulBlock","src":"11652:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11667:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11681:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11671:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11697:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11732:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11743:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11728:3:27"},"nodeType":"YulFunctionCall","src":"11728:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11752:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11707:20:27"},"nodeType":"YulFunctionCall","src":"11707:53:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11697:6:27"}]}]},{"nodeType":"YulBlock","src":"11780:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11795:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11809:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11799:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11826:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11859:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11870:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11855:3:27"},"nodeType":"YulFunctionCall","src":"11855:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11879:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"11836:18:27"},"nodeType":"YulFunctionCall","src":"11836:51:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11826:6:27"}]}]},{"nodeType":"YulBlock","src":"11907:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11922:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11936:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11926:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11953:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11988:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11999:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11984:3:27"},"nodeType":"YulFunctionCall","src":"11984:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12008:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11963:20:27"},"nodeType":"YulFunctionCall","src":"11963:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11953:6:27"}]}]},{"nodeType":"YulBlock","src":"12036:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12051:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12065:3:27","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12055:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12082:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12117:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12128:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12113:3:27"},"nodeType":"YulFunctionCall","src":"12113:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12137:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12092:20:27"},"nodeType":"YulFunctionCall","src":"12092:53:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12082:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11051:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11062:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11074:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11082:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11090:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11098:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11106:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11114:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11122:6:27","type":""}],"src":"10963:1199:27"},{"body":{"nodeType":"YulBlock","src":"12251:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"12297:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12299:77:27"},"nodeType":"YulFunctionCall","src":"12299:79:27"},"nodeType":"YulExpressionStatement","src":"12299:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12272:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12281:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12268:3:27"},"nodeType":"YulFunctionCall","src":"12268:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"12293:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12264:3:27"},"nodeType":"YulFunctionCall","src":"12264:32:27"},"nodeType":"YulIf","src":"12261:119:27"},{"nodeType":"YulBlock","src":"12390:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12405:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12419:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12409:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12434:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12469:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12480:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12465:3:27"},"nodeType":"YulFunctionCall","src":"12465:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12489:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12444:20:27"},"nodeType":"YulFunctionCall","src":"12444:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12434:6:27"}]}]},{"nodeType":"YulBlock","src":"12517:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12532:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12546:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12536:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12562:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12597:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12608:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12593:3:27"},"nodeType":"YulFunctionCall","src":"12593:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12617:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12572:20:27"},"nodeType":"YulFunctionCall","src":"12572:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12562:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12213:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12224:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12236:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12244:6:27","type":""}],"src":"12168:474:27"},{"body":{"nodeType":"YulBlock","src":"12690:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"12746:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12755:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12758:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12748:6:27"},"nodeType":"YulFunctionCall","src":"12748:12:27"},"nodeType":"YulExpressionStatement","src":"12748:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12713:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12737:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"12720:16:27"},"nodeType":"YulFunctionCall","src":"12720:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12710:2:27"},"nodeType":"YulFunctionCall","src":"12710:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12703:6:27"},"nodeType":"YulFunctionCall","src":"12703:42:27"},"nodeType":"YulIf","src":"12700:62:27"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12683:5:27","type":""}],"src":"12648:120:27"},{"body":{"nodeType":"YulBlock","src":"12825:86:27","statements":[{"nodeType":"YulAssignment","src":"12835:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12857:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12844:12:27"},"nodeType":"YulFunctionCall","src":"12844:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12835:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12899:5:27"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"12873:25:27"},"nodeType":"YulFunctionCall","src":"12873:32:27"},"nodeType":"YulExpressionStatement","src":"12873:32:27"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12803:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"12811:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12819:5:27","type":""}],"src":"12774:137:27"},{"body":{"nodeType":"YulBlock","src":"12999:390:27","statements":[{"body":{"nodeType":"YulBlock","src":"13045:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13047:77:27"},"nodeType":"YulFunctionCall","src":"13047:79:27"},"nodeType":"YulExpressionStatement","src":"13047:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13020:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13029:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13016:3:27"},"nodeType":"YulFunctionCall","src":"13016:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"13041:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13012:3:27"},"nodeType":"YulFunctionCall","src":"13012:32:27"},"nodeType":"YulIf","src":"13009:119:27"},{"nodeType":"YulBlock","src":"13138:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13153:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13167:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13157:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13182:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13217:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13228:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13213:3:27"},"nodeType":"YulFunctionCall","src":"13213:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13237:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13192:20:27"},"nodeType":"YulFunctionCall","src":"13192:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13182:6:27"}]}]},{"nodeType":"YulBlock","src":"13265:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13280:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13294:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13284:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13310:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13344:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13355:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13340:3:27"},"nodeType":"YulFunctionCall","src":"13340:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13364:7:27"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"13320:19:27"},"nodeType":"YulFunctionCall","src":"13320:52:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13310:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12961:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12972:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12984:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12992:6:27","type":""}],"src":"12917:472:27"},{"body":{"nodeType":"YulBlock","src":"13448:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13465:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13487:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13470:16:27"},"nodeType":"YulFunctionCall","src":"13470:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13458:6:27"},"nodeType":"YulFunctionCall","src":"13458:36:27"},"nodeType":"YulExpressionStatement","src":"13458:36:27"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13436:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13443:3:27","type":""}],"src":"13395:105:27"},{"body":{"nodeType":"YulBlock","src":"13551:97:27","statements":[{"nodeType":"YulAssignment","src":"13561:81:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13576:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"13583:58:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13572:3:27"},"nodeType":"YulFunctionCall","src":"13572:70:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13561:7:27"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13533:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13543:7:27","type":""}],"src":"13506:142:27"},{"body":{"nodeType":"YulBlock","src":"13709:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13726:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13749:5:27"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"13731:17:27"},"nodeType":"YulFunctionCall","src":"13731:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13719:6:27"},"nodeType":"YulFunctionCall","src":"13719:37:27"},"nodeType":"YulExpressionStatement","src":"13719:37:27"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13697:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13704:3:27","type":""}],"src":"13654:108:27"},{"body":{"nodeType":"YulBlock","src":"13980:395:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13990:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14006:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14011:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14002:3:27"},"nodeType":"YulFunctionCall","src":"14002:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13994:4:27","type":""}]},{"nodeType":"YulBlock","src":"14026:167:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14066:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14096:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"14103:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14092:3:27"},"nodeType":"YulFunctionCall","src":"14092:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14086:5:27"},"nodeType":"YulFunctionCall","src":"14086:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14070:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14154:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14172:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14177:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14168:3:27"},"nodeType":"YulFunctionCall","src":"14168:14:27"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"14122:31:27"},"nodeType":"YulFunctionCall","src":"14122:61:27"},"nodeType":"YulExpressionStatement","src":"14122:61:27"}]},{"nodeType":"YulBlock","src":"14203:165:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14239:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14269:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"14276:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14265:3:27"},"nodeType":"YulFunctionCall","src":"14265:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14259:5:27"},"nodeType":"YulFunctionCall","src":"14259:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14243:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14329:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14347:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14352:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14343:3:27"},"nodeType":"YulFunctionCall","src":"14343:14:27"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"14295:33:27"},"nodeType":"YulFunctionCall","src":"14295:63:27"},"nodeType":"YulExpressionStatement","src":"14295:63:27"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1934_memory_ptr_to_t_struct$_Checkpoint_$1934_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13967:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13974:3:27","type":""}],"src":"13858:517:27"},{"body":{"nodeType":"YulBlock","src":"14535:180:27","statements":[{"nodeType":"YulAssignment","src":"14545:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14557:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14568:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14553:3:27"},"nodeType":"YulFunctionCall","src":"14553:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14545:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14681:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14694:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14705:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14690:3:27"},"nodeType":"YulFunctionCall","src":"14690:17:27"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1934_memory_ptr_to_t_struct$_Checkpoint_$1934_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14581:99:27"},"nodeType":"YulFunctionCall","src":"14581:127:27"},"nodeType":"YulExpressionStatement","src":"14581:127:27"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1934_memory_ptr__to_t_struct$_Checkpoint_$1934_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14507:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14519:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14530:4:27","type":""}],"src":"14381:334:27"},{"body":{"nodeType":"YulBlock","src":"14749:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14766:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14769:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14759:6:27"},"nodeType":"YulFunctionCall","src":"14759:88:27"},"nodeType":"YulExpressionStatement","src":"14759:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14863:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14866:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14856:6:27"},"nodeType":"YulFunctionCall","src":"14856:15:27"},"nodeType":"YulExpressionStatement","src":"14856:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14887:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14890:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14880:6:27"},"nodeType":"YulFunctionCall","src":"14880:15:27"},"nodeType":"YulExpressionStatement","src":"14880:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14721:180:27"},{"body":{"nodeType":"YulBlock","src":"14958:269:27","statements":[{"nodeType":"YulAssignment","src":"14968:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14982:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"14988:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14978:3:27"},"nodeType":"YulFunctionCall","src":"14978:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14968:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"14999:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15029:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"15035:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15025:3:27"},"nodeType":"YulFunctionCall","src":"15025:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15003:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"15076:51:27","statements":[{"nodeType":"YulAssignment","src":"15090:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15104:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15112:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15100:3:27"},"nodeType":"YulFunctionCall","src":"15100:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15090:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15056:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15049:6:27"},"nodeType":"YulFunctionCall","src":"15049:26:27"},"nodeType":"YulIf","src":"15046:81:27"},{"body":{"nodeType":"YulBlock","src":"15179:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15193:16:27"},"nodeType":"YulFunctionCall","src":"15193:18:27"},"nodeType":"YulExpressionStatement","src":"15193:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15143:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15166:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15174:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15163:2:27"},"nodeType":"YulFunctionCall","src":"15163:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15140:2:27"},"nodeType":"YulFunctionCall","src":"15140:38:27"},"nodeType":"YulIf","src":"15137:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14942:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14951:6:27","type":""}],"src":"14907:320:27"},{"body":{"nodeType":"YulBlock","src":"15261:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15278:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15281:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15271:6:27"},"nodeType":"YulFunctionCall","src":"15271:88:27"},"nodeType":"YulExpressionStatement","src":"15271:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15375:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15378:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15368:6:27"},"nodeType":"YulFunctionCall","src":"15368:15:27"},"nodeType":"YulExpressionStatement","src":"15368:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15399:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15402:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15392:6:27"},"nodeType":"YulFunctionCall","src":"15392:15:27"},"nodeType":"YulExpressionStatement","src":"15392:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15233:180:27"},{"body":{"nodeType":"YulBlock","src":"15463:261:27","statements":[{"nodeType":"YulAssignment","src":"15473:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15496:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15478:17:27"},"nodeType":"YulFunctionCall","src":"15478:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15473:1:27"}]},{"nodeType":"YulAssignment","src":"15507:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15530:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15512:17:27"},"nodeType":"YulFunctionCall","src":"15512:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15507:1:27"}]},{"body":{"nodeType":"YulBlock","src":"15670:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15672:16:27"},"nodeType":"YulFunctionCall","src":"15672:18:27"},"nodeType":"YulExpressionStatement","src":"15672:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15591:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15598:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"15666:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15594:3:27"},"nodeType":"YulFunctionCall","src":"15594:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15588:2:27"},"nodeType":"YulFunctionCall","src":"15588:81:27"},"nodeType":"YulIf","src":"15585:107:27"},{"nodeType":"YulAssignment","src":"15702:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15713:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"15716:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15709:3:27"},"nodeType":"YulFunctionCall","src":"15709:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15702:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15450:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"15453:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15459:3:27","type":""}],"src":"15419:305:27"},{"body":{"nodeType":"YulBlock","src":"15836:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15858:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15866:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15854:3:27"},"nodeType":"YulFunctionCall","src":"15854:14:27"},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"15870:33:27","type":"","value":"ERC20Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15847:6:27"},"nodeType":"YulFunctionCall","src":"15847:57:27"},"nodeType":"YulExpressionStatement","src":"15847:57:27"}]},"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15828:6:27","type":""}],"src":"15730:181:27"},{"body":{"nodeType":"YulBlock","src":"16063:220:27","statements":[{"nodeType":"YulAssignment","src":"16073:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16139:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16144:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16080:58:27"},"nodeType":"YulFunctionCall","src":"16080:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16073:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16245:3:27"}],"functionName":{"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulIdentifier","src":"16156:88:27"},"nodeType":"YulFunctionCall","src":"16156:93:27"},"nodeType":"YulExpressionStatement","src":"16156:93:27"},{"nodeType":"YulAssignment","src":"16258:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16269:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16274:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16265:3:27"},"nodeType":"YulFunctionCall","src":"16265:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16258:3:27"}]}]},"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16051:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16059:3:27","type":""}],"src":"15917:366:27"},{"body":{"nodeType":"YulBlock","src":"16460:248:27","statements":[{"nodeType":"YulAssignment","src":"16470:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16482:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16493:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16478:3:27"},"nodeType":"YulFunctionCall","src":"16478:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16470:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16517:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16528:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16513:3:27"},"nodeType":"YulFunctionCall","src":"16513:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16536:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16542:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16532:3:27"},"nodeType":"YulFunctionCall","src":"16532:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16506:6:27"},"nodeType":"YulFunctionCall","src":"16506:47:27"},"nodeType":"YulExpressionStatement","src":"16506:47:27"},{"nodeType":"YulAssignment","src":"16562:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16696:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16570:124:27"},"nodeType":"YulFunctionCall","src":"16570:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16562:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16455:4:27","type":""}],"src":"16289:419:27"},{"body":{"nodeType":"YulBlock","src":"16820:124:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16842:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16850:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16838:3:27"},"nodeType":"YulFunctionCall","src":"16838:14:27"},{"hexValue":"4552433230466c6173684d696e743a20616d6f756e742065786365656473206d","kind":"string","nodeType":"YulLiteral","src":"16854:34:27","type":"","value":"ERC20FlashMint: amount exceeds m"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16831:6:27"},"nodeType":"YulFunctionCall","src":"16831:58:27"},"nodeType":"YulExpressionStatement","src":"16831:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16910:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16918:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16906:3:27"},"nodeType":"YulFunctionCall","src":"16906:15:27"},{"hexValue":"6178466c6173684c6f616e","kind":"string","nodeType":"YulLiteral","src":"16923:13:27","type":"","value":"axFlashLoan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16899:6:27"},"nodeType":"YulFunctionCall","src":"16899:38:27"},"nodeType":"YulExpressionStatement","src":"16899:38:27"}]},"name":"store_literal_in_memory_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16812:6:27","type":""}],"src":"16714:230:27"},{"body":{"nodeType":"YulBlock","src":"17096:220:27","statements":[{"nodeType":"YulAssignment","src":"17106:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17172:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17177:2:27","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17113:58:27"},"nodeType":"YulFunctionCall","src":"17113:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17106:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17278:3:27"}],"functionName":{"name":"store_literal_in_memory_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9","nodeType":"YulIdentifier","src":"17189:88:27"},"nodeType":"YulFunctionCall","src":"17189:93:27"},"nodeType":"YulExpressionStatement","src":"17189:93:27"},{"nodeType":"YulAssignment","src":"17291:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17302:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17307:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17298:3:27"},"nodeType":"YulFunctionCall","src":"17298:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17291:3:27"}]}]},"name":"abi_encode_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17084:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17092:3:27","type":""}],"src":"16950:366:27"},{"body":{"nodeType":"YulBlock","src":"17493:248:27","statements":[{"nodeType":"YulAssignment","src":"17503:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17515:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17526:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17511:3:27"},"nodeType":"YulFunctionCall","src":"17511:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17503:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17550:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17561:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17546:3:27"},"nodeType":"YulFunctionCall","src":"17546:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17569:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17575:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17565:3:27"},"nodeType":"YulFunctionCall","src":"17565:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17539:6:27"},"nodeType":"YulFunctionCall","src":"17539:47:27"},"nodeType":"YulExpressionStatement","src":"17539:47:27"},{"nodeType":"YulAssignment","src":"17595:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17729:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17603:124:27"},"nodeType":"YulFunctionCall","src":"17603:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17595:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17473:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17488:4:27","type":""}],"src":"17322:419:27"},{"body":{"nodeType":"YulBlock","src":"17842:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17859:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"17864:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17852:6:27"},"nodeType":"YulFunctionCall","src":"17852:19:27"},"nodeType":"YulExpressionStatement","src":"17852:19:27"},{"nodeType":"YulAssignment","src":"17880:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17899:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17904:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17895:3:27"},"nodeType":"YulFunctionCall","src":"17895:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17880:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17814:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17819:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17830:11:27","type":""}],"src":"17747:168:27"},{"body":{"nodeType":"YulBlock","src":"17972:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17995:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"18000:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18005:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17982:12:27"},"nodeType":"YulFunctionCall","src":"17982:30:27"},"nodeType":"YulExpressionStatement","src":"17982:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18053:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18058:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18049:3:27"},"nodeType":"YulFunctionCall","src":"18049:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"18067:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18042:6:27"},"nodeType":"YulFunctionCall","src":"18042:27:27"},"nodeType":"YulExpressionStatement","src":"18042:27:27"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17954:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17959:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17964:6:27","type":""}],"src":"17921:154:27"},{"body":{"nodeType":"YulBlock","src":"18203:201:27","statements":[{"nodeType":"YulAssignment","src":"18213:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18278:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18283:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18220:57:27"},"nodeType":"YulFunctionCall","src":"18220:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18213:3:27"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18324:5:27"},{"name":"pos","nodeType":"YulIdentifier","src":"18331:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18336:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"18300:23:27"},"nodeType":"YulFunctionCall","src":"18300:43:27"},"nodeType":"YulExpressionStatement","src":"18300:43:27"},{"nodeType":"YulAssignment","src":"18352:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18363:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18390:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18368:21:27"},"nodeType":"YulFunctionCall","src":"18368:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18359:3:27"},"nodeType":"YulFunctionCall","src":"18359:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18352:3:27"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"18176:5:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"18183:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18191:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18199:3:27","type":""}],"src":"18103:301:27"},{"body":{"nodeType":"YulBlock","src":"18648:533:27","statements":[{"nodeType":"YulAssignment","src":"18658:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18670:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18681:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18666:3:27"},"nodeType":"YulFunctionCall","src":"18666:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18658:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18739:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18752:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18763:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18748:3:27"},"nodeType":"YulFunctionCall","src":"18748:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18695:43:27"},"nodeType":"YulFunctionCall","src":"18695:71:27"},"nodeType":"YulExpressionStatement","src":"18695:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18820:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18833:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18844:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18829:3:27"},"nodeType":"YulFunctionCall","src":"18829:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18776:43:27"},"nodeType":"YulFunctionCall","src":"18776:72:27"},"nodeType":"YulExpressionStatement","src":"18776:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18902:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18915:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18926:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18911:3:27"},"nodeType":"YulFunctionCall","src":"18911:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18858:43:27"},"nodeType":"YulFunctionCall","src":"18858:72:27"},"nodeType":"YulExpressionStatement","src":"18858:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18984:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18997:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19008:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18993:3:27"},"nodeType":"YulFunctionCall","src":"18993:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18940:43:27"},"nodeType":"YulFunctionCall","src":"18940:72:27"},"nodeType":"YulExpressionStatement","src":"18940:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19033:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19044:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19029:3:27"},"nodeType":"YulFunctionCall","src":"19029:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19054:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19060:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19050:3:27"},"nodeType":"YulFunctionCall","src":"19050:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19022:6:27"},"nodeType":"YulFunctionCall","src":"19022:49:27"},"nodeType":"YulExpressionStatement","src":"19022:49:27"},{"nodeType":"YulAssignment","src":"19080:94:27","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19152:6:27"},{"name":"value5","nodeType":"YulIdentifier","src":"19160:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"19169:4:27"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19088:63:27"},"nodeType":"YulFunctionCall","src":"19088:86:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19080:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18580:9:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18592:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18600:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18608:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18616:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18624:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18632:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18643:4:27","type":""}],"src":"18410:771:27"},{"body":{"nodeType":"YulBlock","src":"19250:80:27","statements":[{"nodeType":"YulAssignment","src":"19260:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19275:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19269:5:27"},"nodeType":"YulFunctionCall","src":"19269:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19260:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19318:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"19291:26:27"},"nodeType":"YulFunctionCall","src":"19291:33:27"},"nodeType":"YulExpressionStatement","src":"19291:33:27"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19228:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"19236:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19244:5:27","type":""}],"src":"19187:143:27"},{"body":{"nodeType":"YulBlock","src":"19413:274:27","statements":[{"body":{"nodeType":"YulBlock","src":"19459:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19461:77:27"},"nodeType":"YulFunctionCall","src":"19461:79:27"},"nodeType":"YulExpressionStatement","src":"19461:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19434:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19443:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19430:3:27"},"nodeType":"YulFunctionCall","src":"19430:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"19455:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19426:3:27"},"nodeType":"YulFunctionCall","src":"19426:32:27"},"nodeType":"YulIf","src":"19423:119:27"},{"nodeType":"YulBlock","src":"19552:128:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19567:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19581:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19571:6:27","type":""}]},{"nodeType":"YulAssignment","src":"19596:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19642:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"19653:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19638:3:27"},"nodeType":"YulFunctionCall","src":"19638:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19662:7:27"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"19606:31:27"},"nodeType":"YulFunctionCall","src":"19606:64:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19596:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19383:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19394:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19406:6:27","type":""}],"src":"19336:351:27"},{"body":{"nodeType":"YulBlock","src":"19799:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19821:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19829:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19817:3:27"},"nodeType":"YulFunctionCall","src":"19817:14:27"},{"hexValue":"4552433230466c6173684d696e743a20696e76616c69642072657475726e2076","kind":"string","nodeType":"YulLiteral","src":"19833:34:27","type":"","value":"ERC20FlashMint: invalid return v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19810:6:27"},"nodeType":"YulFunctionCall","src":"19810:58:27"},"nodeType":"YulExpressionStatement","src":"19810:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19889:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19897:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19885:3:27"},"nodeType":"YulFunctionCall","src":"19885:15:27"},{"hexValue":"616c7565","kind":"string","nodeType":"YulLiteral","src":"19902:6:27","type":"","value":"alue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19878:6:27"},"nodeType":"YulFunctionCall","src":"19878:31:27"},"nodeType":"YulExpressionStatement","src":"19878:31:27"}]},"name":"store_literal_in_memory_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19791:6:27","type":""}],"src":"19693:223:27"},{"body":{"nodeType":"YulBlock","src":"20068:220:27","statements":[{"nodeType":"YulAssignment","src":"20078:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20144:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20149:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20085:58:27"},"nodeType":"YulFunctionCall","src":"20085:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20078:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20250:3:27"}],"functionName":{"name":"store_literal_in_memory_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb","nodeType":"YulIdentifier","src":"20161:88:27"},"nodeType":"YulFunctionCall","src":"20161:93:27"},"nodeType":"YulExpressionStatement","src":"20161:93:27"},{"nodeType":"YulAssignment","src":"20263:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20274:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20279:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20270:3:27"},"nodeType":"YulFunctionCall","src":"20270:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20263:3:27"}]}]},"name":"abi_encode_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20056:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20064:3:27","type":""}],"src":"19922:366:27"},{"body":{"nodeType":"YulBlock","src":"20465:248:27","statements":[{"nodeType":"YulAssignment","src":"20475:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20487:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20498:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20483:3:27"},"nodeType":"YulFunctionCall","src":"20483:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20475:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20522:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20533:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20518:3:27"},"nodeType":"YulFunctionCall","src":"20518:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20541:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20547:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20537:3:27"},"nodeType":"YulFunctionCall","src":"20537:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20511:6:27"},"nodeType":"YulFunctionCall","src":"20511:47:27"},"nodeType":"YulExpressionStatement","src":"20511:47:27"},{"nodeType":"YulAssignment","src":"20567:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20701:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20575:124:27"},"nodeType":"YulFunctionCall","src":"20575:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20567:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20445:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20460:4:27","type":""}],"src":"20294:419:27"},{"body":{"nodeType":"YulBlock","src":"20764:146:27","statements":[{"nodeType":"YulAssignment","src":"20774:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20797:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20779:17:27"},"nodeType":"YulFunctionCall","src":"20779:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20774:1:27"}]},{"nodeType":"YulAssignment","src":"20808:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20831:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20813:17:27"},"nodeType":"YulFunctionCall","src":"20813:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20808:1:27"}]},{"body":{"nodeType":"YulBlock","src":"20855:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20857:16:27"},"nodeType":"YulFunctionCall","src":"20857:18:27"},"nodeType":"YulExpressionStatement","src":"20857:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20849:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"20852:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20846:2:27"},"nodeType":"YulFunctionCall","src":"20846:8:27"},"nodeType":"YulIf","src":"20843:34:27"},{"nodeType":"YulAssignment","src":"20887:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20899:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"20902:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20895:3:27"},"nodeType":"YulFunctionCall","src":"20895:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20887:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20750:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"20753:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20759:4:27","type":""}],"src":"20719:191:27"},{"body":{"nodeType":"YulBlock","src":"21022:127:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21044:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21052:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21040:3:27"},"nodeType":"YulFunctionCall","src":"21040:14:27"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"21056:34:27","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21033:6:27"},"nodeType":"YulFunctionCall","src":"21033:58:27"},"nodeType":"YulExpressionStatement","src":"21033:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21112:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21120:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21108:3:27"},"nodeType":"YulFunctionCall","src":"21108:15:27"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"21125:16:27","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21101:6:27"},"nodeType":"YulFunctionCall","src":"21101:41:27"},"nodeType":"YulExpressionStatement","src":"21101:41:27"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21014:6:27","type":""}],"src":"20916:233:27"},{"body":{"nodeType":"YulBlock","src":"21301:220:27","statements":[{"nodeType":"YulAssignment","src":"21311:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21377:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21382:2:27","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21318:58:27"},"nodeType":"YulFunctionCall","src":"21318:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21311:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21483:3:27"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"21394:88:27"},"nodeType":"YulFunctionCall","src":"21394:93:27"},"nodeType":"YulExpressionStatement","src":"21394:93:27"},{"nodeType":"YulAssignment","src":"21496:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21507:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21512:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21503:3:27"},"nodeType":"YulFunctionCall","src":"21503:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21496:3:27"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21289:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21297:3:27","type":""}],"src":"21155:366:27"},{"body":{"nodeType":"YulBlock","src":"21698:248:27","statements":[{"nodeType":"YulAssignment","src":"21708:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21720:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21731:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21716:3:27"},"nodeType":"YulFunctionCall","src":"21716:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21708:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21755:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21766:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21751:3:27"},"nodeType":"YulFunctionCall","src":"21751:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21774:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21780:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21770:3:27"},"nodeType":"YulFunctionCall","src":"21770:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21744:6:27"},"nodeType":"YulFunctionCall","src":"21744:47:27"},"nodeType":"YulExpressionStatement","src":"21744:47:27"},{"nodeType":"YulAssignment","src":"21800:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21934:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21808:124:27"},"nodeType":"YulFunctionCall","src":"21808:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21800:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21678:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21693:4:27","type":""}],"src":"21527:419:27"},{"body":{"nodeType":"YulBlock","src":"22005:32:27","statements":[{"nodeType":"YulAssignment","src":"22015:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"22026:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22015:7:27"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21987:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21997:7:27","type":""}],"src":"21952:85:27"},{"body":{"nodeType":"YulBlock","src":"22075:28:27","statements":[{"nodeType":"YulAssignment","src":"22085:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"22092:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22085:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22061:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22071:3:27","type":""}],"src":"22043:60:27"},{"body":{"nodeType":"YulBlock","src":"22175:88:27","statements":[{"nodeType":"YulAssignment","src":"22185:72:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22249:5:27"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"22223:25:27"},"nodeType":"YulFunctionCall","src":"22223:32:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22214:8:27"},"nodeType":"YulFunctionCall","src":"22214:42:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"22198:15:27"},"nodeType":"YulFunctionCall","src":"22198:59:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22185:9:27"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22155:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22165:9:27","type":""}],"src":"22109:154:27"},{"body":{"nodeType":"YulBlock","src":"22340:72:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22357:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22399:5:27"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"22362:36:27"},"nodeType":"YulFunctionCall","src":"22362:43:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22350:6:27"},"nodeType":"YulFunctionCall","src":"22350:56:27"},"nodeType":"YulExpressionStatement","src":"22350:56:27"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22328:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22335:3:27","type":""}],"src":"22269:143:27"},{"body":{"nodeType":"YulBlock","src":"22522:130:27","statements":[{"nodeType":"YulAssignment","src":"22532:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22544:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22555:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22540:3:27"},"nodeType":"YulFunctionCall","src":"22540:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22532:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22618:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22631:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22642:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22627:3:27"},"nodeType":"YulFunctionCall","src":"22627:17:27"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"22568:49:27"},"nodeType":"YulFunctionCall","src":"22568:77:27"},"nodeType":"YulExpressionStatement","src":"22568:77:27"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22494:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22506:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22517:4:27","type":""}],"src":"22418:234:27"},{"body":{"nodeType":"YulBlock","src":"22686:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22703:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22706:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22696:6:27"},"nodeType":"YulFunctionCall","src":"22696:88:27"},"nodeType":"YulExpressionStatement","src":"22696:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22800:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22803:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22793:6:27"},"nodeType":"YulFunctionCall","src":"22793:15:27"},"nodeType":"YulExpressionStatement","src":"22793:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22824:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22827:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22817:6:27"},"nodeType":"YulFunctionCall","src":"22817:15:27"},"nodeType":"YulExpressionStatement","src":"22817:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22658:180:27"},{"body":{"nodeType":"YulBlock","src":"22950:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22972:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22980:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22968:3:27"},"nodeType":"YulFunctionCall","src":"22968:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"22984:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22961:6:27"},"nodeType":"YulFunctionCall","src":"22961:58:27"},"nodeType":"YulExpressionStatement","src":"22961:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23040:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23048:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23036:3:27"},"nodeType":"YulFunctionCall","src":"23036:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"23053:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23029:6:27"},"nodeType":"YulFunctionCall","src":"23029:32:27"},"nodeType":"YulExpressionStatement","src":"23029:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22942:6:27","type":""}],"src":"22844:224:27"},{"body":{"nodeType":"YulBlock","src":"23220:220:27","statements":[{"nodeType":"YulAssignment","src":"23230:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23296:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23301:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23237:58:27"},"nodeType":"YulFunctionCall","src":"23237:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23230:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23402:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"23313:88:27"},"nodeType":"YulFunctionCall","src":"23313:93:27"},"nodeType":"YulExpressionStatement","src":"23313:93:27"},{"nodeType":"YulAssignment","src":"23415:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23426:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23431:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23422:3:27"},"nodeType":"YulFunctionCall","src":"23422:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23415:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23208:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23216:3:27","type":""}],"src":"23074:366:27"},{"body":{"nodeType":"YulBlock","src":"23617:248:27","statements":[{"nodeType":"YulAssignment","src":"23627:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23650:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23635:3:27"},"nodeType":"YulFunctionCall","src":"23635:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23627:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23674:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23685:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23670:3:27"},"nodeType":"YulFunctionCall","src":"23670:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23693:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23699:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23689:3:27"},"nodeType":"YulFunctionCall","src":"23689:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23663:6:27"},"nodeType":"YulFunctionCall","src":"23663:47:27"},"nodeType":"YulExpressionStatement","src":"23663:47:27"},{"nodeType":"YulAssignment","src":"23719:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23853:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23727:124:27"},"nodeType":"YulFunctionCall","src":"23727:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23719:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23597:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23612:4:27","type":""}],"src":"23446:419:27"},{"body":{"nodeType":"YulBlock","src":"23977:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23999:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24007:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23995:3:27"},"nodeType":"YulFunctionCall","src":"23995:14:27"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"24011:31:27","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23988:6:27"},"nodeType":"YulFunctionCall","src":"23988:55:27"},"nodeType":"YulExpressionStatement","src":"23988:55:27"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23969:6:27","type":""}],"src":"23871:179:27"},{"body":{"nodeType":"YulBlock","src":"24202:220:27","statements":[{"nodeType":"YulAssignment","src":"24212:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24278:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24283:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24219:58:27"},"nodeType":"YulFunctionCall","src":"24219:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24212:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24384:3:27"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"24295:88:27"},"nodeType":"YulFunctionCall","src":"24295:93:27"},"nodeType":"YulExpressionStatement","src":"24295:93:27"},{"nodeType":"YulAssignment","src":"24397:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24408:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24404:3:27"},"nodeType":"YulFunctionCall","src":"24404:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24397:3:27"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24190:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24198:3:27","type":""}],"src":"24056:366:27"},{"body":{"nodeType":"YulBlock","src":"24599:248:27","statements":[{"nodeType":"YulAssignment","src":"24609:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24621:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24632:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24617:3:27"},"nodeType":"YulFunctionCall","src":"24617:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24609:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24656:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24667:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24652:3:27"},"nodeType":"YulFunctionCall","src":"24652:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24675:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24681:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24671:3:27"},"nodeType":"YulFunctionCall","src":"24671:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24645:6:27"},"nodeType":"YulFunctionCall","src":"24645:47:27"},"nodeType":"YulExpressionStatement","src":"24645:47:27"},{"nodeType":"YulAssignment","src":"24701:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24835:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24709:124:27"},"nodeType":"YulFunctionCall","src":"24709:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24701:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24579:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24594:4:27","type":""}],"src":"24428:419:27"},{"body":{"nodeType":"YulBlock","src":"25035:371:27","statements":[{"nodeType":"YulAssignment","src":"25045:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25057:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25068:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25053:3:27"},"nodeType":"YulFunctionCall","src":"25053:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25045:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25126:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25139:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25150:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25135:3:27"},"nodeType":"YulFunctionCall","src":"25135:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"25082:43:27"},"nodeType":"YulFunctionCall","src":"25082:71:27"},"nodeType":"YulExpressionStatement","src":"25082:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25207:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25220:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25231:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25216:3:27"},"nodeType":"YulFunctionCall","src":"25216:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25163:43:27"},"nodeType":"YulFunctionCall","src":"25163:72:27"},"nodeType":"YulExpressionStatement","src":"25163:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25289:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25302:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25313:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25298:3:27"},"nodeType":"YulFunctionCall","src":"25298:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25245:43:27"},"nodeType":"YulFunctionCall","src":"25245:72:27"},"nodeType":"YulExpressionStatement","src":"25245:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25371:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25384:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25395:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25380:3:27"},"nodeType":"YulFunctionCall","src":"25380:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25327:43:27"},"nodeType":"YulFunctionCall","src":"25327:72:27"},"nodeType":"YulExpressionStatement","src":"25327:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24983:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24995:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25003:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25011:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25019:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25030:4:27","type":""}],"src":"24853:553:27"},{"body":{"nodeType":"YulBlock","src":"25518:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25540:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25548:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25536:3:27"},"nodeType":"YulFunctionCall","src":"25536:14:27"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"25552:27:27","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25529:6:27"},"nodeType":"YulFunctionCall","src":"25529:51:27"},"nodeType":"YulExpressionStatement","src":"25529:51:27"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25510:6:27","type":""}],"src":"25412:175:27"},{"body":{"nodeType":"YulBlock","src":"25739:220:27","statements":[{"nodeType":"YulAssignment","src":"25749:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25815:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25820:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25756:58:27"},"nodeType":"YulFunctionCall","src":"25756:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25749:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25921:3:27"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"25832:88:27"},"nodeType":"YulFunctionCall","src":"25832:93:27"},"nodeType":"YulExpressionStatement","src":"25832:93:27"},{"nodeType":"YulAssignment","src":"25934:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25945:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25950:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25941:3:27"},"nodeType":"YulFunctionCall","src":"25941:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25934:3:27"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25727:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25735:3:27","type":""}],"src":"25593:366:27"},{"body":{"nodeType":"YulBlock","src":"26136:248:27","statements":[{"nodeType":"YulAssignment","src":"26146:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26158:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26169:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26154:3:27"},"nodeType":"YulFunctionCall","src":"26154:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26146:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26204:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26189:3:27"},"nodeType":"YulFunctionCall","src":"26189:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26212:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26218:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26208:3:27"},"nodeType":"YulFunctionCall","src":"26208:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26182:6:27"},"nodeType":"YulFunctionCall","src":"26182:47:27"},"nodeType":"YulExpressionStatement","src":"26182:47:27"},{"nodeType":"YulAssignment","src":"26238:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26372:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26246:124:27"},"nodeType":"YulFunctionCall","src":"26246:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26238:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26116:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26131:4:27","type":""}],"src":"25965:419:27"},{"body":{"nodeType":"YulBlock","src":"26496:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26518:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26526:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26514:3:27"},"nodeType":"YulFunctionCall","src":"26514:14:27"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"26530:31:27","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26507:6:27"},"nodeType":"YulFunctionCall","src":"26507:55:27"},"nodeType":"YulExpressionStatement","src":"26507:55:27"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26488:6:27","type":""}],"src":"26390:179:27"},{"body":{"nodeType":"YulBlock","src":"26721:220:27","statements":[{"nodeType":"YulAssignment","src":"26731:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26797:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26802:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26738:58:27"},"nodeType":"YulFunctionCall","src":"26738:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26731:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26903:3:27"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"26814:88:27"},"nodeType":"YulFunctionCall","src":"26814:93:27"},"nodeType":"YulExpressionStatement","src":"26814:93:27"},{"nodeType":"YulAssignment","src":"26916:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26927:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26932:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26923:3:27"},"nodeType":"YulFunctionCall","src":"26923:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26916:3:27"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26709:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26717:3:27","type":""}],"src":"26575:366:27"},{"body":{"nodeType":"YulBlock","src":"27118:248:27","statements":[{"nodeType":"YulAssignment","src":"27128:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27140:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27151:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27136:3:27"},"nodeType":"YulFunctionCall","src":"27136:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27128:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27175:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27186:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27171:3:27"},"nodeType":"YulFunctionCall","src":"27171:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27194:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"27200:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27190:3:27"},"nodeType":"YulFunctionCall","src":"27190:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27164:6:27"},"nodeType":"YulFunctionCall","src":"27164:47:27"},"nodeType":"YulExpressionStatement","src":"27164:47:27"},{"nodeType":"YulAssignment","src":"27220:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27354:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27228:124:27"},"nodeType":"YulFunctionCall","src":"27228:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27220:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27098:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27113:4:27","type":""}],"src":"26947:419:27"},{"body":{"nodeType":"YulBlock","src":"27610:537:27","statements":[{"nodeType":"YulAssignment","src":"27620:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27643:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27628:3:27"},"nodeType":"YulFunctionCall","src":"27628:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27620:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27701:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27714:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27725:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27710:3:27"},"nodeType":"YulFunctionCall","src":"27710:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27657:43:27"},"nodeType":"YulFunctionCall","src":"27657:71:27"},"nodeType":"YulExpressionStatement","src":"27657:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27782:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27795:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27806:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27791:3:27"},"nodeType":"YulFunctionCall","src":"27791:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27738:43:27"},"nodeType":"YulFunctionCall","src":"27738:72:27"},"nodeType":"YulExpressionStatement","src":"27738:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27864:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27877:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27888:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27873:3:27"},"nodeType":"YulFunctionCall","src":"27873:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27820:43:27"},"nodeType":"YulFunctionCall","src":"27820:72:27"},"nodeType":"YulExpressionStatement","src":"27820:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27946:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27959:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27970:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27955:3:27"},"nodeType":"YulFunctionCall","src":"27955:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27902:43:27"},"nodeType":"YulFunctionCall","src":"27902:72:27"},"nodeType":"YulExpressionStatement","src":"27902:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"28028:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28041:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28052:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28037:3:27"},"nodeType":"YulFunctionCall","src":"28037:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27984:43:27"},"nodeType":"YulFunctionCall","src":"27984:73:27"},"nodeType":"YulExpressionStatement","src":"27984:73:27"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"28111:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28124:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28135:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28120:3:27"},"nodeType":"YulFunctionCall","src":"28120:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28067:43:27"},"nodeType":"YulFunctionCall","src":"28067:73:27"},"nodeType":"YulExpressionStatement","src":"28067:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27542:9:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"27554:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27562:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27570:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27578:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27586:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27594:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27605:4:27","type":""}],"src":"27372:775:27"},{"body":{"nodeType":"YulBlock","src":"28259:74:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28281:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"28289:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28277:3:27"},"nodeType":"YulFunctionCall","src":"28277:14:27"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"28293:32:27","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28270:6:27"},"nodeType":"YulFunctionCall","src":"28270:56:27"},"nodeType":"YulExpressionStatement","src":"28270:56:27"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28251:6:27","type":""}],"src":"28153:180:27"},{"body":{"nodeType":"YulBlock","src":"28485:220:27","statements":[{"nodeType":"YulAssignment","src":"28495:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28561:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28566:2:27","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28502:58:27"},"nodeType":"YulFunctionCall","src":"28502:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28495:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28667:3:27"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"28578:88:27"},"nodeType":"YulFunctionCall","src":"28578:93:27"},"nodeType":"YulExpressionStatement","src":"28578:93:27"},{"nodeType":"YulAssignment","src":"28680:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28691:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28696:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28687:3:27"},"nodeType":"YulFunctionCall","src":"28687:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28680:3:27"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28473:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28481:3:27","type":""}],"src":"28339:366:27"},{"body":{"nodeType":"YulBlock","src":"28882:248:27","statements":[{"nodeType":"YulAssignment","src":"28892:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28904:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28915:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28900:3:27"},"nodeType":"YulFunctionCall","src":"28900:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28892:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28939:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28950:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28935:3:27"},"nodeType":"YulFunctionCall","src":"28935:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28958:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28964:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28954:3:27"},"nodeType":"YulFunctionCall","src":"28954:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28928:6:27"},"nodeType":"YulFunctionCall","src":"28928:47:27"},"nodeType":"YulExpressionStatement","src":"28928:47:27"},{"nodeType":"YulAssignment","src":"28984:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29118:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28992:124:27"},"nodeType":"YulFunctionCall","src":"28992:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28984:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28862:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28877:4:27","type":""}],"src":"28711:419:27"},{"body":{"nodeType":"YulBlock","src":"29242:71:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29264:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"29272:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29260:3:27"},"nodeType":"YulFunctionCall","src":"29260:14:27"},{"hexValue":"4552433230466c6173684d696e743a2077726f6e6720746f6b656e","kind":"string","nodeType":"YulLiteral","src":"29276:29:27","type":"","value":"ERC20FlashMint: wrong token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29253:6:27"},"nodeType":"YulFunctionCall","src":"29253:53:27"},"nodeType":"YulExpressionStatement","src":"29253:53:27"}]},"name":"store_literal_in_memory_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29234:6:27","type":""}],"src":"29136:177:27"},{"body":{"nodeType":"YulBlock","src":"29465:220:27","statements":[{"nodeType":"YulAssignment","src":"29475:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29541:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29546:2:27","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29482:58:27"},"nodeType":"YulFunctionCall","src":"29482:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29475:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29647:3:27"}],"functionName":{"name":"store_literal_in_memory_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30","nodeType":"YulIdentifier","src":"29558:88:27"},"nodeType":"YulFunctionCall","src":"29558:93:27"},"nodeType":"YulExpressionStatement","src":"29558:93:27"},{"nodeType":"YulAssignment","src":"29660:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29671:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29676:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29667:3:27"},"nodeType":"YulFunctionCall","src":"29667:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29660:3:27"}]}]},"name":"abi_encode_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29453:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29461:3:27","type":""}],"src":"29319:366:27"},{"body":{"nodeType":"YulBlock","src":"29862:248:27","statements":[{"nodeType":"YulAssignment","src":"29872:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29884:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29895:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29880:3:27"},"nodeType":"YulFunctionCall","src":"29880:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29872:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29919:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29930:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29915:3:27"},"nodeType":"YulFunctionCall","src":"29915:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29938:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29944:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29934:3:27"},"nodeType":"YulFunctionCall","src":"29934:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29908:6:27"},"nodeType":"YulFunctionCall","src":"29908:47:27"},"nodeType":"YulExpressionStatement","src":"29908:47:27"},{"nodeType":"YulAssignment","src":"29964:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30098:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29972:124:27"},"nodeType":"YulFunctionCall","src":"29972:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29964:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29842:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29857:4:27","type":""}],"src":"29691:419:27"},{"body":{"nodeType":"YulBlock","src":"30222:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30244:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30252:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30240:3:27"},"nodeType":"YulFunctionCall","src":"30240:14:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"30256:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30233:6:27"},"nodeType":"YulFunctionCall","src":"30233:58:27"},"nodeType":"YulExpressionStatement","src":"30233:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30312:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30320:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30308:3:27"},"nodeType":"YulFunctionCall","src":"30308:15:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"30325:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30301:6:27"},"nodeType":"YulFunctionCall","src":"30301:33:27"},"nodeType":"YulExpressionStatement","src":"30301:33:27"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30214:6:27","type":""}],"src":"30116:225:27"},{"body":{"nodeType":"YulBlock","src":"30493:220:27","statements":[{"nodeType":"YulAssignment","src":"30503:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30569:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30574:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30510:58:27"},"nodeType":"YulFunctionCall","src":"30510:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30503:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30675:3:27"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"30586:88:27"},"nodeType":"YulFunctionCall","src":"30586:93:27"},"nodeType":"YulExpressionStatement","src":"30586:93:27"},{"nodeType":"YulAssignment","src":"30688:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30699:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30704:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30695:3:27"},"nodeType":"YulFunctionCall","src":"30695:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30688:3:27"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30481:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30489:3:27","type":""}],"src":"30347:366:27"},{"body":{"nodeType":"YulBlock","src":"30890:248:27","statements":[{"nodeType":"YulAssignment","src":"30900:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30912:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30923:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30908:3:27"},"nodeType":"YulFunctionCall","src":"30908:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30900:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30947:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30958:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30943:3:27"},"nodeType":"YulFunctionCall","src":"30943:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30966:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"30972:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30962:3:27"},"nodeType":"YulFunctionCall","src":"30962:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30936:6:27"},"nodeType":"YulFunctionCall","src":"30936:47:27"},"nodeType":"YulExpressionStatement","src":"30936:47:27"},{"nodeType":"YulAssignment","src":"30992:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31126:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31000:124:27"},"nodeType":"YulFunctionCall","src":"31000:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30992:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30870:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30885:4:27","type":""}],"src":"30719:419:27"},{"body":{"nodeType":"YulBlock","src":"31250:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31272:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31280:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31268:3:27"},"nodeType":"YulFunctionCall","src":"31268:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"31284:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31261:6:27"},"nodeType":"YulFunctionCall","src":"31261:58:27"},"nodeType":"YulExpressionStatement","src":"31261:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31340:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31348:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31336:3:27"},"nodeType":"YulFunctionCall","src":"31336:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"31353:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31329:6:27"},"nodeType":"YulFunctionCall","src":"31329:31:27"},"nodeType":"YulExpressionStatement","src":"31329:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31242:6:27","type":""}],"src":"31144:223:27"},{"body":{"nodeType":"YulBlock","src":"31519:220:27","statements":[{"nodeType":"YulAssignment","src":"31529:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31595:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31600:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31536:58:27"},"nodeType":"YulFunctionCall","src":"31536:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31529:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31701:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"31612:88:27"},"nodeType":"YulFunctionCall","src":"31612:93:27"},"nodeType":"YulExpressionStatement","src":"31612:93:27"},{"nodeType":"YulAssignment","src":"31714:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31725:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31730:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31721:3:27"},"nodeType":"YulFunctionCall","src":"31721:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31714:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31507:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31515:3:27","type":""}],"src":"31373:366:27"},{"body":{"nodeType":"YulBlock","src":"31916:248:27","statements":[{"nodeType":"YulAssignment","src":"31926:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31938:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31949:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31934:3:27"},"nodeType":"YulFunctionCall","src":"31934:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31926:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31973:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31984:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31969:3:27"},"nodeType":"YulFunctionCall","src":"31969:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31992:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31998:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31988:3:27"},"nodeType":"YulFunctionCall","src":"31988:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31962:6:27"},"nodeType":"YulFunctionCall","src":"31962:47:27"},"nodeType":"YulExpressionStatement","src":"31962:47:27"},{"nodeType":"YulAssignment","src":"32018:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32152:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32026:124:27"},"nodeType":"YulFunctionCall","src":"32026:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32018:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31896:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31911:4:27","type":""}],"src":"31745:419:27"},{"body":{"nodeType":"YulBlock","src":"32276:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32298:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"32306:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32294:3:27"},"nodeType":"YulFunctionCall","src":"32294:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"32310:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32287:6:27"},"nodeType":"YulFunctionCall","src":"32287:58:27"},"nodeType":"YulExpressionStatement","src":"32287:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32366:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"32374:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32362:3:27"},"nodeType":"YulFunctionCall","src":"32362:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"32379:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32355:6:27"},"nodeType":"YulFunctionCall","src":"32355:29:27"},"nodeType":"YulExpressionStatement","src":"32355:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32268:6:27","type":""}],"src":"32170:221:27"},{"body":{"nodeType":"YulBlock","src":"32543:220:27","statements":[{"nodeType":"YulAssignment","src":"32553:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32619:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32624:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32560:58:27"},"nodeType":"YulFunctionCall","src":"32560:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32553:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32725:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"32636:88:27"},"nodeType":"YulFunctionCall","src":"32636:93:27"},"nodeType":"YulExpressionStatement","src":"32636:93:27"},{"nodeType":"YulAssignment","src":"32738:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32749:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32754:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32745:3:27"},"nodeType":"YulFunctionCall","src":"32745:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32738:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32531:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32539:3:27","type":""}],"src":"32397:366:27"},{"body":{"nodeType":"YulBlock","src":"32940:248:27","statements":[{"nodeType":"YulAssignment","src":"32950:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32962:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32973:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32958:3:27"},"nodeType":"YulFunctionCall","src":"32958:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32950:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32997:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33008:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32993:3:27"},"nodeType":"YulFunctionCall","src":"32993:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33016:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"33022:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33012:3:27"},"nodeType":"YulFunctionCall","src":"33012:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32986:6:27"},"nodeType":"YulFunctionCall","src":"32986:47:27"},"nodeType":"YulExpressionStatement","src":"32986:47:27"},{"nodeType":"YulAssignment","src":"33042:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33176:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33050:124:27"},"nodeType":"YulFunctionCall","src":"33050:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33042:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32920:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32935:4:27","type":""}],"src":"32769:419:27"},{"body":{"nodeType":"YulBlock","src":"33300:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33322:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"33330:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33318:3:27"},"nodeType":"YulFunctionCall","src":"33318:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"33334:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33311:6:27"},"nodeType":"YulFunctionCall","src":"33311:55:27"},"nodeType":"YulExpressionStatement","src":"33311:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33292:6:27","type":""}],"src":"33194:179:27"},{"body":{"nodeType":"YulBlock","src":"33525:220:27","statements":[{"nodeType":"YulAssignment","src":"33535:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33601:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"33606:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33542:58:27"},"nodeType":"YulFunctionCall","src":"33542:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33535:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33707:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"33618:88:27"},"nodeType":"YulFunctionCall","src":"33618:93:27"},"nodeType":"YulExpressionStatement","src":"33618:93:27"},{"nodeType":"YulAssignment","src":"33720:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33731:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"33736:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33727:3:27"},"nodeType":"YulFunctionCall","src":"33727:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33720:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33513:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33521:3:27","type":""}],"src":"33379:366:27"},{"body":{"nodeType":"YulBlock","src":"33922:248:27","statements":[{"nodeType":"YulAssignment","src":"33932:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33944:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33955:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33940:3:27"},"nodeType":"YulFunctionCall","src":"33940:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33932:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33979:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33990:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33975:3:27"},"nodeType":"YulFunctionCall","src":"33975:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33998:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34004:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33994:3:27"},"nodeType":"YulFunctionCall","src":"33994:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33968:6:27"},"nodeType":"YulFunctionCall","src":"33968:47:27"},"nodeType":"YulExpressionStatement","src":"33968:47:27"},{"nodeType":"YulAssignment","src":"34024:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34158:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34032:124:27"},"nodeType":"YulFunctionCall","src":"34032:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34024:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33902:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33917:4:27","type":""}],"src":"33751:419:27"},{"body":{"nodeType":"YulBlock","src":"34282:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34304:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"34312:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34300:3:27"},"nodeType":"YulFunctionCall","src":"34300:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"34316:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34293:6:27"},"nodeType":"YulFunctionCall","src":"34293:58:27"},"nodeType":"YulExpressionStatement","src":"34293:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34372:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"34380:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34368:3:27"},"nodeType":"YulFunctionCall","src":"34368:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"34385:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34361:6:27"},"nodeType":"YulFunctionCall","src":"34361:32:27"},"nodeType":"YulExpressionStatement","src":"34361:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34274:6:27","type":""}],"src":"34176:224:27"},{"body":{"nodeType":"YulBlock","src":"34552:220:27","statements":[{"nodeType":"YulAssignment","src":"34562:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34628:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"34633:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34569:58:27"},"nodeType":"YulFunctionCall","src":"34569:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34562:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34734:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"34645:88:27"},"nodeType":"YulFunctionCall","src":"34645:93:27"},"nodeType":"YulExpressionStatement","src":"34645:93:27"},{"nodeType":"YulAssignment","src":"34747:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34758:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"34763:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34754:3:27"},"nodeType":"YulFunctionCall","src":"34754:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34747:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34540:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34548:3:27","type":""}],"src":"34406:366:27"},{"body":{"nodeType":"YulBlock","src":"34949:248:27","statements":[{"nodeType":"YulAssignment","src":"34959:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34971:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34982:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34967:3:27"},"nodeType":"YulFunctionCall","src":"34967:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34959:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35006:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35017:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35002:3:27"},"nodeType":"YulFunctionCall","src":"35002:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35025:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35031:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35021:3:27"},"nodeType":"YulFunctionCall","src":"35021:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34995:6:27"},"nodeType":"YulFunctionCall","src":"34995:47:27"},"nodeType":"YulExpressionStatement","src":"34995:47:27"},{"nodeType":"YulAssignment","src":"35051:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35185:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35059:124:27"},"nodeType":"YulFunctionCall","src":"35059:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35051:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34929:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34944:4:27","type":""}],"src":"34778:419:27"},{"body":{"nodeType":"YulBlock","src":"35309:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35331:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35339:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35327:3:27"},"nodeType":"YulFunctionCall","src":"35327:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"35343:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35320:6:27"},"nodeType":"YulFunctionCall","src":"35320:58:27"},"nodeType":"YulExpressionStatement","src":"35320:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35399:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35407:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35395:3:27"},"nodeType":"YulFunctionCall","src":"35395:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"35412:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35388:6:27"},"nodeType":"YulFunctionCall","src":"35388:30:27"},"nodeType":"YulExpressionStatement","src":"35388:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35301:6:27","type":""}],"src":"35203:222:27"},{"body":{"nodeType":"YulBlock","src":"35577:220:27","statements":[{"nodeType":"YulAssignment","src":"35587:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35653:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35658:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35594:58:27"},"nodeType":"YulFunctionCall","src":"35594:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35587:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35759:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"35670:88:27"},"nodeType":"YulFunctionCall","src":"35670:93:27"},"nodeType":"YulExpressionStatement","src":"35670:93:27"},{"nodeType":"YulAssignment","src":"35772:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35783:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35788:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35779:3:27"},"nodeType":"YulFunctionCall","src":"35779:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35772:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35565:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35573:3:27","type":""}],"src":"35431:366:27"},{"body":{"nodeType":"YulBlock","src":"35974:248:27","statements":[{"nodeType":"YulAssignment","src":"35984:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35996:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36007:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35992:3:27"},"nodeType":"YulFunctionCall","src":"35992:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35984:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36031:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36042:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36027:3:27"},"nodeType":"YulFunctionCall","src":"36027:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36050:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36056:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36046:3:27"},"nodeType":"YulFunctionCall","src":"36046:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36020:6:27"},"nodeType":"YulFunctionCall","src":"36020:47:27"},"nodeType":"YulExpressionStatement","src":"36020:47:27"},{"nodeType":"YulAssignment","src":"36076:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36210:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36084:124:27"},"nodeType":"YulFunctionCall","src":"36084:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36076:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35954:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35969:4:27","type":""}],"src":"35803:419:27"},{"body":{"nodeType":"YulBlock","src":"36334:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36356:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36364:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36352:3:27"},"nodeType":"YulFunctionCall","src":"36352:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"36368:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36345:6:27"},"nodeType":"YulFunctionCall","src":"36345:58:27"},"nodeType":"YulExpressionStatement","src":"36345:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36424:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36432:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36420:3:27"},"nodeType":"YulFunctionCall","src":"36420:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"36437:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36413:6:27"},"nodeType":"YulFunctionCall","src":"36413:33:27"},"nodeType":"YulExpressionStatement","src":"36413:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36326:6:27","type":""}],"src":"36228:225:27"},{"body":{"nodeType":"YulBlock","src":"36605:220:27","statements":[{"nodeType":"YulAssignment","src":"36615:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36681:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"36686:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36622:58:27"},"nodeType":"YulFunctionCall","src":"36622:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36615:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36787:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"36698:88:27"},"nodeType":"YulFunctionCall","src":"36698:93:27"},"nodeType":"YulExpressionStatement","src":"36698:93:27"},{"nodeType":"YulAssignment","src":"36800:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36811:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"36816:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36807:3:27"},"nodeType":"YulFunctionCall","src":"36807:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36800:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36593:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36601:3:27","type":""}],"src":"36459:366:27"},{"body":{"nodeType":"YulBlock","src":"37002:248:27","statements":[{"nodeType":"YulAssignment","src":"37012:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37024:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37035:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37020:3:27"},"nodeType":"YulFunctionCall","src":"37020:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37012:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37059:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37070:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37055:3:27"},"nodeType":"YulFunctionCall","src":"37055:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37078:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37084:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37074:3:27"},"nodeType":"YulFunctionCall","src":"37074:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37048:6:27"},"nodeType":"YulFunctionCall","src":"37048:47:27"},"nodeType":"YulExpressionStatement","src":"37048:47:27"},{"nodeType":"YulAssignment","src":"37104:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37238:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37112:124:27"},"nodeType":"YulFunctionCall","src":"37112:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37104:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36982:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36997:4:27","type":""}],"src":"36831:419:27"},{"body":{"nodeType":"YulBlock","src":"37362:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37384:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"37392:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37380:3:27"},"nodeType":"YulFunctionCall","src":"37380:14:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"37396:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37373:6:27"},"nodeType":"YulFunctionCall","src":"37373:58:27"},"nodeType":"YulExpressionStatement","src":"37373:58:27"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37354:6:27","type":""}],"src":"37256:182:27"},{"body":{"nodeType":"YulBlock","src":"37590:220:27","statements":[{"nodeType":"YulAssignment","src":"37600:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37666:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37671:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37607:58:27"},"nodeType":"YulFunctionCall","src":"37607:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37600:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37772:3:27"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"37683:88:27"},"nodeType":"YulFunctionCall","src":"37683:93:27"},"nodeType":"YulExpressionStatement","src":"37683:93:27"},{"nodeType":"YulAssignment","src":"37785:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37796:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37801:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37792:3:27"},"nodeType":"YulFunctionCall","src":"37792:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37785:3:27"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37578:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37586:3:27","type":""}],"src":"37444:366:27"},{"body":{"nodeType":"YulBlock","src":"37987:248:27","statements":[{"nodeType":"YulAssignment","src":"37997:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38009:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38020:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38005:3:27"},"nodeType":"YulFunctionCall","src":"38005:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37997:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38044:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38055:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38040:3:27"},"nodeType":"YulFunctionCall","src":"38040:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38063:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"38069:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38059:3:27"},"nodeType":"YulFunctionCall","src":"38059:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38033:6:27"},"nodeType":"YulFunctionCall","src":"38033:47:27"},"nodeType":"YulExpressionStatement","src":"38033:47:27"},{"nodeType":"YulAssignment","src":"38089:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38223:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38097:124:27"},"nodeType":"YulFunctionCall","src":"38097:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38089:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37967:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37982:4:27","type":""}],"src":"37816:419:27"},{"body":{"nodeType":"YulBlock","src":"38347:66:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38369:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"38377:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38365:3:27"},"nodeType":"YulFunctionCall","src":"38365:14:27"},{"hexValue":"4552433230536e617073686f743a2069642069732030","kind":"string","nodeType":"YulLiteral","src":"38381:24:27","type":"","value":"ERC20Snapshot: id is 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38358:6:27"},"nodeType":"YulFunctionCall","src":"38358:48:27"},"nodeType":"YulExpressionStatement","src":"38358:48:27"}]},"name":"store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38339:6:27","type":""}],"src":"38241:172:27"},{"body":{"nodeType":"YulBlock","src":"38565:220:27","statements":[{"nodeType":"YulAssignment","src":"38575:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38641:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"38646:2:27","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38582:58:27"},"nodeType":"YulFunctionCall","src":"38582:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38575:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38747:3:27"}],"functionName":{"name":"store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","nodeType":"YulIdentifier","src":"38658:88:27"},"nodeType":"YulFunctionCall","src":"38658:93:27"},"nodeType":"YulExpressionStatement","src":"38658:93:27"},{"nodeType":"YulAssignment","src":"38760:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38771:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"38776:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38767:3:27"},"nodeType":"YulFunctionCall","src":"38767:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38760:3:27"}]}]},"name":"abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38553:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38561:3:27","type":""}],"src":"38419:366:27"},{"body":{"nodeType":"YulBlock","src":"38962:248:27","statements":[{"nodeType":"YulAssignment","src":"38972:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38984:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38995:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38980:3:27"},"nodeType":"YulFunctionCall","src":"38980:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38972:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39019:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39030:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39015:3:27"},"nodeType":"YulFunctionCall","src":"39015:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39038:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"39044:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39034:3:27"},"nodeType":"YulFunctionCall","src":"39034:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39008:6:27"},"nodeType":"YulFunctionCall","src":"39008:47:27"},"nodeType":"YulExpressionStatement","src":"39008:47:27"},{"nodeType":"YulAssignment","src":"39064:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39198:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39072:124:27"},"nodeType":"YulFunctionCall","src":"39072:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39064:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38942:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38957:4:27","type":""}],"src":"38791:419:27"},{"body":{"nodeType":"YulBlock","src":"39322:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39344:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"39352:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39340:3:27"},"nodeType":"YulFunctionCall","src":"39340:14:27"},{"hexValue":"4552433230536e617073686f743a206e6f6e6578697374656e74206964","kind":"string","nodeType":"YulLiteral","src":"39356:31:27","type":"","value":"ERC20Snapshot: nonexistent id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39333:6:27"},"nodeType":"YulFunctionCall","src":"39333:55:27"},"nodeType":"YulExpressionStatement","src":"39333:55:27"}]},"name":"store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39314:6:27","type":""}],"src":"39216:179:27"},{"body":{"nodeType":"YulBlock","src":"39547:220:27","statements":[{"nodeType":"YulAssignment","src":"39557:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39623:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"39628:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39564:58:27"},"nodeType":"YulFunctionCall","src":"39564:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39557:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39729:3:27"}],"functionName":{"name":"store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","nodeType":"YulIdentifier","src":"39640:88:27"},"nodeType":"YulFunctionCall","src":"39640:93:27"},"nodeType":"YulExpressionStatement","src":"39640:93:27"},{"nodeType":"YulAssignment","src":"39742:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39753:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"39758:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39749:3:27"},"nodeType":"YulFunctionCall","src":"39749:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39742:3:27"}]}]},"name":"abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39535:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39543:3:27","type":""}],"src":"39401:366:27"},{"body":{"nodeType":"YulBlock","src":"39944:248:27","statements":[{"nodeType":"YulAssignment","src":"39954:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39966:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39977:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39962:3:27"},"nodeType":"YulFunctionCall","src":"39962:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39954:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40001:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40012:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39997:3:27"},"nodeType":"YulFunctionCall","src":"39997:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40020:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"40026:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40016:3:27"},"nodeType":"YulFunctionCall","src":"40016:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39990:6:27"},"nodeType":"YulFunctionCall","src":"39990:47:27"},"nodeType":"YulExpressionStatement","src":"39990:47:27"},{"nodeType":"YulAssignment","src":"40046:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40180:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40054:124:27"},"nodeType":"YulFunctionCall","src":"40054:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40046:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39924:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39939:4:27","type":""}],"src":"39773:419:27"},{"body":{"nodeType":"YulBlock","src":"40304:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40326:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40334:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40322:3:27"},"nodeType":"YulFunctionCall","src":"40322:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"40338:34:27","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40315:6:27"},"nodeType":"YulFunctionCall","src":"40315:58:27"},"nodeType":"YulExpressionStatement","src":"40315:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40394:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40402:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40390:3:27"},"nodeType":"YulFunctionCall","src":"40390:15:27"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"40407:8:27","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40383:6:27"},"nodeType":"YulFunctionCall","src":"40383:33:27"},"nodeType":"YulExpressionStatement","src":"40383:33:27"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40296:6:27","type":""}],"src":"40198:225:27"},{"body":{"nodeType":"YulBlock","src":"40575:220:27","statements":[{"nodeType":"YulAssignment","src":"40585:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40651:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40656:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40592:58:27"},"nodeType":"YulFunctionCall","src":"40592:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40585:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40757:3:27"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"40668:88:27"},"nodeType":"YulFunctionCall","src":"40668:93:27"},"nodeType":"YulExpressionStatement","src":"40668:93:27"},{"nodeType":"YulAssignment","src":"40770:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40781:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40786:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40777:3:27"},"nodeType":"YulFunctionCall","src":"40777:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40770:3:27"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40563:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40571:3:27","type":""}],"src":"40429:366:27"},{"body":{"nodeType":"YulBlock","src":"40972:248:27","statements":[{"nodeType":"YulAssignment","src":"40982:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40994:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41005:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40990:3:27"},"nodeType":"YulFunctionCall","src":"40990:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40982:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41029:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41040:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41025:3:27"},"nodeType":"YulFunctionCall","src":"41025:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41048:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"41054:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41044:3:27"},"nodeType":"YulFunctionCall","src":"41044:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41018:6:27"},"nodeType":"YulFunctionCall","src":"41018:47:27"},"nodeType":"YulExpressionStatement","src":"41018:47:27"},{"nodeType":"YulAssignment","src":"41074:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41208:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41082:124:27"},"nodeType":"YulFunctionCall","src":"41082:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41074:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40952:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40967:4:27","type":""}],"src":"40801:419:27"},{"body":{"nodeType":"YulBlock","src":"41332:124:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41354:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41362:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41350:3:27"},"nodeType":"YulFunctionCall","src":"41350:14:27"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"41366:34:27","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41343:6:27"},"nodeType":"YulFunctionCall","src":"41343:58:27"},"nodeType":"YulExpressionStatement","src":"41343:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41422:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41430:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41418:3:27"},"nodeType":"YulFunctionCall","src":"41418:15:27"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"41435:13:27","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41411:6:27"},"nodeType":"YulFunctionCall","src":"41411:38:27"},"nodeType":"YulExpressionStatement","src":"41411:38:27"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41324:6:27","type":""}],"src":"41226:230:27"},{"body":{"nodeType":"YulBlock","src":"41608:220:27","statements":[{"nodeType":"YulAssignment","src":"41618:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41684:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41689:2:27","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41625:58:27"},"nodeType":"YulFunctionCall","src":"41625:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41618:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41790:3:27"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"41701:88:27"},"nodeType":"YulFunctionCall","src":"41701:93:27"},"nodeType":"YulExpressionStatement","src":"41701:93:27"},{"nodeType":"YulAssignment","src":"41803:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41814:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41819:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41810:3:27"},"nodeType":"YulFunctionCall","src":"41810:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41803:3:27"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41596:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41604:3:27","type":""}],"src":"41462:366:27"},{"body":{"nodeType":"YulBlock","src":"42005:248:27","statements":[{"nodeType":"YulAssignment","src":"42015:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42027:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42038:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42023:3:27"},"nodeType":"YulFunctionCall","src":"42023:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42015:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42062:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42073:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42058:3:27"},"nodeType":"YulFunctionCall","src":"42058:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42081:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"42087:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42077:3:27"},"nodeType":"YulFunctionCall","src":"42077:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42051:6:27"},"nodeType":"YulFunctionCall","src":"42051:47:27"},"nodeType":"YulExpressionStatement","src":"42051:47:27"},{"nodeType":"YulAssignment","src":"42107:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42241:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42115:124:27"},"nodeType":"YulFunctionCall","src":"42115:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42107:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41985:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42000:4:27","type":""}],"src":"41834:419:27"},{"body":{"nodeType":"YulBlock","src":"42469:454:27","statements":[{"nodeType":"YulAssignment","src":"42479:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42502:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42487:3:27"},"nodeType":"YulFunctionCall","src":"42487:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42479:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42560:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42573:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42584:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42569:3:27"},"nodeType":"YulFunctionCall","src":"42569:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42516:43:27"},"nodeType":"YulFunctionCall","src":"42516:71:27"},"nodeType":"YulExpressionStatement","src":"42516:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42641:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42654:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42665:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42650:3:27"},"nodeType":"YulFunctionCall","src":"42650:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42597:43:27"},"nodeType":"YulFunctionCall","src":"42597:72:27"},"nodeType":"YulExpressionStatement","src":"42597:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42723:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42736:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42747:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42732:3:27"},"nodeType":"YulFunctionCall","src":"42732:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42679:43:27"},"nodeType":"YulFunctionCall","src":"42679:72:27"},"nodeType":"YulExpressionStatement","src":"42679:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42805:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42818:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42829:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42814:3:27"},"nodeType":"YulFunctionCall","src":"42814:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"42761:43:27"},"nodeType":"YulFunctionCall","src":"42761:72:27"},"nodeType":"YulExpressionStatement","src":"42761:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"42887:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42900:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42911:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42896:3:27"},"nodeType":"YulFunctionCall","src":"42896:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"42843:43:27"},"nodeType":"YulFunctionCall","src":"42843:73:27"},"nodeType":"YulExpressionStatement","src":"42843:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42409:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"42421:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"42429:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42437:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42445:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42453:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42464:4:27","type":""}],"src":"42259:664:27"},{"body":{"nodeType":"YulBlock","src":"42957:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42974:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42977:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42967:6:27"},"nodeType":"YulFunctionCall","src":"42967:88:27"},"nodeType":"YulExpressionStatement","src":"42967:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43071:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43074:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43064:6:27"},"nodeType":"YulFunctionCall","src":"43064:15:27"},"nodeType":"YulExpressionStatement","src":"43064:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43095:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43098:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43088:6:27"},"nodeType":"YulFunctionCall","src":"43088:15:27"},"nodeType":"YulExpressionStatement","src":"43088:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"42929:180:27"},{"body":{"nodeType":"YulBlock","src":"43157:143:27","statements":[{"nodeType":"YulAssignment","src":"43167:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43190:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43172:17:27"},"nodeType":"YulFunctionCall","src":"43172:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43167:1:27"}]},{"nodeType":"YulAssignment","src":"43201:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43224:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43206:17:27"},"nodeType":"YulFunctionCall","src":"43206:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43201:1:27"}]},{"body":{"nodeType":"YulBlock","src":"43248:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43250:16:27"},"nodeType":"YulFunctionCall","src":"43250:18:27"},"nodeType":"YulExpressionStatement","src":"43250:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43245:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43238:6:27"},"nodeType":"YulFunctionCall","src":"43238:9:27"},"nodeType":"YulIf","src":"43235:35:27"},{"nodeType":"YulAssignment","src":"43280:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43289:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"43292:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"43285:3:27"},"nodeType":"YulFunctionCall","src":"43285:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43280:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43146:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"43149:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43155:1:27","type":""}],"src":"43115:185:27"},{"body":{"nodeType":"YulBlock","src":"43412:64:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43434:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"43442:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43430:3:27"},"nodeType":"YulFunctionCall","src":"43430:14:27"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"43446:22:27","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43423:6:27"},"nodeType":"YulFunctionCall","src":"43423:46:27"},"nodeType":"YulExpressionStatement","src":"43423:46:27"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43404:6:27","type":""}],"src":"43306:170:27"},{"body":{"nodeType":"YulBlock","src":"43628:220:27","statements":[{"nodeType":"YulAssignment","src":"43638:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43704:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"43709:2:27","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43645:58:27"},"nodeType":"YulFunctionCall","src":"43645:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43638:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43810:3:27"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"43721:88:27"},"nodeType":"YulFunctionCall","src":"43721:93:27"},"nodeType":"YulExpressionStatement","src":"43721:93:27"},{"nodeType":"YulAssignment","src":"43823:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43834:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"43839:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43830:3:27"},"nodeType":"YulFunctionCall","src":"43830:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43823:3:27"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43616:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43624:3:27","type":""}],"src":"43482:366:27"},{"body":{"nodeType":"YulBlock","src":"44025:248:27","statements":[{"nodeType":"YulAssignment","src":"44035:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44047:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44058:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44043:3:27"},"nodeType":"YulFunctionCall","src":"44043:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44035:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44082:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44093:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44078:3:27"},"nodeType":"YulFunctionCall","src":"44078:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44101:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"44107:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44097:3:27"},"nodeType":"YulFunctionCall","src":"44097:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44071:6:27"},"nodeType":"YulFunctionCall","src":"44071:47:27"},"nodeType":"YulExpressionStatement","src":"44071:47:27"},{"nodeType":"YulAssignment","src":"44127:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44261:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44135:124:27"},"nodeType":"YulFunctionCall","src":"44135:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44127:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44005:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44020:4:27","type":""}],"src":"43854:419:27"},{"body":{"nodeType":"YulBlock","src":"44385:129:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44407:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44415:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44403:3:27"},"nodeType":"YulFunctionCall","src":"44403:14:27"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"44419:34:27","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44396:6:27"},"nodeType":"YulFunctionCall","src":"44396:58:27"},"nodeType":"YulExpressionStatement","src":"44396:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44475:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44483:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44471:3:27"},"nodeType":"YulFunctionCall","src":"44471:15:27"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"44488:18:27","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44464:6:27"},"nodeType":"YulFunctionCall","src":"44464:43:27"},"nodeType":"YulExpressionStatement","src":"44464:43:27"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44377:6:27","type":""}],"src":"44279:235:27"},{"body":{"nodeType":"YulBlock","src":"44666:220:27","statements":[{"nodeType":"YulAssignment","src":"44676:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44742:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"44747:2:27","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44683:58:27"},"nodeType":"YulFunctionCall","src":"44683:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44676:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44848:3:27"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"44759:88:27"},"nodeType":"YulFunctionCall","src":"44759:93:27"},"nodeType":"YulExpressionStatement","src":"44759:93:27"},{"nodeType":"YulAssignment","src":"44861:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44872:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"44877:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44868:3:27"},"nodeType":"YulFunctionCall","src":"44868:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44861:3:27"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44654:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44662:3:27","type":""}],"src":"44520:366:27"},{"body":{"nodeType":"YulBlock","src":"45063:248:27","statements":[{"nodeType":"YulAssignment","src":"45073:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45085:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45096:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45081:3:27"},"nodeType":"YulFunctionCall","src":"45081:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45073:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45120:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45131:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45116:3:27"},"nodeType":"YulFunctionCall","src":"45116:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45139:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"45145:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45135:3:27"},"nodeType":"YulFunctionCall","src":"45135:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45109:6:27"},"nodeType":"YulFunctionCall","src":"45109:47:27"},"nodeType":"YulExpressionStatement","src":"45109:47:27"},{"nodeType":"YulAssignment","src":"45165:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45299:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45173:124:27"},"nodeType":"YulFunctionCall","src":"45173:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45165:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45043:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45058:4:27","type":""}],"src":"44892:419:27"},{"body":{"nodeType":"YulBlock","src":"45443:206:27","statements":[{"nodeType":"YulAssignment","src":"45453:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45465:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45476:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45461:3:27"},"nodeType":"YulFunctionCall","src":"45461:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45453:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45533:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45546:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45557:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45542:3:27"},"nodeType":"YulFunctionCall","src":"45542:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"45489:43:27"},"nodeType":"YulFunctionCall","src":"45489:71:27"},"nodeType":"YulExpressionStatement","src":"45489:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45614:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45627:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45638:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45623:3:27"},"nodeType":"YulFunctionCall","src":"45623:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"45570:43:27"},"nodeType":"YulFunctionCall","src":"45570:72:27"},"nodeType":"YulExpressionStatement","src":"45570:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45407:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45419:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45427:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45438:4:27","type":""}],"src":"45317:332:27"},{"body":{"nodeType":"YulBlock","src":"45761:60:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45783:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"45791:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45779:3:27"},"nodeType":"YulFunctionCall","src":"45779:14:27"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"45795:18:27","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45772:6:27"},"nodeType":"YulFunctionCall","src":"45772:42:27"},"nodeType":"YulExpressionStatement","src":"45772:42:27"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45753:6:27","type":""}],"src":"45655:166:27"},{"body":{"nodeType":"YulBlock","src":"45973:220:27","statements":[{"nodeType":"YulAssignment","src":"45983:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46049:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"46054:2:27","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45990:58:27"},"nodeType":"YulFunctionCall","src":"45990:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45983:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46155:3:27"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"46066:88:27"},"nodeType":"YulFunctionCall","src":"46066:93:27"},"nodeType":"YulExpressionStatement","src":"46066:93:27"},{"nodeType":"YulAssignment","src":"46168:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46179:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"46184:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46175:3:27"},"nodeType":"YulFunctionCall","src":"46175:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46168:3:27"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45961:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45969:3:27","type":""}],"src":"45827:366:27"},{"body":{"nodeType":"YulBlock","src":"46370:248:27","statements":[{"nodeType":"YulAssignment","src":"46380:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46392:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46403:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46388:3:27"},"nodeType":"YulFunctionCall","src":"46388:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46380:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46427:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46438:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46423:3:27"},"nodeType":"YulFunctionCall","src":"46423:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46446:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"46452:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46442:3:27"},"nodeType":"YulFunctionCall","src":"46442:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46416:6:27"},"nodeType":"YulFunctionCall","src":"46416:47:27"},"nodeType":"YulExpressionStatement","src":"46416:47:27"},{"nodeType":"YulAssignment","src":"46472:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46606:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46480:124:27"},"nodeType":"YulFunctionCall","src":"46480:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46472:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46350:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46365:4:27","type":""}],"src":"46199:419:27"},{"body":{"nodeType":"YulBlock","src":"46738:34:27","statements":[{"nodeType":"YulAssignment","src":"46748:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"46763:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"46748:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46710:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"46715:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"46726:11:27","type":""}],"src":"46624:148:27"},{"body":{"nodeType":"YulBlock","src":"46884:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46906:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"46914:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46902:3:27"},"nodeType":"YulFunctionCall","src":"46902:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"46918:66:27","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46895:6:27"},"nodeType":"YulFunctionCall","src":"46895:90:27"},"nodeType":"YulExpressionStatement","src":"46895:90:27"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46876:6:27","type":""}],"src":"46778:214:27"},{"body":{"nodeType":"YulBlock","src":"47162:236:27","statements":[{"nodeType":"YulAssignment","src":"47172:91:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47256:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"47261:1:27","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47179:76:27"},"nodeType":"YulFunctionCall","src":"47179:84:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47172:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47361:3:27"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"47272:88:27"},"nodeType":"YulFunctionCall","src":"47272:93:27"},"nodeType":"YulExpressionStatement","src":"47272:93:27"},{"nodeType":"YulAssignment","src":"47374:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47385:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"47390:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47381:3:27"},"nodeType":"YulFunctionCall","src":"47381:11:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47374:3:27"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47150:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47158:3:27","type":""}],"src":"46998:400:27"},{"body":{"nodeType":"YulBlock","src":"47451:32:27","statements":[{"nodeType":"YulAssignment","src":"47461:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"47472:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"47461:7:27"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47433:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"47443:7:27","type":""}],"src":"47404:79:27"},{"body":{"nodeType":"YulBlock","src":"47572:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47589:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47632:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"47614:17:27"},"nodeType":"YulFunctionCall","src":"47614:24:27"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"47594:19:27"},"nodeType":"YulFunctionCall","src":"47594:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47582:6:27"},"nodeType":"YulFunctionCall","src":"47582:58:27"},"nodeType":"YulExpressionStatement","src":"47582:58:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47560:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47567:3:27","type":""}],"src":"47489:157:27"},{"body":{"nodeType":"YulBlock","src":"47897:418:27","statements":[{"nodeType":"YulAssignment","src":"47908:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48059:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"47915:142:27"},"nodeType":"YulFunctionCall","src":"47915:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47908:3:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48135:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"48144:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48073:61:27"},"nodeType":"YulFunctionCall","src":"48073:75:27"},"nodeType":"YulExpressionStatement","src":"48073:75:27"},{"nodeType":"YulAssignment","src":"48157:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48168:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48173:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48164:3:27"},"nodeType":"YulFunctionCall","src":"48164:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48157:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48248:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"48257:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48186:61:27"},"nodeType":"YulFunctionCall","src":"48186:75:27"},"nodeType":"YulExpressionStatement","src":"48186:75:27"},{"nodeType":"YulAssignment","src":"48270:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48281:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48286:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48277:3:27"},"nodeType":"YulFunctionCall","src":"48277:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48270:3:27"}]},{"nodeType":"YulAssignment","src":"48299:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"48306:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48299:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47868:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47874:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47882:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47893:3:27","type":""}],"src":"47652:663:27"},{"body":{"nodeType":"YulBlock","src":"48499:367:27","statements":[{"nodeType":"YulAssignment","src":"48509:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48521:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48532:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48517:3:27"},"nodeType":"YulFunctionCall","src":"48517:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48509:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48590:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48603:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48614:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48599:3:27"},"nodeType":"YulFunctionCall","src":"48599:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"48546:43:27"},"nodeType":"YulFunctionCall","src":"48546:71:27"},"nodeType":"YulExpressionStatement","src":"48546:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48667:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48680:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48691:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48676:3:27"},"nodeType":"YulFunctionCall","src":"48676:18:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"48627:39:27"},"nodeType":"YulFunctionCall","src":"48627:68:27"},"nodeType":"YulExpressionStatement","src":"48627:68:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"48749:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48773:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48758:3:27"},"nodeType":"YulFunctionCall","src":"48758:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"48705:43:27"},"nodeType":"YulFunctionCall","src":"48705:72:27"},"nodeType":"YulExpressionStatement","src":"48705:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"48831:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48844:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48855:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48840:3:27"},"nodeType":"YulFunctionCall","src":"48840:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"48787:43:27"},"nodeType":"YulFunctionCall","src":"48787:72:27"},"nodeType":"YulExpressionStatement","src":"48787:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48447:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"48459:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"48467:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48475:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48483:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48494:4:27","type":""}],"src":"48321:545:27"},{"body":{"nodeType":"YulBlock","src":"48900:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48917:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48920:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48910:6:27"},"nodeType":"YulFunctionCall","src":"48910:88:27"},"nodeType":"YulExpressionStatement","src":"48910:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49014:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49017:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49007:6:27"},"nodeType":"YulFunctionCall","src":"49007:15:27"},"nodeType":"YulExpressionStatement","src":"49007:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49038:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49041:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49031:6:27"},"nodeType":"YulFunctionCall","src":"49031:15:27"},"nodeType":"YulExpressionStatement","src":"49031:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"48872:180:27"},{"body":{"nodeType":"YulBlock","src":"49164:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49186:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49194:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49182:3:27"},"nodeType":"YulFunctionCall","src":"49182:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"49198:26:27","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49175:6:27"},"nodeType":"YulFunctionCall","src":"49175:50:27"},"nodeType":"YulExpressionStatement","src":"49175:50:27"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49156:6:27","type":""}],"src":"49058:174:27"},{"body":{"nodeType":"YulBlock","src":"49384:220:27","statements":[{"nodeType":"YulAssignment","src":"49394:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49460:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49465:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49401:58:27"},"nodeType":"YulFunctionCall","src":"49401:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49394:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49566:3:27"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"49477:88:27"},"nodeType":"YulFunctionCall","src":"49477:93:27"},"nodeType":"YulExpressionStatement","src":"49477:93:27"},{"nodeType":"YulAssignment","src":"49579:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49590:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49595:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49586:3:27"},"nodeType":"YulFunctionCall","src":"49586:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49579:3:27"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49372:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49380:3:27","type":""}],"src":"49238:366:27"},{"body":{"nodeType":"YulBlock","src":"49781:248:27","statements":[{"nodeType":"YulAssignment","src":"49791:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49803:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"49814:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49799:3:27"},"nodeType":"YulFunctionCall","src":"49799:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49791:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49838:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"49849:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49834:3:27"},"nodeType":"YulFunctionCall","src":"49834:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49857:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"49863:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49853:3:27"},"nodeType":"YulFunctionCall","src":"49853:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49827:6:27"},"nodeType":"YulFunctionCall","src":"49827:47:27"},"nodeType":"YulExpressionStatement","src":"49827:47:27"},{"nodeType":"YulAssignment","src":"49883:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50017:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49891:124:27"},"nodeType":"YulFunctionCall","src":"49891:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49883:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49761:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49776:4:27","type":""}],"src":"49610:419:27"},{"body":{"nodeType":"YulBlock","src":"50141:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50163:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"50171:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50159:3:27"},"nodeType":"YulFunctionCall","src":"50159:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"50175:33:27","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50152:6:27"},"nodeType":"YulFunctionCall","src":"50152:57:27"},"nodeType":"YulExpressionStatement","src":"50152:57:27"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50133:6:27","type":""}],"src":"50035:181:27"},{"body":{"nodeType":"YulBlock","src":"50368:220:27","statements":[{"nodeType":"YulAssignment","src":"50378:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50444:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50449:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50385:58:27"},"nodeType":"YulFunctionCall","src":"50385:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50378:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50550:3:27"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"50461:88:27"},"nodeType":"YulFunctionCall","src":"50461:93:27"},"nodeType":"YulExpressionStatement","src":"50461:93:27"},{"nodeType":"YulAssignment","src":"50563:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50574:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50579:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50570:3:27"},"nodeType":"YulFunctionCall","src":"50570:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50563:3:27"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50356:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50364:3:27","type":""}],"src":"50222:366:27"},{"body":{"nodeType":"YulBlock","src":"50765:248:27","statements":[{"nodeType":"YulAssignment","src":"50775:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50787:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50798:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50783:3:27"},"nodeType":"YulFunctionCall","src":"50783:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50775:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50822:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50833:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50818:3:27"},"nodeType":"YulFunctionCall","src":"50818:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50841:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"50847:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50837:3:27"},"nodeType":"YulFunctionCall","src":"50837:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50811:6:27"},"nodeType":"YulFunctionCall","src":"50811:47:27"},"nodeType":"YulExpressionStatement","src":"50811:47:27"},{"nodeType":"YulAssignment","src":"50867:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51001:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50875:124:27"},"nodeType":"YulFunctionCall","src":"50875:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50867:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50745:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50760:4:27","type":""}],"src":"50594:419:27"},{"body":{"nodeType":"YulBlock","src":"51125:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51147:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51155:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51143:3:27"},"nodeType":"YulFunctionCall","src":"51143:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"51159:34:27","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51136:6:27"},"nodeType":"YulFunctionCall","src":"51136:58:27"},"nodeType":"YulExpressionStatement","src":"51136:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51215:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51223:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51211:3:27"},"nodeType":"YulFunctionCall","src":"51211:15:27"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"51228:4:27","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51204:6:27"},"nodeType":"YulFunctionCall","src":"51204:29:27"},"nodeType":"YulExpressionStatement","src":"51204:29:27"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51117:6:27","type":""}],"src":"51019:221:27"},{"body":{"nodeType":"YulBlock","src":"51392:220:27","statements":[{"nodeType":"YulAssignment","src":"51402:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51468:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51473:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51409:58:27"},"nodeType":"YulFunctionCall","src":"51409:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51402:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51574:3:27"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"51485:88:27"},"nodeType":"YulFunctionCall","src":"51485:93:27"},"nodeType":"YulExpressionStatement","src":"51485:93:27"},{"nodeType":"YulAssignment","src":"51587:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51598:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51603:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51594:3:27"},"nodeType":"YulFunctionCall","src":"51594:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51587:3:27"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51380:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51388:3:27","type":""}],"src":"51246:366:27"},{"body":{"nodeType":"YulBlock","src":"51789:248:27","statements":[{"nodeType":"YulAssignment","src":"51799:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51811:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51822:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51807:3:27"},"nodeType":"YulFunctionCall","src":"51807:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51799:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51846:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51857:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51842:3:27"},"nodeType":"YulFunctionCall","src":"51842:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51865:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"51871:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51861:3:27"},"nodeType":"YulFunctionCall","src":"51861:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51835:6:27"},"nodeType":"YulFunctionCall","src":"51835:47:27"},"nodeType":"YulExpressionStatement","src":"51835:47:27"},{"nodeType":"YulAssignment","src":"51891:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52025:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51899:124:27"},"nodeType":"YulFunctionCall","src":"51899:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51891:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51769:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51784:4:27","type":""}],"src":"51618:419:27"},{"body":{"nodeType":"YulBlock","src":"52149:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52171:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52179:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52167:3:27"},"nodeType":"YulFunctionCall","src":"52167:14:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"52183:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52160:6:27"},"nodeType":"YulFunctionCall","src":"52160:57:27"},"nodeType":"YulExpressionStatement","src":"52160:57:27"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52141:6:27","type":""}],"src":"52043:181:27"},{"body":{"nodeType":"YulBlock","src":"52376:220:27","statements":[{"nodeType":"YulAssignment","src":"52386:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52452:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52457:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52393:58:27"},"nodeType":"YulFunctionCall","src":"52393:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52386:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52558:3:27"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"52469:88:27"},"nodeType":"YulFunctionCall","src":"52469:93:27"},"nodeType":"YulExpressionStatement","src":"52469:93:27"},{"nodeType":"YulAssignment","src":"52571:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52582:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52587:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52578:3:27"},"nodeType":"YulFunctionCall","src":"52578:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52571:3:27"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52364:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52372:3:27","type":""}],"src":"52230:366:27"},{"body":{"nodeType":"YulBlock","src":"52773:248:27","statements":[{"nodeType":"YulAssignment","src":"52783:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52795:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"52806:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52791:3:27"},"nodeType":"YulFunctionCall","src":"52791:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52783:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52830:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"52841:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52826:3:27"},"nodeType":"YulFunctionCall","src":"52826:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52849:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"52855:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52845:3:27"},"nodeType":"YulFunctionCall","src":"52845:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52819:6:27"},"nodeType":"YulFunctionCall","src":"52819:47:27"},"nodeType":"YulExpressionStatement","src":"52819:47:27"},{"nodeType":"YulAssignment","src":"52875:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53009:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52883:124:27"},"nodeType":"YulFunctionCall","src":"52883:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52875:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52753:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52768:4:27","type":""}],"src":"52602:419:27"},{"body":{"nodeType":"YulBlock","src":"53133:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53155:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53163:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53151:3:27"},"nodeType":"YulFunctionCall","src":"53151:14:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"53167:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53144:6:27"},"nodeType":"YulFunctionCall","src":"53144:58:27"},"nodeType":"YulExpressionStatement","src":"53144:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53223:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53231:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53219:3:27"},"nodeType":"YulFunctionCall","src":"53219:15:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"53236:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53212:6:27"},"nodeType":"YulFunctionCall","src":"53212:28:27"},"nodeType":"YulExpressionStatement","src":"53212:28:27"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53125:6:27","type":""}],"src":"53027:220:27"},{"body":{"nodeType":"YulBlock","src":"53399:220:27","statements":[{"nodeType":"YulAssignment","src":"53409:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53475:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53480:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53416:58:27"},"nodeType":"YulFunctionCall","src":"53416:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53409:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53581:3:27"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"53492:88:27"},"nodeType":"YulFunctionCall","src":"53492:93:27"},"nodeType":"YulExpressionStatement","src":"53492:93:27"},{"nodeType":"YulAssignment","src":"53594:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53605:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53610:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53601:3:27"},"nodeType":"YulFunctionCall","src":"53601:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53594:3:27"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53387:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53395:3:27","type":""}],"src":"53253:366:27"},{"body":{"nodeType":"YulBlock","src":"53796:248:27","statements":[{"nodeType":"YulAssignment","src":"53806:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53818:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"53829:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53814:3:27"},"nodeType":"YulFunctionCall","src":"53814:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53806:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53853:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"53864:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53849:3:27"},"nodeType":"YulFunctionCall","src":"53849:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53872:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"53878:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53868:3:27"},"nodeType":"YulFunctionCall","src":"53868:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53842:6:27"},"nodeType":"YulFunctionCall","src":"53842:47:27"},"nodeType":"YulExpressionStatement","src":"53842:47:27"},{"nodeType":"YulAssignment","src":"53898:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54032:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53906:124:27"},"nodeType":"YulFunctionCall","src":"53906:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53898:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53776:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53791:4:27","type":""}],"src":"53625:419:27"},{"body":{"nodeType":"YulBlock","src":"54156:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54178:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54186:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54174:3:27"},"nodeType":"YulFunctionCall","src":"54174:14:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"54190:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54167:6:27"},"nodeType":"YulFunctionCall","src":"54167:58:27"},"nodeType":"YulExpressionStatement","src":"54167:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54246:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54254:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54242:3:27"},"nodeType":"YulFunctionCall","src":"54242:15:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"54259:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54235:6:27"},"nodeType":"YulFunctionCall","src":"54235:29:27"},"nodeType":"YulExpressionStatement","src":"54235:29:27"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54148:6:27","type":""}],"src":"54050:221:27"},{"body":{"nodeType":"YulBlock","src":"54423:220:27","statements":[{"nodeType":"YulAssignment","src":"54433:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54499:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54504:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54440:58:27"},"nodeType":"YulFunctionCall","src":"54440:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54433:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54605:3:27"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"54516:88:27"},"nodeType":"YulFunctionCall","src":"54516:93:27"},"nodeType":"YulExpressionStatement","src":"54516:93:27"},{"nodeType":"YulAssignment","src":"54618:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54629:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54634:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54625:3:27"},"nodeType":"YulFunctionCall","src":"54625:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54618:3:27"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54411:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54419:3:27","type":""}],"src":"54277:366:27"},{"body":{"nodeType":"YulBlock","src":"54820:248:27","statements":[{"nodeType":"YulAssignment","src":"54830:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"54853:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54838:3:27"},"nodeType":"YulFunctionCall","src":"54838:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54830:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54877:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"54888:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54873:3:27"},"nodeType":"YulFunctionCall","src":"54873:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54896:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"54902:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54892:3:27"},"nodeType":"YulFunctionCall","src":"54892:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54866:6:27"},"nodeType":"YulFunctionCall","src":"54866:47:27"},"nodeType":"YulExpressionStatement","src":"54866:47:27"},{"nodeType":"YulAssignment","src":"54922:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55056:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54930:124:27"},"nodeType":"YulFunctionCall","src":"54930:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54922:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54800:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54815:4:27","type":""}],"src":"54649:419:27"},{"body":{"nodeType":"YulBlock","src":"55180:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55202:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"55210:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55198:3:27"},"nodeType":"YulFunctionCall","src":"55198:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"55214:34:27","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55191:6:27"},"nodeType":"YulFunctionCall","src":"55191:58:27"},"nodeType":"YulExpressionStatement","src":"55191:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55270:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"55278:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55266:3:27"},"nodeType":"YulFunctionCall","src":"55266:15:27"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"55283:9:27","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55259:6:27"},"nodeType":"YulFunctionCall","src":"55259:34:27"},"nodeType":"YulExpressionStatement","src":"55259:34:27"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55172:6:27","type":""}],"src":"55074:226:27"},{"body":{"nodeType":"YulBlock","src":"55452:220:27","statements":[{"nodeType":"YulAssignment","src":"55462:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55528:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55533:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55469:58:27"},"nodeType":"YulFunctionCall","src":"55469:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55462:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55634:3:27"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"55545:88:27"},"nodeType":"YulFunctionCall","src":"55545:93:27"},"nodeType":"YulExpressionStatement","src":"55545:93:27"},{"nodeType":"YulAssignment","src":"55647:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55658:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55663:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55654:3:27"},"nodeType":"YulFunctionCall","src":"55654:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55647:3:27"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55440:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55448:3:27","type":""}],"src":"55306:366:27"},{"body":{"nodeType":"YulBlock","src":"55849:248:27","statements":[{"nodeType":"YulAssignment","src":"55859:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55871:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"55882:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55867:3:27"},"nodeType":"YulFunctionCall","src":"55867:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55859:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55906:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"55917:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55902:3:27"},"nodeType":"YulFunctionCall","src":"55902:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55925:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"55931:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55921:3:27"},"nodeType":"YulFunctionCall","src":"55921:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55895:6:27"},"nodeType":"YulFunctionCall","src":"55895:47:27"},"nodeType":"YulExpressionStatement","src":"55895:47:27"},{"nodeType":"YulAssignment","src":"55951:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56085:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55959:124:27"},"nodeType":"YulFunctionCall","src":"55959:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55951:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55829:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55844:4:27","type":""}],"src":"55678:419:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC3156FlashBorrowerUpgradeable_$229(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC3156FlashBorrowerUpgradeable_$229(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC3156FlashBorrowerUpgradeable_$229(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC3156FlashBorrowerUpgradeable_$229(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC3156FlashBorrowerUpgradeable_$229(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_contract$_IERC3156FlashBorrowerUpgradeable_$229t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC3156FlashBorrowerUpgradeable_$229(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20VotesUpgradeable.Checkpoint -> struct ERC20VotesUpgradeable.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1934_memory_ptr_to_t_struct$_Checkpoint_$1934_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1934_memory_ptr__to_t_struct$_Checkpoint_$1934_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1934_memory_ptr_to_t_struct$_Checkpoint_$1934_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: block not yet mined\")\n\n    }\n\n    function abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20FlashMint: amount exceeds m\")\n\n        mstore(add(memPtr, 32), \"axFlashLoan\")\n\n    }\n\n    function abi_encode_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a95260fc1ea50b9fae0bd0c2ec12cfdf9bb2fb03a7e318182193c7e9cfe937d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20FlashMint: invalid return v\")\n\n        mstore(add(memPtr, 32), \"alue\")\n\n    }\n\n    function abi_encode_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60b46eee919fdc048fce2496f82a5160d2d7a573b9d7b3321e803c603f0879cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20FlashMint: wrong token\")\n\n    }\n\n    function abi_encode_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8045752bf1f8e0707249246eec289248dc4bbf20a7a2babbd0d33f8827b6ff30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Snapshot: id is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Snapshot: nonexistent id\")\n\n    }\n\n    function abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102325760003560e01c8063715018a611610130578063981b24d0116100b8578063d505accf1161007c578063d505accf146106c7578063d9d98ce4146106e3578063dd62ed3e14610713578063f1127ed814610743578063f2fde38b1461077357610232565b8063981b24d0146105eb5780639ab24eb01461061b578063a457c2d71461064b578063a9059cbb1461067b578063c3cda520146106ab57610232565b80638456cb59116100ff5780638456cb591461056b5780638da5cb5b146105755780638e539e8c1461059357806395d89b41146105c35780639711715a146105e157610232565b8063715018a61461050b57806379cc6790146105155780637ecebe00146105315780638129fc1c1461056157610232565b806340c10f19116101be5780635c975abb116101825780635c975abb1461042d5780635cffe9de1461044b578063613255ab1461047b5780636fcfff45146104ab57806370a08231146104db57610232565b806340c10f191461037957806342966c68146103955780634ee2cd7e146103b1578063587cde1e146103e15780635c19a95c1461041157610232565b8063313ce56711610205578063313ce567146102d35780633644e515146102f1578063395093511461030f5780633a46b1a81461033f5780633f4ba83a1461036f57610232565b806306fdde0314610237578063095ea7b31461025557806318160ddd1461028557806323b872dd146102a3575b600080fd5b61023f61078f565b60405161024c9190613ce3565b60405180910390f35b61026f600480360381019061026a9190613da3565b610821565b60405161027c9190613dfe565b60405180910390f35b61028d610844565b60405161029a9190613e28565b60405180910390f35b6102bd60048036038101906102b89190613e43565b61084e565b6040516102ca9190613dfe565b60405180910390f35b6102db61087d565b6040516102e89190613eb2565b60405180910390f35b6102f9610886565b6040516103069190613ee6565b60405180910390f35b61032960048036038101906103249190613da3565b610895565b6040516103369190613dfe565b60405180910390f35b61035960048036038101906103549190613da3565b6108cc565b6040516103669190613e28565b60405180910390f35b610377610961565b005b610393600480360381019061038e9190613da3565b610973565b005b6103af60048036038101906103aa9190613f01565b610989565b005b6103cb60048036038101906103c69190613da3565b61099d565b6040516103d89190613e28565b60405180910390f35b6103fb60048036038101906103f69190613f2e565b610a0d565b6040516104089190613f6a565b60405180910390f35b61042b60048036038101906104269190613f2e565b610a77565b005b610435610a8b565b6040516104429190613dfe565b60405180910390f35b61046560048036038101906104609190614028565b610aa2565b6040516104729190613dfe565b60405180910390f35b61049560048036038101906104909190613f2e565b610c9e565b6040516104a29190613e28565b60405180910390f35b6104c560048036038101906104c09190613f2e565b610d15565b6040516104d291906140cf565b60405180910390f35b6104f560048036038101906104f09190613f2e565b610d6a565b6040516105029190613e28565b60405180910390f35b610513610db3565b005b61052f600480360381019061052a9190613da3565b610dc7565b005b61054b60048036038101906105469190613f2e565b610de7565b6040516105589190613e28565b60405180910390f35b610569610e38565b005b610573611050565b005b61057d611062565b60405161058a9190613f6a565b60405180910390f35b6105ad60048036038101906105a89190613f01565b61108c565b6040516105ba9190613e28565b60405180910390f35b6105cb6110e3565b6040516105d89190613ce3565b60405180910390f35b6105e9611175565b005b61060560048036038101906106009190613f01565b611188565b6040516106129190613e28565b60405180910390f35b61063560048036038101906106309190613f2e565b6111b9565b6040516106429190613e28565b60405180910390f35b61066560048036038101906106609190613da3565b6112cc565b6040516106729190613dfe565b60405180910390f35b61069560048036038101906106909190613da3565b611343565b6040516106a29190613dfe565b60405180910390f35b6106c560048036038101906106c09190614142565b611366565b005b6106e160048036038101906106dc91906141cf565b61146a565b005b6106fd60048036038101906106f89190613da3565b6115ac565b60405161070a9190613e28565b60405180910390f35b61072d60048036038101906107289190614271565b61162e565b60405161073a9190613e28565b60405180910390f35b61075d600480360381019061075891906142dd565b6116b5565b60405161076a9190614392565b60405180910390f35b61078d60048036038101906107889190613f2e565b6117c6565b005b60606036805461079e906143dc565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca906143dc565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b60008061082c61184a565b9050610839818585611852565b600191505092915050565b6000603554905090565b60008061085961184a565b9050610866858285611a1d565b610871858585611aa9565b60019150509392505050565b60006012905090565b6000610890611d24565b905090565b6000806108a061184a565b90506108c18185856108b2858961162e565b6108bc919061443d565b611852565b600191505092915050565b6000438210610910576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610907906144df565b60405180910390fd5b61095961019560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611d64565b905092915050565b610969611eb5565b610971611f33565b565b61097b611eb5565b6109858282611f96565b5050565b61099a61099461184a565b82611fa4565b50565b60008060006109ea84609760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fb2565b9150915081610a01576109fc85610d6a565b610a03565b805b9250505092915050565b600061019460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610a88610a8261184a565b826120a8565b50565b600060fb60009054906101000a900460ff16905090565b6000610aad85610c9e565b841115610aef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae690614571565b60405180910390fd5b6000610afb86866115ac565b9050610b078786611f96565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98773ffffffffffffffffffffffffffffffffffffffff166323e30c8b338989868a8a6040518763ffffffff1660e01b8152600401610b6b969594939291906145de565b602060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd919061464f565b14610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906146ee565b60405180910390fd5b6000610c076121c3565b9050610c1f88308489610c1a919061443d565b611a1d565b6000821480610c5a5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610c7957610c74888388610c6f919061443d565b611fa4565b610c8f565b610c838887611fa4565b610c8e888284611aa9565b5b60019250505095945050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610cda576000610d0e565b610ce2610844565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d0d919061470e565b5b9050919050565b6000610d6361019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506121c8565b9050919050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610dbb611eb5565b610dc5600061221b565b565b610dd982610dd361184a565b83611a1d565b610de38282611fa4565b5050565b6000610e3161016160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122e1565b9050919050565b60008060019054906101000a900460ff16159050808015610e695750600160008054906101000a900460ff1660ff16105b80610e965750610e78306122ef565b158015610e955750600160008054906101000a900460ff1660ff16145b5b610ed5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecc906147b4565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610f12576001600060016101000a81548160ff0219169083151502179055505b610f866040518060400160405280600481526020017f504b4452000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f504b445200000000000000000000000000000000000000000000000000000000815250612312565b610f8e61236f565b610f966123c0565b610f9e612411565b610fa661246a565b610fe46040518060400160405280600481526020017f504b4452000000000000000000000000000000000000000000000000000000008152506124c3565b610fec612554565b610ff46125a5565b801561104d5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516110449190614819565b60405180910390a15b50565b611058611eb5565b6110606125f6565b565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004382106110d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c7906144df565b60405180910390fd5b6110dc61019683611d64565b9050919050565b6060603780546110f2906143dc565b80601f016020809104026020016040519081016040528092919081815260200182805461111e906143dc565b801561116b5780601f106111405761010080835404028352916020019161116b565b820191906000526020600020905b81548152906001019060200180831161114e57829003601f168201915b5050505050905090565b61117d611eb5565b611185612659565b50565b6000806000611198846098611fb2565b91509150816111ae576111a9610844565b6111b0565b805b92505050919050565b60008061019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600081146112a35761019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600182611257919061470e565b8154811061126857611267614834565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166112a6565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b6000806112d761184a565b905060006112e5828661162e565b90508381101561132a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611321906148d5565b60405180910390fd5b6113378286868403611852565b60019250505092915050565b60008061134e61184a565b905061135b818585611aa9565b600191505092915050565b834211156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a090614941565b60405180910390fd5b600061140b6114037fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8989896040516020016113e89493929190614961565b604051602081830303815290604052805190602001206126af565b8585856126c9565b9050611416816126f4565b8614611457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144e906149f2565b60405180910390fd5b61146181886120a8565b50505050505050565b834211156114ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a490614a5e565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886114dc8c6126f4565b896040516020016114f296959493929190614a7e565b6040516020818303038152906040528051906020012090506000611515826126af565b90506000611525828787876126c9565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158c90614b2b565b60405180910390fd5b6115a08a8a8a611852565b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461161c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161390614b97565b60405180910390fd5b6116268383612753565b905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6116bd613b69565b61019560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061171557611714614834565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6117ce611eb5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561183e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183590614c29565b60405180910390fd5b6118478161221b565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b990614cbb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192990614d4d565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a109190613e28565b60405180910390a3505050565b6000611a29848461162e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611aa35781811015611a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8c90614db9565b60405180910390fd5b611aa28484848403611852565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1090614e4b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8090614edd565b60405180910390fd5b611b9483838361275b565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1290614f6f565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d0b9190613e28565b60405180910390a3611d1e848484612773565b50505050565b6000611d5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d52612783565b611d5a61278e565b612799565b905090565b600080838054905090506000808290506005831115611dda576000611d88846127d3565b84611d93919061470e565b905085611da088836128cd565b60000160009054906101000a900463ffffffff1663ffffffff161115611dc857809150611dd8565b600181611dd5919061443d565b92505b505b5b80821015611e3a576000611def83836128e2565b905085611dfc88836128cd565b60000160009054906101000a900463ffffffff1663ffffffff161115611e2457809150611e34565b600181611e31919061443d565b92505b50611ddb565b60008114611e8957611e5886600183611e53919061470e565b6128cd565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611e8c565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b611ebd61184a565b73ffffffffffffffffffffffffffffffffffffffff16611edb611062565b73ffffffffffffffffffffffffffffffffffffffff1614611f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2890614fdb565b60405180910390fd5b565b611f3b612908565b600060fb60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611f7f61184a565b604051611f8c9190613f6a565b60405180910390a1565b611fa08282612951565b5050565b611fae82826129df565b5050565b60008060008411611ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fef90615047565b60405180910390fd5b6120006129fe565b841115612042576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612039906150b3565b60405180910390fd5b600061205a8585600001612a0f90919063ffffffff16565b905083600001805490508114156120785760008092509250506120a1565b60018460010182815481106120905761208f614834565b5b906000526020600020015492509250505b9250929050565b60006120b383610a0d565b905060006120c084610d6a565b90508261019460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46121bd828483612ac9565b50505050565b600090565b600063ffffffff8016821115612213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220a90615145565b60405180910390fd5b819050919050565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16612361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612358906151d7565b60405180910390fd5b61236b8282612cc4565b5050565b600060019054906101000a900460ff166123be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123b5906151d7565b60405180910390fd5b565b600060019054906101000a900460ff1661240f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612406906151d7565b60405180910390fd5b565b600060019054906101000a900460ff16612460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612457906151d7565b60405180910390fd5b612468612d45565b565b600060019054906101000a900460ff166124b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b0906151d7565b60405180910390fd5b6124c1612da6565b565b600060019054906101000a900460ff16612512576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612509906151d7565b60405180910390fd5b612551816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250612e12565b50565b600060019054906101000a900460ff166125a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259a906151d7565b60405180910390fd5b565b600060019054906101000a900460ff166125f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125eb906151d7565b60405180910390fd5b565b6125fe612e8f565b600160fb60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861264261184a565b60405161264f9190613f6a565b60405180910390a1565b6000612665609a612ed9565b600061266f6129fe565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040516126a09190613e28565b60405180910390a18091505090565b60006126c26126bc611d24565b83612eef565b9050919050565b60008060006126da87878787612f22565b915091506126e781613005565b8192505050949350505050565b60008061016160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050612742816122e1565b915061274d81612ed9565b50919050565b600092915050565b612763612e8f565b61276e838383613173565b505050565b61277e83838361322d565b505050565b600061012d54905090565b600061012e54905090565b600083838346306040516020016127b49594939291906151f7565b6040516020818303038152906040528051906020012090509392505050565b6000808214156127e657600090506128c8565b600060016127f384613258565b901c6001901b9050600181848161280d5761280c61524a565b5b048201901c905060018184816128265761282561524a565b5b048201901c9050600181848161283f5761283e61524a565b5b048201901c905060018184816128585761285761524a565b5b048201901c905060018184816128715761287061524a565b5b048201901c9050600181848161288a5761288961524a565b5b048201901c905060018184816128a3576128a261524a565b5b048201901c90506128c4818285816128be576128bd61524a565b5b04613339565b9150505b919050565b60008260005281602060002001905092915050565b600060028284186128f39190615279565b828416612900919061443d565b905092915050565b612910610a8b565b61294f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612946906152f6565b60405180910390fd5b565b61295b8282613352565b6129636134aa565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612989610844565b11156129ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c190615388565b60405180910390fd5b6129d96101966134ce836134e4565b50505050565b6129e982826137b3565b6129f8610196613983836134e4565b50505050565b6000612a0a609a6122e1565b905090565b60008083805490501415612a265760009050612ac3565b600080848054905090505b80821015612a7a576000612a4583836128e2565b905084612a528783613999565b600001541115612a6457809150612a74565b600181612a71919061443d565b92505b50612a31565b600082118015612aa2575083612a9c86600185612a97919061470e565b613999565b60000154145b15612abd57600182612ab4919061470e565b92505050612ac3565b81925050505b92915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612b055750600081115b15612cbf57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612be457600080612b8d61019560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613983856134e4565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612bd99291906153a8565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612cbe57600080612c6761019560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206134ce856134e4565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612cb39291906153a8565b60405180910390a250505b5b505050565b600060019054906101000a900460ff16612d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0a906151d7565b60405180910390fd5b8160369080519060200190612d29929190613ba7565b508060379080519060200190612d40929190613ba7565b505050565b600060019054906101000a900460ff16612d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d8b906151d7565b60405180910390fd5b612da4612d9f61184a565b61221b565b565b600060019054906101000a900460ff16612df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dec906151d7565b60405180910390fd5b600060fb60006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16612e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e58906151d7565b60405180910390fd5b6000828051906020012090506000828051906020012090508161012d819055508061012e8190555050505050565b612e97610a8b565b15612ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ece9061541d565b60405180910390fd5b565b6001816000016000828254019250508190555050565b60008282604051602001612f049291906154b5565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115612f5d576000600391509150612ffc565b600060018787878760405160008152602001604052604051612f8294939291906154ec565b6020604051602081039080840390855afa158015612fa4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ff357600060019250925050612ffc565b80600092509250505b94509492505050565b6000600481111561301957613018615531565b5b81600481111561302c5761302b615531565b5b141561303757613170565b6001600481111561304b5761304a615531565b5b81600481111561305e5761305d615531565b5b141561309f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613096906155ac565b60405180910390fd5b600260048111156130b3576130b2615531565b5b8160048111156130c6576130c5615531565b5b1415613107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130fe90615618565b60405180910390fd5b6003600481111561311b5761311a615531565b5b81600481111561312e5761312d615531565b5b141561316f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613166906156aa565b60405180910390fd5b5b50565b61317e8383836139bb565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156131c9576131bc826139c0565b6131c4613a13565b613228565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561321457613207836139c0565b61320f613a13565b613227565b61321d836139c0565b613226826139c0565b5b5b505050565b613238838383613a27565b61325361324484610a0d565b61324d84610a0d565b83612ac9565b505050565b600080600090506000608084901c111561327a57608083901c92506080810190505b6000604084901c111561329557604083901c92506040810190505b6000602084901c11156132b057602083901c92506020810190505b6000601084901c11156132cb57601083901c92506010810190505b6000600884901c11156132e657600883901c92506008810190505b6000600484901c111561330157600483901c92506004810190505b6000600284901c111561331c57600283901c92506002810190505b6000600184901c1115613330576001810190505b80915050919050565b6000818310613348578161334a565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133b990615716565b60405180910390fd5b6133ce6000838361275b565b80603560008282546133e0919061443d565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516134929190613e28565b60405180910390a36134a660008383612773565b5050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b600081836134dc919061443d565b905092915050565b60008060008580549050905060008082146135b35761350f8760018461350a919061470e565b6128cd565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250506135ef565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935061362484868863ffffffff16565b925060008211801561363f575043816000015163ffffffff16145b156136b95761364d83613a2c565b6136638860018561365e919061470e565b6128cd565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506137a9565b8660405180604001604052806136ce436121c8565b63ffffffff1681526020016136e286613a2c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161381a906157a8565b60405180910390fd5b61382f8260008361275b565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156138b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138ad9061583a565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603560008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161396a9190613e28565b60405180910390a361397e83600084612773565b505050565b60008183613991919061470e565b905092915050565b600080836000528260206000200190506139b281613a97565b91505092915050565b505050565b613a10609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a0b83610d6a565b613aa1565b50565b613a256098613a20610844565b613aa1565b565b505050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115613a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a86906158cc565b60405180910390fd5b819050919050565b6000819050919050565b6000613aab6129fe565b905080613aba84600001613b1c565b1015613b175782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b60008082805490501415613b335760009050613b64565b8160018380549050613b45919061470e565b81548110613b5657613b55614834565b5b906000526020600020015490505b919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b828054613bb3906143dc565b90600052602060002090601f016020900481019282613bd55760008555613c1c565b82601f10613bee57805160ff1916838001178555613c1c565b82800160010185558215613c1c579182015b82811115613c1b578251825591602001919060010190613c00565b5b509050613c299190613c2d565b5090565b5b80821115613c46576000816000905550600101613c2e565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015613c84578082015181840152602081019050613c69565b83811115613c93576000848401525b50505050565b6000601f19601f8301169050919050565b6000613cb582613c4a565b613cbf8185613c55565b9350613ccf818560208601613c66565b613cd881613c99565b840191505092915050565b60006020820190508181036000830152613cfd8184613caa565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613d3a82613d0f565b9050919050565b613d4a81613d2f565b8114613d5557600080fd5b50565b600081359050613d6781613d41565b92915050565b6000819050919050565b613d8081613d6d565b8114613d8b57600080fd5b50565b600081359050613d9d81613d77565b92915050565b60008060408385031215613dba57613db9613d05565b5b6000613dc885828601613d58565b9250506020613dd985828601613d8e565b9150509250929050565b60008115159050919050565b613df881613de3565b82525050565b6000602082019050613e136000830184613def565b92915050565b613e2281613d6d565b82525050565b6000602082019050613e3d6000830184613e19565b92915050565b600080600060608486031215613e5c57613e5b613d05565b5b6000613e6a86828701613d58565b9350506020613e7b86828701613d58565b9250506040613e8c86828701613d8e565b9150509250925092565b600060ff82169050919050565b613eac81613e96565b82525050565b6000602082019050613ec76000830184613ea3565b92915050565b6000819050919050565b613ee081613ecd565b82525050565b6000602082019050613efb6000830184613ed7565b92915050565b600060208284031215613f1757613f16613d05565b5b6000613f2584828501613d8e565b91505092915050565b600060208284031215613f4457613f43613d05565b5b6000613f5284828501613d58565b91505092915050565b613f6481613d2f565b82525050565b6000602082019050613f7f6000830184613f5b565b92915050565b6000613f9082613d2f565b9050919050565b613fa081613f85565b8114613fab57600080fd5b50565b600081359050613fbd81613f97565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613fe857613fe7613fc3565b5b8235905067ffffffffffffffff81111561400557614004613fc8565b5b60208301915083600182028301111561402157614020613fcd565b5b9250929050565b60008060008060006080868803121561404457614043613d05565b5b600061405288828901613fae565b955050602061406388828901613d58565b945050604061407488828901613d8e565b935050606086013567ffffffffffffffff81111561409557614094613d0a565b5b6140a188828901613fd2565b92509250509295509295909350565b600063ffffffff82169050919050565b6140c9816140b0565b82525050565b60006020820190506140e460008301846140c0565b92915050565b6140f381613e96565b81146140fe57600080fd5b50565b600081359050614110816140ea565b92915050565b61411f81613ecd565b811461412a57600080fd5b50565b60008135905061413c81614116565b92915050565b60008060008060008060c0878903121561415f5761415e613d05565b5b600061416d89828a01613d58565b965050602061417e89828a01613d8e565b955050604061418f89828a01613d8e565b94505060606141a089828a01614101565b93505060806141b189828a0161412d565b92505060a06141c289828a0161412d565b9150509295509295509295565b600080600080600080600060e0888a0312156141ee576141ed613d05565b5b60006141fc8a828b01613d58565b975050602061420d8a828b01613d58565b965050604061421e8a828b01613d8e565b955050606061422f8a828b01613d8e565b94505060806142408a828b01614101565b93505060a06142518a828b0161412d565b92505060c06142628a828b0161412d565b91505092959891949750929550565b6000806040838503121561428857614287613d05565b5b600061429685828601613d58565b92505060206142a785828601613d58565b9150509250929050565b6142ba816140b0565b81146142c557600080fd5b50565b6000813590506142d7816142b1565b92915050565b600080604083850312156142f4576142f3613d05565b5b600061430285828601613d58565b9250506020614313858286016142c8565b9150509250929050565b614326816140b0565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61435d8161432c565b82525050565b604082016000820151614379600085018261431d565b50602082015161438c6020850182614354565b50505050565b60006040820190506143a76000830184614363565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806143f457607f821691505b60208210811415614408576144076143ad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061444882613d6d565b915061445383613d6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156144885761448761440e565b5b828201905092915050565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b60006144c9601f83613c55565b91506144d482614493565b602082019050919050565b600060208201905081810360008301526144f8816144bc565b9050919050565b7f4552433230466c6173684d696e743a20616d6f756e742065786365656473206d60008201527f6178466c6173684c6f616e000000000000000000000000000000000000000000602082015250565b600061455b602b83613c55565b9150614566826144ff565b604082019050919050565b6000602082019050818103600083015261458a8161454e565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006145bd8385614591565b93506145ca8385846145a2565b6145d383613c99565b840190509392505050565b600060a0820190506145f36000830189613f5b565b6146006020830188613f5b565b61460d6040830187613e19565b61461a6060830186613e19565b818103608083015261462d8184866145b1565b9050979650505050505050565b60008151905061464981614116565b92915050565b60006020828403121561466557614664613d05565b5b60006146738482850161463a565b91505092915050565b7f4552433230466c6173684d696e743a20696e76616c69642072657475726e207660008201527f616c756500000000000000000000000000000000000000000000000000000000602082015250565b60006146d8602483613c55565b91506146e38261467c565b604082019050919050565b60006020820190508181036000830152614707816146cb565b9050919050565b600061471982613d6d565b915061472483613d6d565b9250828210156147375761473661440e565b5b828203905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061479e602e83613c55565b91506147a982614742565b604082019050919050565b600060208201905081810360008301526147cd81614791565b9050919050565b6000819050919050565b6000819050919050565b60006148036147fe6147f9846147d4565b6147de565b613e96565b9050919050565b614813816147e8565b82525050565b600060208201905061482e600083018461480a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006148bf602583613c55565b91506148ca82614863565b604082019050919050565b600060208201905081810360008301526148ee816148b2565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b600061492b601d83613c55565b9150614936826148f5565b602082019050919050565b6000602082019050818103600083015261495a8161491e565b9050919050565b60006080820190506149766000830187613ed7565b6149836020830186613f5b565b6149906040830185613e19565b61499d6060830184613e19565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b60006149dc601983613c55565b91506149e7826149a6565b602082019050919050565b60006020820190508181036000830152614a0b816149cf565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000614a48601d83613c55565b9150614a5382614a12565b602082019050919050565b60006020820190508181036000830152614a7781614a3b565b9050919050565b600060c082019050614a936000830189613ed7565b614aa06020830188613f5b565b614aad6040830187613f5b565b614aba6060830186613e19565b614ac76080830185613e19565b614ad460a0830184613e19565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b6000614b15601e83613c55565b9150614b2082614adf565b602082019050919050565b60006020820190508181036000830152614b4481614b08565b9050919050565b7f4552433230466c6173684d696e743a2077726f6e6720746f6b656e0000000000600082015250565b6000614b81601b83613c55565b9150614b8c82614b4b565b602082019050919050565b60006020820190508181036000830152614bb081614b74565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000614c13602683613c55565b9150614c1e82614bb7565b604082019050919050565b60006020820190508181036000830152614c4281614c06565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000614ca5602483613c55565b9150614cb082614c49565b604082019050919050565b60006020820190508181036000830152614cd481614c98565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000614d37602283613c55565b9150614d4282614cdb565b604082019050919050565b60006020820190508181036000830152614d6681614d2a565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000614da3601d83613c55565b9150614dae82614d6d565b602082019050919050565b60006020820190508181036000830152614dd281614d96565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000614e35602583613c55565b9150614e4082614dd9565b604082019050919050565b60006020820190508181036000830152614e6481614e28565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614ec7602383613c55565b9150614ed282614e6b565b604082019050919050565b60006020820190508181036000830152614ef681614eba565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000614f59602683613c55565b9150614f6482614efd565b604082019050919050565b60006020820190508181036000830152614f8881614f4c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000614fc5602083613c55565b9150614fd082614f8f565b602082019050919050565b60006020820190508181036000830152614ff481614fb8565b9050919050565b7f4552433230536e617073686f743a206964206973203000000000000000000000600082015250565b6000615031601683613c55565b915061503c82614ffb565b602082019050919050565b6000602082019050818103600083015261506081615024565b9050919050565b7f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000600082015250565b600061509d601d83613c55565b91506150a882615067565b602082019050919050565b600060208201905081810360008301526150cc81615090565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b600061512f602683613c55565b915061513a826150d3565b604082019050919050565b6000602082019050818103600083015261515e81615122565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006151c1602b83613c55565b91506151cc82615165565b604082019050919050565b600060208201905081810360008301526151f0816151b4565b9050919050565b600060a08201905061520c6000830188613ed7565b6152196020830187613ed7565b6152266040830186613ed7565b6152336060830185613e19565b6152406080830184613f5b565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061528482613d6d565b915061528f83613d6d565b92508261529f5761529e61524a565b5b828204905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006152e0601483613c55565b91506152eb826152aa565b602082019050919050565b6000602082019050818103600083015261530f816152d3565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b6000615372603083613c55565b915061537d82615316565b604082019050919050565b600060208201905081810360008301526153a181615365565b9050919050565b60006040820190506153bd6000830185613e19565b6153ca6020830184613e19565b9392505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000615407601083613c55565b9150615412826153d1565b602082019050919050565b60006020820190508181036000830152615436816153fa565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061547e60028361543d565b915061548982615448565b600282019050919050565b6000819050919050565b6154af6154aa82613ecd565b615494565b82525050565b60006154c082615471565b91506154cc828561549e565b6020820191506154dc828461549e565b6020820191508190509392505050565b60006080820190506155016000830187613ed7565b61550e6020830186613ea3565b61551b6040830185613ed7565b6155286060830184613ed7565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000615596601883613c55565b91506155a182615560565b602082019050919050565b600060208201905081810360008301526155c581615589565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000615602601f83613c55565b915061560d826155cc565b602082019050919050565b60006020820190508181036000830152615631816155f5565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000615694602283613c55565b915061569f82615638565b604082019050919050565b600060208201905081810360008301526156c381615687565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000615700601f83613c55565b915061570b826156ca565b602082019050919050565b6000602082019050818103600083015261572f816156f3565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000615792602183613c55565b915061579d82615736565b604082019050919050565b600060208201905081810360008301526157c181615785565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000615824602283613c55565b915061582f826157c8565b604082019050919050565b6000602082019050818103600083015261585381615817565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b60006158b6602783613c55565b91506158c18261585a565b604082019050919050565b600060208201905081810360008301526158e5816158a9565b905091905056fea2646970667358221220b86d618d01f34491c16f320172c16517afbfa3ac68853be4d551ef1b59fcb1a664736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x981B24D0 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x6E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x773 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x6AB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x5E1 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x561 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DB JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x411 JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36F JUMPI PUSH2 0x232 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x3E43 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x3EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x3F01 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x40CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0xE38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x573 PUSH2 0x1050 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57D PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x3F01 JUMP JUMPDEST PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH2 0x1175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x3F01 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x635 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x695 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x4142 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x41CF JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x3DA3 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x4271 JUMP JUMPDEST PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x4392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x3F2E JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x79E SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CA SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x817 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x817 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82C PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x839 DUP2 DUP6 DUP6 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x859 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x866 DUP6 DUP3 DUP6 PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x871 DUP6 DUP6 DUP6 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A0 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 DUP2 DUP6 DUP6 PUSH2 0x8B2 DUP6 DUP10 PUSH2 0x162E JUMP JUMPDEST PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x44DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x959 PUSH2 0x195 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x969 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x971 PUSH2 0x1F33 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x97B PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x985 DUP3 DUP3 PUSH2 0x1F96 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x99A PUSH2 0x994 PUSH2 0x184A JUMP JUMPDEST DUP3 PUSH2 0x1FA4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9EA DUP5 PUSH1 0x97 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1FB2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xA01 JUMPI PUSH2 0x9FC DUP6 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA88 PUSH2 0xA82 PUSH2 0x184A JUMP JUMPDEST DUP3 PUSH2 0x20A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAD DUP6 PUSH2 0xC9E JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE6 SWAP1 PUSH2 0x4571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP7 DUP7 PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP PUSH2 0xB07 DUP8 DUP7 PUSH2 0x1F96 JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23E30C8B CALLER DUP10 DUP10 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x464F JUMP JUMPDEST EQ PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x46EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC07 PUSH2 0x21C3 JUMP JUMPDEST SWAP1 POP PUSH2 0xC1F DUP9 ADDRESS DUP5 DUP10 PUSH2 0xC1A SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0xC5A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC74 DUP9 DUP4 DUP9 PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xC83 DUP9 DUP8 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0xC8E DUP9 DUP3 DUP5 PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDA JUMPI PUSH1 0x0 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0xCE2 PUSH2 0x844 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBB PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0xDC5 PUSH1 0x0 PUSH2 0x221B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDD9 DUP3 PUSH2 0xDD3 PUSH2 0x184A JUMP JUMPDEST DUP4 PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0xDE3 DUP3 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE31 PUSH2 0x161 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x22E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xE69 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xE96 JUMPI POP PUSH2 0xE78 ADDRESS PUSH2 0x22EF JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xE95 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECC SWAP1 PUSH2 0x47B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF12 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF86 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504B445200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504B445200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2312 JUMP JUMPDEST PUSH2 0xF8E PUSH2 0x236F JUMP JUMPDEST PUSH2 0xF96 PUSH2 0x23C0 JUMP JUMPDEST PUSH2 0xF9E PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xFA6 PUSH2 0x246A JUMP JUMPDEST PUSH2 0xFE4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504B445200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x24C3 JUMP JUMPDEST PUSH2 0xFEC PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x25A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x104D JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x4819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1058 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x25F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x10D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C7 SWAP1 PUSH2 0x44DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DC PUSH2 0x196 DUP4 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x10F2 SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x111E SWAP1 PUSH2 0x43DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x116B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1140 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x116B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x114E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x117D PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x1185 PUSH2 0x2659 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1198 DUP5 PUSH1 0x98 PUSH2 0x1FB2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x11AE JUMPI PUSH2 0x11A9 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x11B0 JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x12A3 JUMPI PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12D7 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12E5 DUP3 DUP7 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1321 SWAP1 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1337 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x134E PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x135B DUP2 DUP6 DUP6 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A0 SWAP1 PUSH2 0x4941 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140B PUSH2 0x1403 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x26AF JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x26C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1416 DUP2 PUSH2 0x26F4 JUMP JUMPDEST DUP7 EQ PUSH2 0x1457 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144E SWAP1 PUSH2 0x49F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1461 DUP2 DUP9 PUSH2 0x20A8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x14AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A4 SWAP1 PUSH2 0x4A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x14DC DUP13 PUSH2 0x26F4 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14F2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1515 DUP3 PUSH2 0x26AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1525 DUP3 DUP8 DUP8 DUP8 PUSH2 0x26C9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158C SWAP1 PUSH2 0x4B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A0 DUP11 DUP11 DUP11 PUSH2 0x1852 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP1 PUSH2 0x4B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1626 DUP4 DUP4 PUSH2 0x2753 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16BD PUSH2 0x3B69 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CE PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x183E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1835 SWAP1 PUSH2 0x4C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1847 DUP2 PUSH2 0x221B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B9 SWAP1 PUSH2 0x4CBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1932 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1929 SWAP1 PUSH2 0x4D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A10 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A29 DUP5 DUP5 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1AA3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8C SWAP1 PUSH2 0x4DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AA2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1852 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B10 SWAP1 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B80 SWAP1 PUSH2 0x4EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B94 DUP4 DUP4 DUP4 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C12 SWAP1 PUSH2 0x4F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1D1E DUP5 DUP5 DUP5 PUSH2 0x2773 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5F PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1D52 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1D5A PUSH2 0x278E JUMP JUMPDEST PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1DDA JUMPI PUSH1 0x0 PUSH2 0x1D88 DUP5 PUSH2 0x27D3 JUMP JUMPDEST DUP5 PUSH2 0x1D93 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1DA0 DUP9 DUP4 PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1DC8 JUMPI DUP1 SWAP2 POP PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1DD5 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1E3A JUMPI PUSH1 0x0 PUSH2 0x1DEF DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1DFC DUP9 DUP4 PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1E24 JUMPI DUP1 SWAP2 POP PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1E31 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1E89 JUMPI PUSH2 0x1E58 DUP7 PUSH1 0x1 DUP4 PUSH2 0x1E53 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EBD PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EDB PUSH2 0x1062 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F28 SWAP1 PUSH2 0x4FDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1F3B PUSH2 0x2908 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1F7F PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8C SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1FA0 DUP3 DUP3 PUSH2 0x2951 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1FAE DUP3 DUP3 PUSH2 0x29DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x1FF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FEF SWAP1 PUSH2 0x5047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2000 PUSH2 0x29FE JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x2042 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2039 SWAP1 PUSH2 0x50B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x205A DUP6 DUP6 PUSH1 0x0 ADD PUSH2 0x2A0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 EQ ISZERO PUSH2 0x2078 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B3 DUP4 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20C0 DUP5 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x194 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x21BD DUP3 DUP5 DUP4 PUSH2 0x2AC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220A SWAP1 PUSH2 0x5145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2358 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236B DUP3 DUP3 PUSH2 0x2CC4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B5 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2406 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2457 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2468 PUSH2 0x2D45 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B0 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24C1 PUSH2 0x2DA6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2509 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2551 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2E12 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259A SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25EB SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x25FE PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2642 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264F SWAP2 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2665 PUSH1 0x9A PUSH2 0x2ED9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266F PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP PUSH32 0x8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x26A0 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C2 PUSH2 0x26BC PUSH2 0x1D24 JUMP JUMPDEST DUP4 PUSH2 0x2EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x26DA DUP8 DUP8 DUP8 DUP8 PUSH2 0x2F22 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x26E7 DUP2 PUSH2 0x3005 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x161 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2742 DUP2 PUSH2 0x22E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x274D DUP2 PUSH2 0x2ED9 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2763 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x276E DUP4 DUP4 DUP4 PUSH2 0x3173 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x277E DUP4 DUP4 DUP4 PUSH2 0x322D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27B4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x27E6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x27F3 DUP5 PUSH2 0x3258 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2826 JUMPI PUSH2 0x2825 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x283F JUMPI PUSH2 0x283E PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2858 JUMPI PUSH2 0x2857 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2871 JUMPI PUSH2 0x2870 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x288A JUMPI PUSH2 0x2889 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28A3 JUMPI PUSH2 0x28A2 PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x28C4 DUP2 DUP3 DUP6 DUP2 PUSH2 0x28BE JUMPI PUSH2 0x28BD PUSH2 0x524A JUMP JUMPDEST JUMPDEST DIV PUSH2 0x3339 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x28F3 SWAP2 SWAP1 PUSH2 0x5279 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2900 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2910 PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x294F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2946 SWAP1 PUSH2 0x52F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x295B DUP3 DUP3 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x2963 PUSH2 0x34AA JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2989 PUSH2 0x844 JUMP JUMPDEST GT ISZERO PUSH2 0x29CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C1 SWAP1 PUSH2 0x5388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29D9 PUSH2 0x196 PUSH2 0x34CE DUP4 PUSH2 0x34E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x29E9 DUP3 DUP3 PUSH2 0x37B3 JUMP JUMPDEST PUSH2 0x29F8 PUSH2 0x196 PUSH2 0x3983 DUP4 PUSH2 0x34E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0A PUSH1 0x9A PUSH2 0x22E1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x2A26 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 SLOAD SWAP1 POP SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2A7A JUMPI PUSH1 0x0 PUSH2 0x2A45 DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x2A52 DUP8 DUP4 PUSH2 0x3999 JUMP JUMPDEST PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2A64 JUMPI DUP1 SWAP2 POP PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2A71 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2AA2 JUMPI POP DUP4 PUSH2 0x2A9C DUP7 PUSH1 0x1 DUP6 PUSH2 0x2A97 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x3999 JUMP JUMPDEST PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2ABD JUMPI PUSH1 0x1 DUP3 PUSH2 0x2AB4 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2AC3 JUMP JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2B05 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2CBF JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BE4 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2B8D PUSH2 0x195 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3983 DUP6 PUSH2 0x34E4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2BD9 SWAP3 SWAP2 SWAP1 PUSH2 0x53A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CBE JUMPI PUSH1 0x0 DUP1 PUSH2 0x2C67 PUSH2 0x195 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x34CE DUP6 PUSH2 0x34E4 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CB3 SWAP3 SWAP2 SWAP1 PUSH2 0x53A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0A SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x36 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2D29 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA7 JUMP JUMPDEST POP DUP1 PUSH1 0x37 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2D40 SWAP3 SWAP2 SWAP1 PUSH2 0x3BA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8B SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DA4 PUSH2 0x2D9F PUSH2 0x184A JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DEC SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E58 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP2 PUSH2 0x12D DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x12E DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E97 PUSH2 0xA8B JUMP JUMPDEST ISZERO PUSH2 0x2ED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ECE SWAP1 PUSH2 0x541D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F04 SWAP3 SWAP2 SWAP1 PUSH2 0x54B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2F5D JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2F82 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x54EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2FF3 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2FFC JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3019 JUMPI PUSH2 0x3018 PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x302C JUMPI PUSH2 0x302B PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3037 JUMPI PUSH2 0x3170 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x304B JUMPI PUSH2 0x304A PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x305E JUMPI PUSH2 0x305D PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x309F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3096 SWAP1 PUSH2 0x55AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x30B3 JUMPI PUSH2 0x30B2 PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x30C6 JUMPI PUSH2 0x30C5 PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x3107 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30FE SWAP1 PUSH2 0x5618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x311B JUMPI PUSH2 0x311A PUSH2 0x5531 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x312E JUMPI PUSH2 0x312D PUSH2 0x5531 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x316F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3166 SWAP1 PUSH2 0x56AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x317E DUP4 DUP4 DUP4 PUSH2 0x39BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31C9 JUMPI PUSH2 0x31BC DUP3 PUSH2 0x39C0 JUMP JUMPDEST PUSH2 0x31C4 PUSH2 0x3A13 JUMP JUMPDEST PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3214 JUMPI PUSH2 0x3207 DUP4 PUSH2 0x39C0 JUMP JUMPDEST PUSH2 0x320F PUSH2 0x3A13 JUMP JUMPDEST PUSH2 0x3227 JUMP JUMPDEST PUSH2 0x321D DUP4 PUSH2 0x39C0 JUMP JUMPDEST PUSH2 0x3226 DUP3 PUSH2 0x39C0 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3238 DUP4 DUP4 DUP4 PUSH2 0x3A27 JUMP JUMPDEST PUSH2 0x3253 PUSH2 0x3244 DUP5 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x324D DUP5 PUSH2 0xA0D JUMP JUMPDEST DUP4 PUSH2 0x2AC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x327A JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3295 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32B0 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32CB JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32E6 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3301 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x331C JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3330 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3348 JUMPI DUP2 PUSH2 0x334A JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x33C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B9 SWAP1 PUSH2 0x5716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33CE PUSH1 0x0 DUP4 DUP4 PUSH2 0x275B JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x33E0 SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3492 SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x34A6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2773 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x34DC SWAP2 SWAP1 PUSH2 0x443D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x35B3 JUMPI PUSH2 0x350F DUP8 PUSH1 0x1 DUP5 PUSH2 0x350A SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x3624 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x363F JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x36B9 JUMPI PUSH2 0x364D DUP4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x3663 DUP9 PUSH1 0x1 DUP6 PUSH2 0x365E SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x37A9 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x36CE NUMBER PUSH2 0x21C8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36E2 DUP7 PUSH2 0x3A2C JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381A SWAP1 PUSH2 0x57A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382F DUP3 PUSH1 0x0 DUP4 PUSH2 0x275B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x38B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38AD SWAP1 PUSH2 0x583A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x396A SWAP2 SWAP1 PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x397E DUP4 PUSH1 0x0 DUP5 PUSH2 0x2773 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3991 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP PUSH2 0x39B2 DUP2 PUSH2 0x3A97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3A10 PUSH1 0x97 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3A0B DUP4 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x3AA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A25 PUSH1 0x98 PUSH2 0x3A20 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x3AA1 JUMP JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x3A8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A86 SWAP1 PUSH2 0x58CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAB PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3ABA DUP5 PUSH1 0x0 ADD PUSH2 0x3B1C JUMP JUMPDEST LT ISZERO PUSH2 0x3B17 JUMPI DUP3 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x3B33 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x3B64 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x3B45 SWAP2 SWAP1 PUSH2 0x470E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3B56 JUMPI PUSH2 0x3B55 PUSH2 0x4834 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3BB3 SWAP1 PUSH2 0x43DC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3BD5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3C1C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3BEE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3C1C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3C1C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3C1B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3C00 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3C29 SWAP2 SWAP1 PUSH2 0x3C2D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3C46 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3C2E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C84 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C69 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C93 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB5 DUP3 PUSH2 0x3C4A JUMP JUMPDEST PUSH2 0x3CBF DUP2 DUP6 PUSH2 0x3C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C66 JUMP JUMPDEST PUSH2 0x3CD8 DUP2 PUSH2 0x3C99 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CFD DUP2 DUP5 PUSH2 0x3CAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3A DUP3 PUSH2 0x3D0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D4A DUP2 PUSH2 0x3D2F JUMP JUMPDEST DUP2 EQ PUSH2 0x3D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D67 DUP2 PUSH2 0x3D41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D80 DUP2 PUSH2 0x3D6D JUMP JUMPDEST DUP2 EQ PUSH2 0x3D8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D9D DUP2 PUSH2 0x3D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DBA JUMPI PUSH2 0x3DB9 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DC8 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3DD9 DUP6 DUP3 DUP7 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DF8 DUP2 PUSH2 0x3DE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E22 DUP2 PUSH2 0x3D6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E3D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E5C JUMPI PUSH2 0x3E5B PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6A DUP7 DUP3 DUP8 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E7B DUP7 DUP3 DUP8 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E8C DUP7 DUP3 DUP8 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EAC DUP2 PUSH2 0x3E96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3EA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EE0 DUP2 PUSH2 0x3ECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F17 JUMPI PUSH2 0x3F16 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F25 DUP5 DUP3 DUP6 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F44 JUMPI PUSH2 0x3F43 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F52 DUP5 DUP3 DUP6 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F64 DUP2 PUSH2 0x3D2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F90 DUP3 PUSH2 0x3D2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA0 DUP2 PUSH2 0x3F85 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FBD DUP2 PUSH2 0x3F97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3FE8 JUMPI PUSH2 0x3FE7 PUSH2 0x3FC3 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4005 JUMPI PUSH2 0x4004 PUSH2 0x3FC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4021 JUMPI PUSH2 0x4020 PUSH2 0x3FCD JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4044 JUMPI PUSH2 0x4043 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4052 DUP9 DUP3 DUP10 ADD PUSH2 0x3FAE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4063 DUP9 DUP3 DUP10 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4074 DUP9 DUP3 DUP10 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4095 JUMPI PUSH2 0x4094 PUSH2 0x3D0A JUMP JUMPDEST JUMPDEST PUSH2 0x40A1 DUP9 DUP3 DUP10 ADD PUSH2 0x3FD2 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40C9 DUP2 PUSH2 0x40B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x40F3 DUP2 PUSH2 0x3E96 JUMP JUMPDEST DUP2 EQ PUSH2 0x40FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4110 DUP2 PUSH2 0x40EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x411F DUP2 PUSH2 0x3ECD JUMP JUMPDEST DUP2 EQ PUSH2 0x412A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x413C DUP2 PUSH2 0x4116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x415F JUMPI PUSH2 0x415E PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x416D DUP10 DUP3 DUP11 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x417E DUP10 DUP3 DUP11 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x418F DUP10 DUP3 DUP11 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x41A0 DUP10 DUP3 DUP11 ADD PUSH2 0x4101 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x41B1 DUP10 DUP3 DUP11 ADD PUSH2 0x412D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x41C2 DUP10 DUP3 DUP11 ADD PUSH2 0x412D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x41EE JUMPI PUSH2 0x41ED PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41FC DUP11 DUP3 DUP12 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x420D DUP11 DUP3 DUP12 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x421E DUP11 DUP3 DUP12 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x422F DUP11 DUP3 DUP12 ADD PUSH2 0x3D8E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4240 DUP11 DUP3 DUP12 ADD PUSH2 0x4101 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4251 DUP11 DUP3 DUP12 ADD PUSH2 0x412D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4262 DUP11 DUP3 DUP12 ADD PUSH2 0x412D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4288 JUMPI PUSH2 0x4287 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4296 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42A7 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x42BA DUP2 PUSH2 0x40B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x42C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42D7 DUP2 PUSH2 0x42B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42F4 JUMPI PUSH2 0x42F3 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4302 DUP6 DUP3 DUP7 ADD PUSH2 0x3D58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4313 DUP6 DUP3 DUP7 ADD PUSH2 0x42C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4326 DUP2 PUSH2 0x40B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x435D DUP2 PUSH2 0x432C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4379 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x431D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x438C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4354 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x43A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x43F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4408 JUMPI PUSH2 0x4407 PUSH2 0x43AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4448 DUP3 PUSH2 0x3D6D JUMP JUMPDEST SWAP2 POP PUSH2 0x4453 DUP4 PUSH2 0x3D6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4488 JUMPI PUSH2 0x4487 PUSH2 0x440E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C9 PUSH1 0x1F DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x44D4 DUP3 PUSH2 0x4493 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44F8 DUP2 PUSH2 0x44BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230466C6173684D696E743A20616D6F756E742065786365656473206D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6178466C6173684C6F616E000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455B PUSH1 0x2B DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4566 DUP3 PUSH2 0x44FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x458A DUP2 PUSH2 0x454E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45BD DUP4 DUP6 PUSH2 0x4591 JUMP JUMPDEST SWAP4 POP PUSH2 0x45CA DUP4 DUP6 DUP5 PUSH2 0x45A2 JUMP JUMPDEST PUSH2 0x45D3 DUP4 PUSH2 0x3C99 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x45F3 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4600 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x460D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x461A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3E19 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x462D DUP2 DUP5 DUP7 PUSH2 0x45B1 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4649 DUP2 PUSH2 0x4116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4665 JUMPI PUSH2 0x4664 PUSH2 0x3D05 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4673 DUP5 DUP3 DUP6 ADD PUSH2 0x463A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230466C6173684D696E743A20696E76616C69642072657475726E2076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C756500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D8 PUSH1 0x24 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E3 DUP3 PUSH2 0x467C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4707 DUP2 PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4719 DUP3 PUSH2 0x3D6D JUMP JUMPDEST SWAP2 POP PUSH2 0x4724 DUP4 PUSH2 0x3D6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4737 JUMPI PUSH2 0x4736 PUSH2 0x440E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479E PUSH1 0x2E DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x47A9 DUP3 PUSH2 0x4742 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47CD DUP2 PUSH2 0x4791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4803 PUSH2 0x47FE PUSH2 0x47F9 DUP5 PUSH2 0x47D4 JUMP JUMPDEST PUSH2 0x47DE JUMP JUMPDEST PUSH2 0x3E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4813 DUP2 PUSH2 0x47E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x482E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x480A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48BF PUSH1 0x25 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x48CA DUP3 PUSH2 0x4863 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48EE DUP2 PUSH2 0x48B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x492B PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4936 DUP3 PUSH2 0x48F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x495A DUP2 PUSH2 0x491E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4976 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x4983 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4990 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x499D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49DC PUSH1 0x19 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E7 DUP3 PUSH2 0x49A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A0B DUP2 PUSH2 0x49CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A48 PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A53 DUP3 PUSH2 0x4A12 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A77 DUP2 PUSH2 0x4A3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x4A93 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x4AA0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4AAD PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3F5B JUMP JUMPDEST PUSH2 0x4ABA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x4AC7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x4AD4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B15 PUSH1 0x1E DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B20 DUP3 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B44 DUP2 PUSH2 0x4B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230466C6173684D696E743A2077726F6E6720746F6B656E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B81 PUSH1 0x1B DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B8C DUP3 PUSH2 0x4B4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB0 DUP2 PUSH2 0x4B74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C13 PUSH1 0x26 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C1E DUP3 PUSH2 0x4BB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C42 DUP2 PUSH2 0x4C06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CA5 PUSH1 0x24 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CB0 DUP3 PUSH2 0x4C49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CD4 DUP2 PUSH2 0x4C98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D37 PUSH1 0x22 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D42 DUP3 PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D66 DUP2 PUSH2 0x4D2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA3 PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DAE DUP3 PUSH2 0x4D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DD2 DUP2 PUSH2 0x4D96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E35 PUSH1 0x25 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E40 DUP3 PUSH2 0x4DD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E64 DUP2 PUSH2 0x4E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC7 PUSH1 0x23 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ED2 DUP3 PUSH2 0x4E6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EF6 DUP2 PUSH2 0x4EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F59 PUSH1 0x26 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F64 DUP3 PUSH2 0x4EFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F88 DUP2 PUSH2 0x4F4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC5 PUSH1 0x20 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FD0 DUP3 PUSH2 0x4F8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FF4 DUP2 PUSH2 0x4FB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206964206973203000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5031 PUSH1 0x16 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x503C DUP3 PUSH2 0x4FFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5060 DUP2 PUSH2 0x5024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206E6F6E6578697374656E74206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x509D PUSH1 0x1D DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x50A8 DUP3 PUSH2 0x5067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50CC DUP2 PUSH2 0x5090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512F PUSH1 0x26 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x513A DUP3 PUSH2 0x50D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x515E DUP2 PUSH2 0x5122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C1 PUSH1 0x2B DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x51CC DUP3 PUSH2 0x5165 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51F0 DUP2 PUSH2 0x51B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x520C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5219 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5226 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5233 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x5240 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3F5B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5284 DUP3 PUSH2 0x3D6D JUMP JUMPDEST SWAP2 POP PUSH2 0x528F DUP4 PUSH2 0x3D6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x529F JUMPI PUSH2 0x529E PUSH2 0x524A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E0 PUSH1 0x14 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x52EB DUP3 PUSH2 0x52AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x530F DUP2 PUSH2 0x52D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5372 PUSH1 0x30 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x537D DUP3 PUSH2 0x5316 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53A1 DUP2 PUSH2 0x5365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x53BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E19 JUMP JUMPDEST PUSH2 0x53CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3E19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5407 PUSH1 0x10 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x5412 DUP3 PUSH2 0x53D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5436 DUP2 PUSH2 0x53FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547E PUSH1 0x2 DUP4 PUSH2 0x543D JUMP JUMPDEST SWAP2 POP PUSH2 0x5489 DUP3 PUSH2 0x5448 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54AF PUSH2 0x54AA DUP3 PUSH2 0x3ECD JUMP JUMPDEST PUSH2 0x5494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54C0 DUP3 PUSH2 0x5471 JUMP JUMPDEST SWAP2 POP PUSH2 0x54CC DUP3 DUP6 PUSH2 0x549E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x54DC DUP3 DUP5 PUSH2 0x549E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5501 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x550E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3EA3 JUMP JUMPDEST PUSH2 0x551B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3ED7 JUMP JUMPDEST PUSH2 0x5528 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3ED7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5596 PUSH1 0x18 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x55A1 DUP3 PUSH2 0x5560 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55C5 DUP2 PUSH2 0x5589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5602 PUSH1 0x1F DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x560D DUP3 PUSH2 0x55CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5631 DUP2 PUSH2 0x55F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5694 PUSH1 0x22 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x569F DUP3 PUSH2 0x5638 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56C3 DUP2 PUSH2 0x5687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5700 PUSH1 0x1F DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x570B DUP3 PUSH2 0x56CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x572F DUP2 PUSH2 0x56F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5792 PUSH1 0x21 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x579D DUP3 PUSH2 0x5736 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57C1 DUP2 PUSH2 0x5785 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5824 PUSH1 0x22 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x582F DUP3 PUSH2 0x57C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5853 DUP2 PUSH2 0x5817 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B6 PUSH1 0x27 DUP4 PUSH2 0x3C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x58C1 DUP3 PUSH2 0x585A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58E5 DUP2 PUSH2 0x58A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH14 0x618D01F34491C16F320172C16517 0xAF 0xBF LOG3 0xAC PUSH9 0x853BE4D551EF1B59FC 0xB1 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"914:1894:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3579:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5527:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3428:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3276:113:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6208:234:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3133:265:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1727:63:25;;;:::i;:::-;;1796:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;848:89:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5312:262:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2526:126:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5978:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:84:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4136:948:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1270:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2278:160:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3743:125:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2071:101:0;;;:::i;:::-;;1243:161:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3026:126:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1284:301:25;;;:::i;:::-;;1662:59;;;:::i;:::-;;1441:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3677:256:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2702:102:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1591:65:25;;;:::i;:::-;;5673:230:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2731:209:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6929:427:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4064:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6167:585:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2328:637:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1823:216:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4311:149:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:148:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2321:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2491:98:6;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;4867:13;4883:12;:10;:12::i;:::-;4867:28;;4905:32;4914:5;4921:7;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;:::o;3579:106::-;3640:7;3666:12;;3659:19;;3579:106;:::o;5527:286::-;5654:4;5670:15;5688:12;:10;:12::i;:::-;5670:30;;5710:38;5726:4;5732:7;5741:6;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;5802:4;5795:11;;;5527:286;;;;;:::o;3428:91::-;3486:5;3510:2;3503:9;;3428:91;:::o;3276:113:13:-;3336:7;3362:20;:18;:20::i;:::-;3355:27;;3276:113;:::o;6208:234:6:-;6296:4;6312:13;6328:12;:10;:12::i;:::-;6312:28;;6350:64;6359:5;6366:7;6403:10;6375:25;6385:5;6392:7;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;:::-;6431:4;6424:11;;;6208:234;;;;:::o;3133:265:11:-;3231:7;3272:12;3258:11;:26;3250:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3337:54;3356:12;:21;3369:7;3356:21;;;;;;;;;;;;;;;3379:11;3337:18;:54::i;:::-;3330:61;;3133:265;;;;:::o;1727:63:25:-;1334:13:0;:11;:13::i;:::-;1773:10:25::1;:8;:10::i;:::-;1727:63::o:0;1796:93::-;1334:13:0;:11;:13::i;:::-;1865:17:25::1;1871:2;1875:6;1865:5;:17::i;:::-;1796:93:::0;;:::o;848:89:8:-;903:27;909:12;:10;:12::i;:::-;923:6;903:5;:27::i;:::-;848:89;:::o;5312:262:10:-;5399:7;5419:16;5437:13;5454:55;5463:10;5475:24;:33;5500:7;5475:33;;;;;;;;;;;;;;;5454:8;:55::i;:::-;5418:91;;;;5527:11;:40;;5549:18;5559:7;5549:9;:18::i;:::-;5527:40;;;5541:5;5527:40;5520:47;;;;5312:262;;;;:::o;2526:126:11:-;2600:7;2626:10;:19;2637:7;2626:19;;;;;;;;;;;;;;;;;;;;;;;;;2619:26;;2526:126;;;:::o;5978:112::-;6049:34;6059:12;:10;:12::i;:::-;6073:9;6049;:34::i;:::-;5978:112;:::o;1858:84:5:-;1905:4;1928:7;;;;;;;;;;;1921:14;;1858:84;:::o;4136:948:9:-;4321:4;4355:19;4368:5;4355:12;:19::i;:::-;4345:6;:29;;4337:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4432:11;4446:23;4455:5;4462:6;4446:8;:23::i;:::-;4432:37;;4479:32;4493:8;4504:6;4479:5;:32::i;:::-;1014:45;4542:8;:20;;;4563:10;4575:5;4582:6;4590:3;4595:4;;4542:58;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;4521:158;;;;;;;;;;;;:::i;:::-;;;;;;;;;4689:24;4716:19;:17;:19::i;:::-;4689:46;;4745:63;4769:8;4788:4;4804:3;4795:6;:12;;;;:::i;:::-;4745:15;:63::i;:::-;4829:1;4822:3;:8;:42;;;;4862:1;4834:30;;:16;:30;;;4822:42;4818:239;;;4880:38;4894:8;4914:3;4905:6;:12;;;;:::i;:::-;4880:5;:38::i;:::-;4818:239;;;4949:32;4963:8;4974:6;4949:5;:32::i;:::-;4995:51;5013:8;5024:16;5042:3;4995:9;:51::i;:::-;4818:239;5073:4;5066:11;;;;4136:948;;;;;;;:::o;1270:187::-;1345:7;1388:4;1371:22;;:5;:22;;;:79;;1449:1;1371:79;;;1416:30;:28;:30::i;:::-;1396:17;:50;;;;:::i;:::-;1371:79;1364:86;;1270:187;;;:::o;2278:160:11:-;2348:6;2373:58;2402:12;:21;2415:7;2402:21;;;;;;;;;;;;;;;:28;;;;2373;:58::i;:::-;2366:65;;2278:160;;;:::o;3743:125:6:-;3817:7;3843:9;:18;3853:7;3843:18;;;;;;;;;;;;;;;;3836:25;;3743:125;;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1243:161:8:-;1319:46;1335:7;1344:12;:10;:12::i;:::-;1358:6;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;:::-;1243:161;;:::o;3026:126:13:-;3095:7;3121:24;:7;:14;3129:5;3121:14;;;;;;;;;;;;;;;:22;:24::i;:::-;3114:31;;3026:126;;;:::o;1284:301:25:-;3268:19:4;3291:13;;;;;;;;;;;3290:14;3268:36;;3336:14;:34;;;;;3369:1;3354:12;;;;;;;;;;:16;;;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;;3441:1;3425:12;;;;;;;;;;:17;;;3376:66;3335:108;3314:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:1;3525:12;;:16;;;;;;;;;;;;;;;;;;3555:14;3551:65;;;3601:4;3585:13;;:20;;;;;;;;;;;;;;;;;;3551:65;1335:28:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:28::i;:::-;1373:22;:20;:22::i;:::-;1405;:20;:22::i;:::-;1437:16;:14;:16::i;:::-;1463:17;:15;:17::i;:::-;1490:26;;;;;;;;;;;;;;;;;::::0;:18:::1;:26::i;:::-;1526:19;:17;:19::i;:::-;1555:23;:21;:23::i;:::-;3640:14:4::0;3636:99;;;3686:5;3670:13;;:21;;;;;;;;;;;;;;;;;;3710:14;3722:1;3710:14;;;;;;:::i;:::-;;;;;;;;3636:99;3258:483;1284:301:25:o;1662:59::-;1334:13:0;:11;:13::i;:::-;1706:8:25::1;:6;:8::i;:::-;1662:59::o:0;1441:85:0:-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;3677:256:11:-;3764:7;3805:12;3791:11;:26;3783:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3870:56;3889:23;3914:11;3870:18;:56::i;:::-;3863:63;;3677:256;;;:::o;2702:102:6:-;2758:13;2790:7;2783:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:102;:::o;1591:65:25:-;1334:13:0;:11;:13::i;:::-;1638:11:25::1;:9;:11::i;:::-;;1591:65::o:0;5673:230:10:-;5745:7;5765:16;5783:13;5800:43;5809:10;5821:21;5800:8;:43::i;:::-;5764:79;;;;5861:11;:35;;5883:13;:11;:13::i;:::-;5861:35;;;5875:5;5861:35;5854:42;;;;5673:230;;;:::o;2731:209:11:-;2804:7;2823:11;2837:12;:21;2850:7;2837:21;;;;;;;;;;;;;;;:28;;;;2823:42;;2889:1;2882:3;:8;:51;;2897:12;:21;2910:7;2897:21;;;;;;;;;;;;;;;2925:1;2919:3;:7;;;;:::i;:::-;2897:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;2882:51;;;2893:1;2882:51;2875:58;;;;;2731:209;;;:::o;6929:427:6:-;7022:4;7038:13;7054:12;:10;:12::i;:::-;7038:28;;7076:24;7103:25;7113:5;7120:7;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;:::-;7345:4;7338:11;;;;6929:427;;;;:::o;4064:189::-;4143:4;4159:13;4175:12;:10;:12::i;:::-;4159:28;;4197;4207:5;4214:2;4218:6;4197:9;:28::i;:::-;4242:4;4235:11;;;4064:189;;;;:::o;6167:585:11:-;6386:6;6367:15;:25;;6359:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6436:14;6453:180;6491:87;1744:71;6551:9;6562:5;6569:6;6518:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6508:69;;;;;;6491:16;:87::i;:::-;6592:1;6607;6622;6453:24;:180::i;:::-;6436:197;;6660:17;6670:6;6660:9;:17::i;:::-;6651:5;:26;6643:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6717:28;6727:6;6735:9;6717;:28::i;:::-;6349:403;6167:585;;;;;;:::o;2328:637:13:-;2563:8;2544:15;:27;;2536:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2616:18;1363:95;2676:5;2683:7;2692:5;2699:16;2709:5;2699:9;:16::i;:::-;2717:8;2647:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2637:90;;;;;;2616:111;;2738:12;2753:28;2770:10;2753:16;:28::i;:::-;2738:43;;2792:14;2809:39;2834:4;2840:1;2843;2846;2809:24;:39::i;:::-;2792:56;;2876:5;2866:15;;:6;:15;;;2858:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2927:31;2936:5;2943:7;2952:5;2927:8;:31::i;:::-;2526:439;;;2328:637;;;;;;;:::o;1823:216:9:-;1910:7;1954:4;1937:22;;:5;:22;;;1929:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2008:24;2018:5;2025:6;2008:9;:24::i;:::-;2001:31;;1823:216;;;;:::o;4311:149:6:-;4400:7;4426:11;:18;4438:5;4426:18;;;;;;;;;;;;;;;:27;4445:7;4426:27;;;;;;;;;;;;;;;;4419:34;;4311:149;;;;:::o;2055:148:11:-;2134:17;;:::i;:::-;2170:12;:21;2183:7;2170:21;;;;;;;;;;;;;;;2192:3;2170:26;;;;;;;;;;:::i;:::-;;;;;;;;;2163:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:148;;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;2429:1:::1;2409:22;;:8;:22;;;;2401:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;850:96:17:-;903:7;929:10;922:17;;850:96;:::o;10841:370:6:-;10989:1;10972:19;;:5;:19;;;;10964:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11069:1;11050:21;;:7;:21;;;;11042:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11151:6;11121:11;:18;11133:5;11121:18;;;;;;;;;;;;;;;:27;11140:7;11121:27;;;;;;;;;;;;;;;:36;;;;11188:7;11172:32;;11181:5;11172:32;;;11197:6;11172:32;;;;;;:::i;:::-;;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;11708:17;11688:16;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11684:243;11612:321;11492:441;;;:::o;7810:818::-;7952:1;7936:18;;:4;:18;;;;7928:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8028:1;8014:16;;:2;:16;;;;8006:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8081:38;8102:4;8108:2;8112:6;8081:20;:38::i;:::-;8130:19;8152:9;:15;8162:4;8152:15;;;;;;;;;;;;;;;;8130:37;;8200:6;8185:11;:21;;8177:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8315:6;8301:11;:20;8283:9;:15;8293:4;8283:15;;;;;;;;;;;;;;;:38;;;;8515:6;8498:9;:13;8508:2;8498:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8562:2;8547:26;;8556:4;8547:26;;;8566:6;8547:26;;;;;;:::i;:::-;;;;;;;;8584:37;8604:4;8610:2;8614:6;8584:19;:37::i;:::-;7918:710;7810:818;;;:::o;2851:160:22:-;2904:7;2930:74;1604:95;2964:17;:15;:17::i;:::-;2983:20;:18;:20::i;:::-;2930:21;:74::i;:::-;2923:81;;2851:160;:::o;4017:1880:11:-;4116:7;5204:14;5221:5;:12;;;;5204:29;;5244:11;5269:12;5284:6;5269:21;;5314:1;5305:6;:10;5301:255;;;5331:11;5354:28;5375:6;5354:20;:28::i;:::-;5345:6;:37;;;;:::i;:::-;5331:51;;5438:11;5400:25;5414:5;5421:3;5400:13;:25::i;:::-;:35;;;;;;;;;;;;:49;;;5396:150;;;5476:3;5469:10;;5396:150;;;5530:1;5524:3;:7;;;;:::i;:::-;5518:13;;5396:150;5317:239;5301:255;5566;5579:4;5573:3;:10;5566:255;;;5599:11;5613:34;5637:3;5642:4;5613:23;:34::i;:::-;5599:48;;5703:11;5665:25;5679:5;5686:3;5665:13;:25::i;:::-;:35;;;;;;;;;;;;:49;;;5661:150;;;5741:3;5734:10;;5661:150;;;5795:1;5789:3;:7;;;;:::i;:::-;5783:13;;5661:150;5585:236;5566:255;;;5846:1;5838:4;:9;:52;;5854:30;5868:5;5882:1;5875:4;:8;;;;:::i;:::-;5854:13;:30::i;:::-;:36;;;;;;;;;;;;5838:52;;;5850:1;5838:52;5831:59;;;;;;;4017:1880;;;;:::o;1599:130:0:-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;2676:117:5:-;1729:16;:14;:16::i;:::-;2744:5:::1;2734:7;;:15;;;;;;;;;;;;;;;;;;2764:22;2773:12;:10;:12::i;:::-;2764:22;;;;;;:::i;:::-;;;;;;;;2676:117::o:0;2462:164:25:-;2596:23;2608:2;2612:6;2596:11;:23::i;:::-;2462:164;;:::o;2632:174::-;2771:28;2783:7;2792:6;2771:11;:28::i;:::-;2632:174;;:::o;6724:1594:10:-;6813:4;6819:7;6859:1;6846:10;:14;6838:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;6919:23;:21;:23::i;:::-;6905:10;:37;;6897:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;8099:13;8115:40;8144:10;8115:9;:13;;:28;;:40;;;;:::i;:::-;8099:56;;8179:9;:13;;:20;;;;8170:5;:29;8166:146;;;8223:5;8230:1;8215:17;;;;;;;8166:146;8271:4;8277:9;:16;;8294:5;8277:23;;;;;;;;:::i;:::-;;;;;;;;;;8263:38;;;;;6724:1594;;;;;;:::o;8175:380:11:-;8259:23;8285:20;8295:9;8285;:20::i;:::-;8259:46;;8315:24;8342:20;8352:9;8342;:20::i;:::-;8315:47;;8396:9;8372:10;:21;8383:9;8372:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8465:9;8421:54;;8448:15;8421:54;;8437:9;8421:54;;;;;;;;;;;;8486:62;8503:15;8520:9;8531:16;8486;:62::i;:::-;8249:306;;8175:380;;:::o;2976:103:9:-;3036:7;2976:103;:::o;15275:187:24:-;15331:6;15366:16;15357:25;;:5;:25;;15349:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15449:5;15435:20;;15275:187;;;:::o;2673::0:-;2746:16;2765:6;;;;;;;;;;;2746:25;;2790:8;2781:6;;:17;;;;;;;;;;;;;;;;;;2844:8;2813:40;;2834:8;2813:40;;;;;;;;;;;;2736:124;2673:187;:::o;838:112:18:-;903:7;929;:14;;;922:21;;838:112;;;:::o;1186:320:15:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;2114:147:6:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2216:38:6::1;2239:5;2246:7;2216:22;:38::i;:::-;2114:147:::0;;:::o;594:65:8:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;594:65:8:o;2568::10:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2568:65:10:o;1003:95:0:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:0::1;:24;:26::i;:::-;1003:95::o:0;1063:97:5:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1126:27:5::1;:25;:27::i;:::-;1063:97::o:0;2055:125:13:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2139:34:13::1;2163:4;2139:34;;;;;;;;;;;;;;;;::::0;:23:::1;:34::i;:::-;2055:125:::0;:::o;1463:62:11:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1463:62:11:o;820:66:9:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;820:66:9:o;2429:115:5:-;1482:19;:17;:19::i;:::-;2498:4:::1;2488:7;;:14;;;;;;;;;;;;;;;;;;2517:20;2524:12;:10;:12::i;:::-;2517:20;;;;;;:::i;:::-;;;;;;;;2429:115::o:0;4802:217:10:-;4849:7;4868:30;:18;:28;:30::i;:::-;4909:17;4929:23;:21;:23::i;:::-;4909:43;;4967:19;4976:9;4967:19;;;;;;:::i;:::-;;;;;;;;5003:9;4996:16;;;4802:217;:::o;3899:176:22:-;3976:7;4002:66;4035:20;:18;:20::i;:::-;4057:10;4002:32;:66::i;:::-;3995:73;;3899:176;;;:::o;6718:270:21:-;6841:7;6861:17;6880:18;6902:25;6913:4;6919:1;6922;6925;6902:10;:25::i;:::-;6860:67;;;;6937:18;6949:5;6937:11;:18::i;:::-;6972:9;6965:16;;;;6718:270;;;;;;:::o;3520:214:13:-;3580:15;3607:41;3651:7;:14;3659:5;3651:14;;;;;;;;;;;;;;;3607:58;;3685:15;:5;:13;:15::i;:::-;3675:25;;3710:17;:5;:15;:17::i;:::-;3597:137;3520:214;;;:::o;2428:229:9:-;2509:7;2428:229;;;;:::o;1895:267:25:-;1482:19:5;:17;:19::i;:::-;2111:44:25::1;2138:4;2144:2;2148:6;2111:26;:44::i;:::-;1895:267:::0;;;:::o;2236:220::-;2406:43;2432:4;2438:2;2442:6;2406:25;:43::i;:::-;2236:220;;;:::o;4311:103:22:-;4369:7;4395:12;;4388:19;;4311:103;:::o;4653:109::-;4714:7;4740:15;;4733:22;;4653:109;:::o;3017:257::-;3157:7;3204:8;3214;3224:11;3237:13;3260:4;3193:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3183:84;;;;;;3176:91;;3017:257;;;;;:::o;6291:1642:23:-;6339:7;6367:1;6362;:6;6358:45;;;6391:1;6384:8;;;;6358:45;7082:14;7116:1;7105:7;7110:1;7105:4;:7::i;:::-;:12;;7099:1;:19;;7082:36;;7577:1;7566:6;7562:1;:10;;;;;:::i;:::-;;;7553:6;:19;7552:26;;7543:35;;7626:1;7615:6;7611:1;:10;;;;;:::i;:::-;;;7602:6;:19;7601:26;;7592:35;;7675:1;7664:6;7660:1;:10;;;;;:::i;:::-;;;7651:6;:19;7650:26;;7641:35;;7724:1;7713:6;7709:1;:10;;;;;:::i;:::-;;;7700:6;:19;7699:26;;7690:35;;7773:1;7762:6;7758:1;:10;;;;;:::i;:::-;;;7749:6;:19;7748:26;;7739:35;;7822:1;7811:6;7807:1;:10;;;;;:::i;:::-;;;7798:6;:19;7797:26;;7788:35;;7871:1;7860:6;7856:1;:10;;;;;:::i;:::-;;;7847:6;:19;7846:26;;7837:35;;7893:23;7897:6;7909;7905:1;:10;;;;;:::i;:::-;;;7893:3;:23::i;:::-;7886:30;;;6291:1642;;;;:::o;10295:239:11:-;10381:25;10451:10;10448:1;10441:21;10514:3;10507:4;10504:1;10494:18;10490:28;10475:43;;10295:239;;;;:::o;816:153:23:-;878:7;961:1;956;952;:5;951:11;;;;:::i;:::-;946:1;942;:5;941:21;;;;:::i;:::-;934:28;;816:153;;;;:::o;2188:106:5:-;2254:8;:6;:8::i;:::-;2246:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2188:106::o;7046:285:11:-;7130:28;7142:7;7151:6;7130:11;:28::i;:::-;7193:12;:10;:12::i;:::-;7176:29;;:13;:11;:13::i;:::-;:29;;7168:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7269:55;7286:23;7311:4;7317:6;7269:16;:55::i;:::-;;;7046:285;;:::o;7420:190::-;7504:28;7516:7;7525:6;7504:11;:28::i;:::-;7543:60;7560:23;7585:9;7596:6;7543:16;:60::i;:::-;;;7420:190;;:::o;5080:125:10:-;5144:7;5170:28;:18;:26;:28::i;:::-;5163:35;;5080:125;:::o;757:943:16:-;846:7;885:1;869:5;:12;;;;:17;865:56;;;909:1;902:8;;;;865:56;931:11;956:12;971:5;:12;;;;956:27;;994:445;1007:4;1001:3;:10;994:445;;;1027:11;1041:34;1065:3;1070:4;1041:23;:34::i;:::-;1027:48;;1325:7;1292:24;1305:5;1312:3;1292:12;:24::i;:::-;:30;;;:40;1288:141;;;1359:3;1352:10;;1288:141;;;1413:1;1407:3;:7;;;;:::i;:::-;1401:13;;1288:141;1013:426;994:445;;;1562:1;1556:3;:7;:56;;;;;1605:7;1567:28;1580:5;1593:1;1587:3;:7;;;;:::i;:::-;1567:12;:28::i;:::-;:34;;;:45;1556:56;1552:142;;;1641:1;1635:3;:7;;;;:::i;:::-;1628:14;;;;;;1552:142;1680:3;1673:10;;;;757:943;;;;;:::o;8561:627:11:-;8688:3;8681:10;;:3;:10;;;;:24;;;;;8704:1;8695:6;:10;8681:24;8677:505;;;8740:1;8725:17;;:3;:17;;;8721:221;;8763:17;8782;8803:54;8820:12;:17;8833:3;8820:17;;;;;;;;;;;;;;;8839:9;8850:6;8803:16;:54::i;:::-;8762:95;;;;8901:3;8880:47;;;8906:9;8917;8880:47;;;;;;;:::i;:::-;;;;;;;;8744:198;;8721:221;8975:1;8960:17;;:3;:17;;;8956:216;;8998:17;9017;9038:49;9055:12;:17;9068:3;9055:17;;;;;;;;;;;;;;;9074:4;9080:6;9038:16;:49::i;:::-;8997:90;;;;9131:3;9110:47;;;9136:9;9147;9110:47;;;;;;;:::i;:::-;;;;;;;;8979:193;;8956:216;8677:505;8561:627;;;:::o;2267:159:6:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2387:5:6::1;2379;:13;;;;;;;;;;;;:::i;:::-;;2412:7;2402;:17;;;;;;;;;;;;:::i;:::-;;2267:159:::0;;:::o;1104:111:0:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:0::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;1166:95:5:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1249:5:5::1;1239:7;;:15;;;;;;;;;;;;;;;;;;1166:95::o:0;2468:297:22:-;5363:13:4;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2580:18:22::1;2617:4;2601:22;;;;;;2580:43;;2633:21;2673:7;2657:25;;;;;;2633:49;;2707:10;2692:12;:25;;;;2745:13;2727:15;:31;;;;2570:195;;2468:297:::0;;:::o;2010:106:5:-;2080:8;:6;:8::i;:::-;2079:9;2071:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2010:106::o;956:123:18:-;1061:1;1043:7;:14;;;:19;;;;;;;;;;;956:123;:::o;8374:194:21:-;8467:7;8532:15;8549:10;8503:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8493:68;;;;;;8486:75;;8374:194;;;;:::o;5091:1494::-;5217:7;5226:12;6141:66;6136:1;6128:10;;:79;6124:161;;;6239:1;6243:30;6223:51;;;;;;6124:161;6379:14;6396:24;6406:4;6412:1;6415;6418;6396:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6379:41;;6452:1;6434:20;;:6;:20;;;6430:101;;;6486:1;6490:29;6470:50;;;;;;;6430:101;6549:6;6557:20;6541:37;;;;;5091:1494;;;;;;;;:::o;592:511::-;669:20;660:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;656:441;;;705:7;;656:441;765:29;756:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;752:345;;;810:34;;;;;;;;;;:::i;:::-;;;;;;;;752:345;874:35;865:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;861:236;;;925:41;;;;;;;;;;:::i;:::-;;;;;;;;861:236;996:30;987:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;983:114;;;1042:44;;;;;;;;;;:::i;:::-;;;;;;;;983:114;592:511;;:::o;6116:602:10:-;6254:44;6281:4;6287:2;6291:6;6254:26;:44::i;:::-;6329:1;6313:18;;:4;:18;;;6309:403;;;6367:26;6390:2;6367:22;:26::i;:::-;6407:28;:26;:28::i;:::-;6309:403;;;6470:1;6456:16;;:2;:16;;;6452:260;;;6508:28;6531:4;6508:22;:28::i;:::-;6550;:26;:28::i;:::-;6452:260;;;6633:28;6656:4;6633:22;:28::i;:::-;6675:26;6698:2;6675:22;:26::i;:::-;6452:260;6309:403;6116:602;;;:::o;7750:254:11:-;7887:43;7913:4;7919:2;7923:6;7887:25;:43::i;:::-;7941:56;7958:15;7968:4;7958:9;:15::i;:::-;7975:13;7985:2;7975:9;:13::i;:::-;7990:6;7941:16;:56::i;:::-;7750:254;;;:::o;8394:983:23:-;8446:7;8465:14;8482:1;8465:18;;8536:1;8530:3;8521:5;:12;;:16;8517:99;;;8567:3;8557:13;;;;;8598:3;8588:13;;;;8517:99;8647:1;8642:2;8633:5;:11;;:15;8629:96;;;8678:2;8668:12;;;;;8708:2;8698:12;;;;8629:96;8756:1;8751:2;8742:5;:11;;:15;8738:96;;;8787:2;8777:12;;;;;8817:2;8807:12;;;;8738:96;8865:1;8860:2;8851:5;:11;;:15;8847:96;;;8896:2;8886:12;;;;;8926:2;8916:12;;;;8847:96;8973:1;8969;8960:5;:10;;:14;8956:93;;;9004:1;8994:11;;;;;9033:1;9023:11;;;;8956:93;9079:1;9075;9066:5;:10;;:14;9062:93;;;9110:1;9100:11;;;;;9139:1;9129:11;;;;9062:93;9185:1;9181;9172:5;:10;;:14;9168:93;;;9216:1;9206:11;;;;;9245:1;9235:11;;;;9168:93;9291:1;9287;9278:5;:10;;:14;9274:64;;;9322:1;9312:11;;;;9274:64;9364:6;9357:13;;;8394:983;;;:::o;599:104::-;657:7;687:1;683;:5;:13;;695:1;683:13;;;691:1;683:13;676:20;;599:104;;;;:::o;8904:535:6:-;9006:1;8987:21;;:7;:21;;;;8979:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;9055:49;9084:1;9088:7;9097:6;9055:20;:49::i;:::-;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;;;;;9305:6;9283:9;:18;9293:7;9283:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9357:7;9336:37;;9353:1;9336:37;;;9366:6;9336:37;;;;;;:::i;:::-;;;;;;;;9384:48;9412:1;9416:7;9425:6;9384:19;:48::i;:::-;8904:535;;:::o;6854:103:11:-;6907:7;6933:17;6926:24;;6854:103;:::o;9949:96::-;10007:7;10037:1;10033;:5;;;;:::i;:::-;10026:12;;9949:96;;;;:::o;9194:749::-;9364:17;9383;9412:11;9426:5;:12;;;;9412:26;;9449:25;9484:1;9477:3;:8;:59;;9507:29;9521:5;9534:1;9528:3;:7;;;;:::i;:::-;9507:13;:29::i;:::-;9477:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9488:16;;;;;;;;9499:1;9488:16;;;;;;9502:1;9488:16;;;;;9477:59;9449:87;;9559:7;:13;;;9547:25;;;;9594:20;9597:9;9608:5;9594:2;:20;;:::i;:::-;9582:32;;9635:1;9629:3;:7;:44;;;;;9661:12;9640:7;:17;;;:33;;;9629:44;9625:312;;;9727:40;9757:9;9727:29;:40::i;:::-;9689:29;9703:5;9716:1;9710:3;:7;;;;:::i;:::-;9689:13;:29::i;:::-;:35;;;:78;;;;;;;;;;;;;;;;;;9625:312;;;9798:5;9809:116;;;;;;;;9832:42;9861:12;9832:28;:42::i;:::-;9809:116;;;;;;9883:40;9913:9;9883:29;:40::i;:::-;9809:116;;;;;9798:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9625:312;9402:541;;9194:749;;;;;;:::o;9759:659:6:-;9861:1;9842:21;;:7;:21;;;;9834:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9912:49;9933:7;9950:1;9954:6;9912:20;:49::i;:::-;9972:22;9997:9;:18;10007:7;9997:18;;;;;;;;;;;;;;;;9972:43;;10051:6;10033:14;:24;;10025:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;10168:6;10151:14;:23;10130:9;:18;10140:7;10130:18;;;;;;;;;;;;;;;:44;;;;10283:6;10267:12;;:22;;;;;;;;;;;10341:1;10315:37;;10324:7;10315:37;;;10345:6;10315:37;;;;;;:::i;:::-;;;;;;;;10363:48;10383:7;10400:1;10404:6;10363:19;:48::i;:::-;9824:594;9759:659;;:::o;10051:101:11:-;10114:7;10144:1;10140;:5;;;;:::i;:::-;10133:12;;10051:101;;;;:::o;2996:345:16:-;3077:42;3131:12;3229:8;3226:1;3219:19;3283:3;3276:4;3273:1;3263:18;3259:28;3251:36;;3313:21;:4;:19;:21::i;:::-;3306:28;;;2996:345;;;;:::o;12517:121:6:-;;;;:::o;8324:144:10:-;8391:70;8407:24;:33;8432:7;8407:33;;;;;;;;;;;;;;;8442:18;8452:7;8442:9;:18::i;:::-;8391:15;:70::i;:::-;8324:144;:::o;8474:116::-;8530:53;8546:21;8569:13;:11;:13::i;:::-;8530:15;:53::i;:::-;8474:116::o;13226:120:6:-;;;;:::o;2847:192:24:-;2904:7;2940:17;2931:26;;:5;:26;;2923:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3026:5;3011:21;;2847:192;;;:::o;2489:190:19:-;2550:21;2659:4;2649:14;;2489:190;;;:::o;8596:304:10:-;8690:17;8710:23;:21;:23::i;:::-;8690:43;;8780:9;8747:30;8763:9;:13;;8747:15;:30::i;:::-;:42;8743:151;;;8805:9;:13;;8824:9;8805:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8848:9;:16;;8870:12;8848:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8743:151;8680:220;8596:304;;:::o;8906:206::-;8976:7;9013:1;8999:3;:10;;;;:15;8995:111;;;9037:1;9030:8;;;;8995:111;9076:3;9093:1;9080:3;:10;;;;:14;;;;:::i;:::-;9076:19;;;;;;;;:::i;:::-;;;;;;;;;;9069:26;;8906:206;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1601:117;1710:1;1707;1700:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:77::-;4938:7;4967:5;4956:16;;4901:77;;;:::o;4984:118::-;5071:24;5089:5;5071:24;:::i;:::-;5066:3;5059:37;4984:118;;:::o;5108:222::-;5201:4;5239:2;5228:9;5224:18;5216:26;;5252:71;5320:1;5309:9;5305:17;5296:6;5252:71;:::i;:::-;5108:222;;;;:::o;5336:329::-;5395:6;5444:2;5432:9;5423:7;5419:23;5415:32;5412:119;;;5450:79;;:::i;:::-;5412:119;5570:1;5595:53;5640:7;5631:6;5620:9;5616:22;5595:53;:::i;:::-;5585:63;;5541:117;5336:329;;;;:::o;5671:::-;5730:6;5779:2;5767:9;5758:7;5754:23;5750:32;5747:119;;;5785:79;;:::i;:::-;5747:119;5905:1;5930:53;5975:7;5966:6;5955:9;5951:22;5930:53;:::i;:::-;5920:63;;5876:117;5671:329;;;;:::o;6006:118::-;6093:24;6111:5;6093:24;:::i;:::-;6088:3;6081:37;6006:118;;:::o;6130:222::-;6223:4;6261:2;6250:9;6246:18;6238:26;;6274:71;6342:1;6331:9;6327:17;6318:6;6274:71;:::i;:::-;6130:222;;;;:::o;6358:136::-;6435:7;6464:24;6482:5;6464:24;:::i;:::-;6453:35;;6358:136;;;:::o;6500:202::-;6613:64;6671:5;6613:64;:::i;:::-;6606:5;6603:75;6593:103;;6692:1;6689;6682:12;6593:103;6500:202;:::o;6708:219::-;6794:5;6832:6;6819:20;6810:29;;6848:73;6915:5;6848:73;:::i;:::-;6708:219;;;;:::o;6933:117::-;7042:1;7039;7032:12;7056:117;7165:1;7162;7155:12;7179:117;7288:1;7285;7278:12;7315:552;7372:8;7382:6;7432:3;7425:4;7417:6;7413:17;7409:27;7399:122;;7440:79;;:::i;:::-;7399:122;7553:6;7540:20;7530:30;;7583:18;7575:6;7572:30;7569:117;;;7605:79;;:::i;:::-;7569:117;7719:4;7711:6;7707:17;7695:29;;7773:3;7765:4;7757:6;7753:17;7743:8;7739:32;7736:41;7733:128;;;7780:79;;:::i;:::-;7733:128;7315:552;;;;;:::o;7873:1043::-;8010:6;8018;8026;8034;8042;8091:3;8079:9;8070:7;8066:23;8062:33;8059:120;;;8098:79;;:::i;:::-;8059:120;8218:1;8243:93;8328:7;8319:6;8308:9;8304:22;8243:93;:::i;:::-;8233:103;;8189:157;8385:2;8411:53;8456:7;8447:6;8436:9;8432:22;8411:53;:::i;:::-;8401:63;;8356:118;8513:2;8539:53;8584:7;8575:6;8564:9;8560:22;8539:53;:::i;:::-;8529:63;;8484:118;8669:2;8658:9;8654:18;8641:32;8700:18;8692:6;8689:30;8686:117;;;8722:79;;:::i;:::-;8686:117;8835:64;8891:7;8882:6;8871:9;8867:22;8835:64;:::i;:::-;8817:82;;;;8612:297;7873:1043;;;;;;;;:::o;8922:93::-;8958:7;8998:10;8991:5;8987:22;8976:33;;8922:93;;;:::o;9021:115::-;9106:23;9123:5;9106:23;:::i;:::-;9101:3;9094:36;9021:115;;:::o;9142:218::-;9233:4;9271:2;9260:9;9256:18;9248:26;;9284:69;9350:1;9339:9;9335:17;9326:6;9284:69;:::i;:::-;9142:218;;;;:::o;9366:118::-;9437:22;9453:5;9437:22;:::i;:::-;9430:5;9427:33;9417:61;;9474:1;9471;9464:12;9417:61;9366:118;:::o;9490:135::-;9534:5;9572:6;9559:20;9550:29;;9588:31;9613:5;9588:31;:::i;:::-;9490:135;;;;:::o;9631:122::-;9704:24;9722:5;9704:24;:::i;:::-;9697:5;9694:35;9684:63;;9743:1;9740;9733:12;9684:63;9631:122;:::o;9759:139::-;9805:5;9843:6;9830:20;9821:29;;9859:33;9886:5;9859:33;:::i;:::-;9759:139;;;;:::o;9904:1053::-;10006:6;10014;10022;10030;10038;10046;10095:3;10083:9;10074:7;10070:23;10066:33;10063:120;;;10102:79;;:::i;:::-;10063:120;10222:1;10247:53;10292:7;10283:6;10272:9;10268:22;10247:53;:::i;:::-;10237:63;;10193:117;10349:2;10375:53;10420:7;10411:6;10400:9;10396:22;10375:53;:::i;:::-;10365:63;;10320:118;10477:2;10503:53;10548:7;10539:6;10528:9;10524:22;10503:53;:::i;:::-;10493:63;;10448:118;10605:2;10631:51;10674:7;10665:6;10654:9;10650:22;10631:51;:::i;:::-;10621:61;;10576:116;10731:3;10758:53;10803:7;10794:6;10783:9;10779:22;10758:53;:::i;:::-;10748:63;;10702:119;10860:3;10887:53;10932:7;10923:6;10912:9;10908:22;10887:53;:::i;:::-;10877:63;;10831:119;9904:1053;;;;;;;;:::o;10963:1199::-;11074:6;11082;11090;11098;11106;11114;11122;11171:3;11159:9;11150:7;11146:23;11142:33;11139:120;;;11178:79;;:::i;:::-;11139:120;11298:1;11323:53;11368:7;11359:6;11348:9;11344:22;11323:53;:::i;:::-;11313:63;;11269:117;11425:2;11451:53;11496:7;11487:6;11476:9;11472:22;11451:53;:::i;:::-;11441:63;;11396:118;11553:2;11579:53;11624:7;11615:6;11604:9;11600:22;11579:53;:::i;:::-;11569:63;;11524:118;11681:2;11707:53;11752:7;11743:6;11732:9;11728:22;11707:53;:::i;:::-;11697:63;;11652:118;11809:3;11836:51;11879:7;11870:6;11859:9;11855:22;11836:51;:::i;:::-;11826:61;;11780:117;11936:3;11963:53;12008:7;11999:6;11988:9;11984:22;11963:53;:::i;:::-;11953:63;;11907:119;12065:3;12092:53;12137:7;12128:6;12117:9;12113:22;12092:53;:::i;:::-;12082:63;;12036:119;10963:1199;;;;;;;;;;:::o;12168:474::-;12236:6;12244;12293:2;12281:9;12272:7;12268:23;12264:32;12261:119;;;12299:79;;:::i;:::-;12261:119;12419:1;12444:53;12489:7;12480:6;12469:9;12465:22;12444:53;:::i;:::-;12434:63;;12390:117;12546:2;12572:53;12617:7;12608:6;12597:9;12593:22;12572:53;:::i;:::-;12562:63;;12517:118;12168:474;;;;;:::o;12648:120::-;12720:23;12737:5;12720:23;:::i;:::-;12713:5;12710:34;12700:62;;12758:1;12755;12748:12;12700:62;12648:120;:::o;12774:137::-;12819:5;12857:6;12844:20;12835:29;;12873:32;12899:5;12873:32;:::i;:::-;12774:137;;;;:::o;12917:472::-;12984:6;12992;13041:2;13029:9;13020:7;13016:23;13012:32;13009:119;;;13047:79;;:::i;:::-;13009:119;13167:1;13192:53;13237:7;13228:6;13217:9;13213:22;13192:53;:::i;:::-;13182:63;;13138:117;13294:2;13320:52;13364:7;13355:6;13344:9;13340:22;13320:52;:::i;:::-;13310:62;;13265:117;12917:472;;;;;:::o;13395:105::-;13470:23;13487:5;13470:23;:::i;:::-;13465:3;13458:36;13395:105;;:::o;13506:142::-;13543:7;13583:58;13576:5;13572:70;13561:81;;13506:142;;;:::o;13654:108::-;13731:24;13749:5;13731:24;:::i;:::-;13726:3;13719:37;13654:108;;:::o;13858:517::-;14011:4;14006:3;14002:14;14103:4;14096:5;14092:16;14086:23;14122:61;14177:4;14172:3;14168:14;14154:12;14122:61;:::i;:::-;14026:167;14276:4;14269:5;14265:16;14259:23;14295:63;14352:4;14347:3;14343:14;14329:12;14295:63;:::i;:::-;14203:165;13980:395;13858:517;;:::o;14381:334::-;14530:4;14568:2;14557:9;14553:18;14545:26;;14581:127;14705:1;14694:9;14690:17;14681:6;14581:127;:::i;:::-;14381:334;;;;:::o;14721:180::-;14769:77;14766:1;14759:88;14866:4;14863:1;14856:15;14890:4;14887:1;14880:15;14907:320;14951:6;14988:1;14982:4;14978:12;14968:22;;15035:1;15029:4;15025:12;15056:18;15046:81;;15112:4;15104:6;15100:17;15090:27;;15046:81;15174:2;15166:6;15163:14;15143:18;15140:38;15137:84;;;15193:18;;:::i;:::-;15137:84;14958:269;14907:320;;;:::o;15233:180::-;15281:77;15278:1;15271:88;15378:4;15375:1;15368:15;15402:4;15399:1;15392:15;15419:305;15459:3;15478:20;15496:1;15478:20;:::i;:::-;15473:25;;15512:20;15530:1;15512:20;:::i;:::-;15507:25;;15666:1;15598:66;15594:74;15591:1;15588:81;15585:107;;;15672:18;;:::i;:::-;15585:107;15716:1;15713;15709:9;15702:16;;15419:305;;;;:::o;15730:181::-;15870:33;15866:1;15858:6;15854:14;15847:57;15730:181;:::o;15917:366::-;16059:3;16080:67;16144:2;16139:3;16080:67;:::i;:::-;16073:74;;16156:93;16245:3;16156:93;:::i;:::-;16274:2;16269:3;16265:12;16258:19;;15917:366;;;:::o;16289:419::-;16455:4;16493:2;16482:9;16478:18;16470:26;;16542:9;16536:4;16532:20;16528:1;16517:9;16513:17;16506:47;16570:131;16696:4;16570:131;:::i;:::-;16562:139;;16289:419;;;:::o;16714:230::-;16854:34;16850:1;16842:6;16838:14;16831:58;16923:13;16918:2;16910:6;16906:15;16899:38;16714:230;:::o;16950:366::-;17092:3;17113:67;17177:2;17172:3;17113:67;:::i;:::-;17106:74;;17189:93;17278:3;17189:93;:::i;:::-;17307:2;17302:3;17298:12;17291:19;;16950:366;;;:::o;17322:419::-;17488:4;17526:2;17515:9;17511:18;17503:26;;17575:9;17569:4;17565:20;17561:1;17550:9;17546:17;17539:47;17603:131;17729:4;17603:131;:::i;:::-;17595:139;;17322:419;;;:::o;17747:168::-;17830:11;17864:6;17859:3;17852:19;17904:4;17899:3;17895:14;17880:29;;17747:168;;;;:::o;17921:154::-;18005:6;18000:3;17995;17982:30;18067:1;18058:6;18053:3;18049:16;18042:27;17921:154;;;:::o;18103:301::-;18199:3;18220:70;18283:6;18278:3;18220:70;:::i;:::-;18213:77;;18300:43;18336:6;18331:3;18324:5;18300:43;:::i;:::-;18368:29;18390:6;18368:29;:::i;:::-;18363:3;18359:39;18352:46;;18103:301;;;;;:::o;18410:771::-;18643:4;18681:3;18670:9;18666:19;18658:27;;18695:71;18763:1;18752:9;18748:17;18739:6;18695:71;:::i;:::-;18776:72;18844:2;18833:9;18829:18;18820:6;18776:72;:::i;:::-;18858;18926:2;18915:9;18911:18;18902:6;18858:72;:::i;:::-;18940;19008:2;18997:9;18993:18;18984:6;18940:72;:::i;:::-;19060:9;19054:4;19050:20;19044:3;19033:9;19029:19;19022:49;19088:86;19169:4;19160:6;19152;19088:86;:::i;:::-;19080:94;;18410:771;;;;;;;;;:::o;19187:143::-;19244:5;19275:6;19269:13;19260:22;;19291:33;19318:5;19291:33;:::i;:::-;19187:143;;;;:::o;19336:351::-;19406:6;19455:2;19443:9;19434:7;19430:23;19426:32;19423:119;;;19461:79;;:::i;:::-;19423:119;19581:1;19606:64;19662:7;19653:6;19642:9;19638:22;19606:64;:::i;:::-;19596:74;;19552:128;19336:351;;;;:::o;19693:223::-;19833:34;19829:1;19821:6;19817:14;19810:58;19902:6;19897:2;19889:6;19885:15;19878:31;19693:223;:::o;19922:366::-;20064:3;20085:67;20149:2;20144:3;20085:67;:::i;:::-;20078:74;;20161:93;20250:3;20161:93;:::i;:::-;20279:2;20274:3;20270:12;20263:19;;19922:366;;;:::o;20294:419::-;20460:4;20498:2;20487:9;20483:18;20475:26;;20547:9;20541:4;20537:20;20533:1;20522:9;20518:17;20511:47;20575:131;20701:4;20575:131;:::i;:::-;20567:139;;20294:419;;;:::o;20719:191::-;20759:4;20779:20;20797:1;20779:20;:::i;:::-;20774:25;;20813:20;20831:1;20813:20;:::i;:::-;20808:25;;20852:1;20849;20846:8;20843:34;;;20857:18;;:::i;:::-;20843:34;20902:1;20899;20895:9;20887:17;;20719:191;;;;:::o;20916:233::-;21056:34;21052:1;21044:6;21040:14;21033:58;21125:16;21120:2;21112:6;21108:15;21101:41;20916:233;:::o;21155:366::-;21297:3;21318:67;21382:2;21377:3;21318:67;:::i;:::-;21311:74;;21394:93;21483:3;21394:93;:::i;:::-;21512:2;21507:3;21503:12;21496:19;;21155:366;;;:::o;21527:419::-;21693:4;21731:2;21720:9;21716:18;21708:26;;21780:9;21774:4;21770:20;21766:1;21755:9;21751:17;21744:47;21808:131;21934:4;21808:131;:::i;:::-;21800:139;;21527:419;;;:::o;21952:85::-;21997:7;22026:5;22015:16;;21952:85;;;:::o;22043:60::-;22071:3;22092:5;22085:12;;22043:60;;;:::o;22109:154::-;22165:9;22198:59;22214:42;22223:32;22249:5;22223:32;:::i;:::-;22214:42;:::i;:::-;22198:59;:::i;:::-;22185:72;;22109:154;;;:::o;22269:143::-;22362:43;22399:5;22362:43;:::i;:::-;22357:3;22350:56;22269:143;;:::o;22418:234::-;22517:4;22555:2;22544:9;22540:18;22532:26;;22568:77;22642:1;22631:9;22627:17;22618:6;22568:77;:::i;:::-;22418:234;;;;:::o;22658:180::-;22706:77;22703:1;22696:88;22803:4;22800:1;22793:15;22827:4;22824:1;22817:15;22844:224;22984:34;22980:1;22972:6;22968:14;22961:58;23053:7;23048:2;23040:6;23036:15;23029:32;22844:224;:::o;23074:366::-;23216:3;23237:67;23301:2;23296:3;23237:67;:::i;:::-;23230:74;;23313:93;23402:3;23313:93;:::i;:::-;23431:2;23426:3;23422:12;23415:19;;23074:366;;;:::o;23446:419::-;23612:4;23650:2;23639:9;23635:18;23627:26;;23699:9;23693:4;23689:20;23685:1;23674:9;23670:17;23663:47;23727:131;23853:4;23727:131;:::i;:::-;23719:139;;23446:419;;;:::o;23871:179::-;24011:31;24007:1;23999:6;23995:14;23988:55;23871:179;:::o;24056:366::-;24198:3;24219:67;24283:2;24278:3;24219:67;:::i;:::-;24212:74;;24295:93;24384:3;24295:93;:::i;:::-;24413:2;24408:3;24404:12;24397:19;;24056:366;;;:::o;24428:419::-;24594:4;24632:2;24621:9;24617:18;24609:26;;24681:9;24675:4;24671:20;24667:1;24656:9;24652:17;24645:47;24709:131;24835:4;24709:131;:::i;:::-;24701:139;;24428:419;;;:::o;24853:553::-;25030:4;25068:3;25057:9;25053:19;25045:27;;25082:71;25150:1;25139:9;25135:17;25126:6;25082:71;:::i;:::-;25163:72;25231:2;25220:9;25216:18;25207:6;25163:72;:::i;:::-;25245;25313:2;25302:9;25298:18;25289:6;25245:72;:::i;:::-;25327;25395:2;25384:9;25380:18;25371:6;25327:72;:::i;:::-;24853:553;;;;;;;:::o;25412:175::-;25552:27;25548:1;25540:6;25536:14;25529:51;25412:175;:::o;25593:366::-;25735:3;25756:67;25820:2;25815:3;25756:67;:::i;:::-;25749:74;;25832:93;25921:3;25832:93;:::i;:::-;25950:2;25945:3;25941:12;25934:19;;25593:366;;;:::o;25965:419::-;26131:4;26169:2;26158:9;26154:18;26146:26;;26218:9;26212:4;26208:20;26204:1;26193:9;26189:17;26182:47;26246:131;26372:4;26246:131;:::i;:::-;26238:139;;25965:419;;;:::o;26390:179::-;26530:31;26526:1;26518:6;26514:14;26507:55;26390:179;:::o;26575:366::-;26717:3;26738:67;26802:2;26797:3;26738:67;:::i;:::-;26731:74;;26814:93;26903:3;26814:93;:::i;:::-;26932:2;26927:3;26923:12;26916:19;;26575:366;;;:::o;26947:419::-;27113:4;27151:2;27140:9;27136:18;27128:26;;27200:9;27194:4;27190:20;27186:1;27175:9;27171:17;27164:47;27228:131;27354:4;27228:131;:::i;:::-;27220:139;;26947:419;;;:::o;27372:775::-;27605:4;27643:3;27632:9;27628:19;27620:27;;27657:71;27725:1;27714:9;27710:17;27701:6;27657:71;:::i;:::-;27738:72;27806:2;27795:9;27791:18;27782:6;27738:72;:::i;:::-;27820;27888:2;27877:9;27873:18;27864:6;27820:72;:::i;:::-;27902;27970:2;27959:9;27955:18;27946:6;27902:72;:::i;:::-;27984:73;28052:3;28041:9;28037:19;28028:6;27984:73;:::i;:::-;28067;28135:3;28124:9;28120:19;28111:6;28067:73;:::i;:::-;27372:775;;;;;;;;;:::o;28153:180::-;28293:32;28289:1;28281:6;28277:14;28270:56;28153:180;:::o;28339:366::-;28481:3;28502:67;28566:2;28561:3;28502:67;:::i;:::-;28495:74;;28578:93;28667:3;28578:93;:::i;:::-;28696:2;28691:3;28687:12;28680:19;;28339:366;;;:::o;28711:419::-;28877:4;28915:2;28904:9;28900:18;28892:26;;28964:9;28958:4;28954:20;28950:1;28939:9;28935:17;28928:47;28992:131;29118:4;28992:131;:::i;:::-;28984:139;;28711:419;;;:::o;29136:177::-;29276:29;29272:1;29264:6;29260:14;29253:53;29136:177;:::o;29319:366::-;29461:3;29482:67;29546:2;29541:3;29482:67;:::i;:::-;29475:74;;29558:93;29647:3;29558:93;:::i;:::-;29676:2;29671:3;29667:12;29660:19;;29319:366;;;:::o;29691:419::-;29857:4;29895:2;29884:9;29880:18;29872:26;;29944:9;29938:4;29934:20;29930:1;29919:9;29915:17;29908:47;29972:131;30098:4;29972:131;:::i;:::-;29964:139;;29691:419;;;:::o;30116:225::-;30256:34;30252:1;30244:6;30240:14;30233:58;30325:8;30320:2;30312:6;30308:15;30301:33;30116:225;:::o;30347:366::-;30489:3;30510:67;30574:2;30569:3;30510:67;:::i;:::-;30503:74;;30586:93;30675:3;30586:93;:::i;:::-;30704:2;30699:3;30695:12;30688:19;;30347:366;;;:::o;30719:419::-;30885:4;30923:2;30912:9;30908:18;30900:26;;30972:9;30966:4;30962:20;30958:1;30947:9;30943:17;30936:47;31000:131;31126:4;31000:131;:::i;:::-;30992:139;;30719:419;;;:::o;31144:223::-;31284:34;31280:1;31272:6;31268:14;31261:58;31353:6;31348:2;31340:6;31336:15;31329:31;31144:223;:::o;31373:366::-;31515:3;31536:67;31600:2;31595:3;31536:67;:::i;:::-;31529:74;;31612:93;31701:3;31612:93;:::i;:::-;31730:2;31725:3;31721:12;31714:19;;31373:366;;;:::o;31745:419::-;31911:4;31949:2;31938:9;31934:18;31926:26;;31998:9;31992:4;31988:20;31984:1;31973:9;31969:17;31962:47;32026:131;32152:4;32026:131;:::i;:::-;32018:139;;31745:419;;;:::o;32170:221::-;32310:34;32306:1;32298:6;32294:14;32287:58;32379:4;32374:2;32366:6;32362:15;32355:29;32170:221;:::o;32397:366::-;32539:3;32560:67;32624:2;32619:3;32560:67;:::i;:::-;32553:74;;32636:93;32725:3;32636:93;:::i;:::-;32754:2;32749:3;32745:12;32738:19;;32397:366;;;:::o;32769:419::-;32935:4;32973:2;32962:9;32958:18;32950:26;;33022:9;33016:4;33012:20;33008:1;32997:9;32993:17;32986:47;33050:131;33176:4;33050:131;:::i;:::-;33042:139;;32769:419;;;:::o;33194:179::-;33334:31;33330:1;33322:6;33318:14;33311:55;33194:179;:::o;33379:366::-;33521:3;33542:67;33606:2;33601:3;33542:67;:::i;:::-;33535:74;;33618:93;33707:3;33618:93;:::i;:::-;33736:2;33731:3;33727:12;33720:19;;33379:366;;;:::o;33751:419::-;33917:4;33955:2;33944:9;33940:18;33932:26;;34004:9;33998:4;33994:20;33990:1;33979:9;33975:17;33968:47;34032:131;34158:4;34032:131;:::i;:::-;34024:139;;33751:419;;;:::o;34176:224::-;34316:34;34312:1;34304:6;34300:14;34293:58;34385:7;34380:2;34372:6;34368:15;34361:32;34176:224;:::o;34406:366::-;34548:3;34569:67;34633:2;34628:3;34569:67;:::i;:::-;34562:74;;34645:93;34734:3;34645:93;:::i;:::-;34763:2;34758:3;34754:12;34747:19;;34406:366;;;:::o;34778:419::-;34944:4;34982:2;34971:9;34967:18;34959:26;;35031:9;35025:4;35021:20;35017:1;35006:9;35002:17;34995:47;35059:131;35185:4;35059:131;:::i;:::-;35051:139;;34778:419;;;:::o;35203:222::-;35343:34;35339:1;35331:6;35327:14;35320:58;35412:5;35407:2;35399:6;35395:15;35388:30;35203:222;:::o;35431:366::-;35573:3;35594:67;35658:2;35653:3;35594:67;:::i;:::-;35587:74;;35670:93;35759:3;35670:93;:::i;:::-;35788:2;35783:3;35779:12;35772:19;;35431:366;;;:::o;35803:419::-;35969:4;36007:2;35996:9;35992:18;35984:26;;36056:9;36050:4;36046:20;36042:1;36031:9;36027:17;36020:47;36084:131;36210:4;36084:131;:::i;:::-;36076:139;;35803:419;;;:::o;36228:225::-;36368:34;36364:1;36356:6;36352:14;36345:58;36437:8;36432:2;36424:6;36420:15;36413:33;36228:225;:::o;36459:366::-;36601:3;36622:67;36686:2;36681:3;36622:67;:::i;:::-;36615:74;;36698:93;36787:3;36698:93;:::i;:::-;36816:2;36811:3;36807:12;36800:19;;36459:366;;;:::o;36831:419::-;36997:4;37035:2;37024:9;37020:18;37012:26;;37084:9;37078:4;37074:20;37070:1;37059:9;37055:17;37048:47;37112:131;37238:4;37112:131;:::i;:::-;37104:139;;36831:419;;;:::o;37256:182::-;37396:34;37392:1;37384:6;37380:14;37373:58;37256:182;:::o;37444:366::-;37586:3;37607:67;37671:2;37666:3;37607:67;:::i;:::-;37600:74;;37683:93;37772:3;37683:93;:::i;:::-;37801:2;37796:3;37792:12;37785:19;;37444:366;;;:::o;37816:419::-;37982:4;38020:2;38009:9;38005:18;37997:26;;38069:9;38063:4;38059:20;38055:1;38044:9;38040:17;38033:47;38097:131;38223:4;38097:131;:::i;:::-;38089:139;;37816:419;;;:::o;38241:172::-;38381:24;38377:1;38369:6;38365:14;38358:48;38241:172;:::o;38419:366::-;38561:3;38582:67;38646:2;38641:3;38582:67;:::i;:::-;38575:74;;38658:93;38747:3;38658:93;:::i;:::-;38776:2;38771:3;38767:12;38760:19;;38419:366;;;:::o;38791:419::-;38957:4;38995:2;38984:9;38980:18;38972:26;;39044:9;39038:4;39034:20;39030:1;39019:9;39015:17;39008:47;39072:131;39198:4;39072:131;:::i;:::-;39064:139;;38791:419;;;:::o;39216:179::-;39356:31;39352:1;39344:6;39340:14;39333:55;39216:179;:::o;39401:366::-;39543:3;39564:67;39628:2;39623:3;39564:67;:::i;:::-;39557:74;;39640:93;39729:3;39640:93;:::i;:::-;39758:2;39753:3;39749:12;39742:19;;39401:366;;;:::o;39773:419::-;39939:4;39977:2;39966:9;39962:18;39954:26;;40026:9;40020:4;40016:20;40012:1;40001:9;39997:17;39990:47;40054:131;40180:4;40054:131;:::i;:::-;40046:139;;39773:419;;;:::o;40198:225::-;40338:34;40334:1;40326:6;40322:14;40315:58;40407:8;40402:2;40394:6;40390:15;40383:33;40198:225;:::o;40429:366::-;40571:3;40592:67;40656:2;40651:3;40592:67;:::i;:::-;40585:74;;40668:93;40757:3;40668:93;:::i;:::-;40786:2;40781:3;40777:12;40770:19;;40429:366;;;:::o;40801:419::-;40967:4;41005:2;40994:9;40990:18;40982:26;;41054:9;41048:4;41044:20;41040:1;41029:9;41025:17;41018:47;41082:131;41208:4;41082:131;:::i;:::-;41074:139;;40801:419;;;:::o;41226:230::-;41366:34;41362:1;41354:6;41350:14;41343:58;41435:13;41430:2;41422:6;41418:15;41411:38;41226:230;:::o;41462:366::-;41604:3;41625:67;41689:2;41684:3;41625:67;:::i;:::-;41618:74;;41701:93;41790:3;41701:93;:::i;:::-;41819:2;41814:3;41810:12;41803:19;;41462:366;;;:::o;41834:419::-;42000:4;42038:2;42027:9;42023:18;42015:26;;42087:9;42081:4;42077:20;42073:1;42062:9;42058:17;42051:47;42115:131;42241:4;42115:131;:::i;:::-;42107:139;;41834:419;;;:::o;42259:664::-;42464:4;42502:3;42491:9;42487:19;42479:27;;42516:71;42584:1;42573:9;42569:17;42560:6;42516:71;:::i;:::-;42597:72;42665:2;42654:9;42650:18;42641:6;42597:72;:::i;:::-;42679;42747:2;42736:9;42732:18;42723:6;42679:72;:::i;:::-;42761;42829:2;42818:9;42814:18;42805:6;42761:72;:::i;:::-;42843:73;42911:3;42900:9;42896:19;42887:6;42843:73;:::i;:::-;42259:664;;;;;;;;:::o;42929:180::-;42977:77;42974:1;42967:88;43074:4;43071:1;43064:15;43098:4;43095:1;43088:15;43115:185;43155:1;43172:20;43190:1;43172:20;:::i;:::-;43167:25;;43206:20;43224:1;43206:20;:::i;:::-;43201:25;;43245:1;43235:35;;43250:18;;:::i;:::-;43235:35;43292:1;43289;43285:9;43280:14;;43115:185;;;;:::o;43306:170::-;43446:22;43442:1;43434:6;43430:14;43423:46;43306:170;:::o;43482:366::-;43624:3;43645:67;43709:2;43704:3;43645:67;:::i;:::-;43638:74;;43721:93;43810:3;43721:93;:::i;:::-;43839:2;43834:3;43830:12;43823:19;;43482:366;;;:::o;43854:419::-;44020:4;44058:2;44047:9;44043:18;44035:26;;44107:9;44101:4;44097:20;44093:1;44082:9;44078:17;44071:47;44135:131;44261:4;44135:131;:::i;:::-;44127:139;;43854:419;;;:::o;44279:235::-;44419:34;44415:1;44407:6;44403:14;44396:58;44488:18;44483:2;44475:6;44471:15;44464:43;44279:235;:::o;44520:366::-;44662:3;44683:67;44747:2;44742:3;44683:67;:::i;:::-;44676:74;;44759:93;44848:3;44759:93;:::i;:::-;44877:2;44872:3;44868:12;44861:19;;44520:366;;;:::o;44892:419::-;45058:4;45096:2;45085:9;45081:18;45073:26;;45145:9;45139:4;45135:20;45131:1;45120:9;45116:17;45109:47;45173:131;45299:4;45173:131;:::i;:::-;45165:139;;44892:419;;;:::o;45317:332::-;45438:4;45476:2;45465:9;45461:18;45453:26;;45489:71;45557:1;45546:9;45542:17;45533:6;45489:71;:::i;:::-;45570:72;45638:2;45627:9;45623:18;45614:6;45570:72;:::i;:::-;45317:332;;;;;:::o;45655:166::-;45795:18;45791:1;45783:6;45779:14;45772:42;45655:166;:::o;45827:366::-;45969:3;45990:67;46054:2;46049:3;45990:67;:::i;:::-;45983:74;;46066:93;46155:3;46066:93;:::i;:::-;46184:2;46179:3;46175:12;46168:19;;45827:366;;;:::o;46199:419::-;46365:4;46403:2;46392:9;46388:18;46380:26;;46452:9;46446:4;46442:20;46438:1;46427:9;46423:17;46416:47;46480:131;46606:4;46480:131;:::i;:::-;46472:139;;46199:419;;;:::o;46624:148::-;46726:11;46763:3;46748:18;;46624:148;;;;:::o;46778:214::-;46918:66;46914:1;46906:6;46902:14;46895:90;46778:214;:::o;46998:400::-;47158:3;47179:84;47261:1;47256:3;47179:84;:::i;:::-;47172:91;;47272:93;47361:3;47272:93;:::i;:::-;47390:1;47385:3;47381:11;47374:18;;46998:400;;;:::o;47404:79::-;47443:7;47472:5;47461:16;;47404:79;;;:::o;47489:157::-;47594:45;47614:24;47632:5;47614:24;:::i;:::-;47594:45;:::i;:::-;47589:3;47582:58;47489:157;;:::o;47652:663::-;47893:3;47915:148;48059:3;47915:148;:::i;:::-;47908:155;;48073:75;48144:3;48135:6;48073:75;:::i;:::-;48173:2;48168:3;48164:12;48157:19;;48186:75;48257:3;48248:6;48186:75;:::i;:::-;48286:2;48281:3;48277:12;48270:19;;48306:3;48299:10;;47652:663;;;;;:::o;48321:545::-;48494:4;48532:3;48521:9;48517:19;48509:27;;48546:71;48614:1;48603:9;48599:17;48590:6;48546:71;:::i;:::-;48627:68;48691:2;48680:9;48676:18;48667:6;48627:68;:::i;:::-;48705:72;48773:2;48762:9;48758:18;48749:6;48705:72;:::i;:::-;48787;48855:2;48844:9;48840:18;48831:6;48787:72;:::i;:::-;48321:545;;;;;;;:::o;48872:180::-;48920:77;48917:1;48910:88;49017:4;49014:1;49007:15;49041:4;49038:1;49031:15;49058:174;49198:26;49194:1;49186:6;49182:14;49175:50;49058:174;:::o;49238:366::-;49380:3;49401:67;49465:2;49460:3;49401:67;:::i;:::-;49394:74;;49477:93;49566:3;49477:93;:::i;:::-;49595:2;49590:3;49586:12;49579:19;;49238:366;;;:::o;49610:419::-;49776:4;49814:2;49803:9;49799:18;49791:26;;49863:9;49857:4;49853:20;49849:1;49838:9;49834:17;49827:47;49891:131;50017:4;49891:131;:::i;:::-;49883:139;;49610:419;;;:::o;50035:181::-;50175:33;50171:1;50163:6;50159:14;50152:57;50035:181;:::o;50222:366::-;50364:3;50385:67;50449:2;50444:3;50385:67;:::i;:::-;50378:74;;50461:93;50550:3;50461:93;:::i;:::-;50579:2;50574:3;50570:12;50563:19;;50222:366;;;:::o;50594:419::-;50760:4;50798:2;50787:9;50783:18;50775:26;;50847:9;50841:4;50837:20;50833:1;50822:9;50818:17;50811:47;50875:131;51001:4;50875:131;:::i;:::-;50867:139;;50594:419;;;:::o;51019:221::-;51159:34;51155:1;51147:6;51143:14;51136:58;51228:4;51223:2;51215:6;51211:15;51204:29;51019:221;:::o;51246:366::-;51388:3;51409:67;51473:2;51468:3;51409:67;:::i;:::-;51402:74;;51485:93;51574:3;51485:93;:::i;:::-;51603:2;51598:3;51594:12;51587:19;;51246:366;;;:::o;51618:419::-;51784:4;51822:2;51811:9;51807:18;51799:26;;51871:9;51865:4;51861:20;51857:1;51846:9;51842:17;51835:47;51899:131;52025:4;51899:131;:::i;:::-;51891:139;;51618:419;;;:::o;52043:181::-;52183:33;52179:1;52171:6;52167:14;52160:57;52043:181;:::o;52230:366::-;52372:3;52393:67;52457:2;52452:3;52393:67;:::i;:::-;52386:74;;52469:93;52558:3;52469:93;:::i;:::-;52587:2;52582:3;52578:12;52571:19;;52230:366;;;:::o;52602:419::-;52768:4;52806:2;52795:9;52791:18;52783:26;;52855:9;52849:4;52845:20;52841:1;52830:9;52826:17;52819:47;52883:131;53009:4;52883:131;:::i;:::-;52875:139;;52602:419;;;:::o;53027:220::-;53167:34;53163:1;53155:6;53151:14;53144:58;53236:3;53231:2;53223:6;53219:15;53212:28;53027:220;:::o;53253:366::-;53395:3;53416:67;53480:2;53475:3;53416:67;:::i;:::-;53409:74;;53492:93;53581:3;53492:93;:::i;:::-;53610:2;53605:3;53601:12;53594:19;;53253:366;;;:::o;53625:419::-;53791:4;53829:2;53818:9;53814:18;53806:26;;53878:9;53872:4;53868:20;53864:1;53853:9;53849:17;53842:47;53906:131;54032:4;53906:131;:::i;:::-;53898:139;;53625:419;;;:::o;54050:221::-;54190:34;54186:1;54178:6;54174:14;54167:58;54259:4;54254:2;54246:6;54242:15;54235:29;54050:221;:::o;54277:366::-;54419:3;54440:67;54504:2;54499:3;54440:67;:::i;:::-;54433:74;;54516:93;54605:3;54516:93;:::i;:::-;54634:2;54629:3;54625:12;54618:19;;54277:366;;;:::o;54649:419::-;54815:4;54853:2;54842:9;54838:18;54830:26;;54902:9;54896:4;54892:20;54888:1;54877:9;54873:17;54866:47;54930:131;55056:4;54930:131;:::i;:::-;54922:139;;54649:419;;;:::o;55074:226::-;55214:34;55210:1;55202:6;55198:14;55191:58;55283:9;55278:2;55270:6;55266:15;55259:34;55074:226;:::o;55306:366::-;55448:3;55469:67;55533:2;55528:3;55469:67;:::i;:::-;55462:74;;55545:93;55634:3;55545:93;:::i;:::-;55663:2;55658:3;55654:12;55647:19;;55306:366;;;:::o;55678:419::-;55844:4;55882:2;55871:9;55867:18;55859:26;;55931:9;55925:4;55921:20;55917:1;55906:9;55902:17;55895:47;55959:131;56085:4;55959:131;:::i;:::-;55951:139;;55678:419;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceOfAt(address,uint256)":"4ee2cd7e","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","maxFlashLoan(address)":"613255ab","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","snapshot()":"9711715a","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrowerUpgradeable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"zohaib10092001@gmail.com\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"token\":\"The token to be flash loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own amount + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PKDR.sol\":\"PKDR\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashBorrowerUpgradeable.sol\":{\"keccak256\":\"0x10083622669a064863aaaf7d666e1ff311dd05149fa7cf2a561b4a3a995f0dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b9b55b4bc108e5971481aadc522a0352f7a0b8d5ede7dc32bf6652f43f3ec82\",\"dweb:/ipfs/QmV2LNPwem52yKWUh8whtYSYv3sqXsVrE4cDpDyR1hmLcP\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC3156FlashLenderUpgradeable.sol\":{\"keccak256\":\"0xa31d534e79c2275bdef26559e5c03ff1d45fee94d0007130e67ee9273263b973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ec3b2422aa19327ab8c5f3bbd7ee161239d9b0fbedbc0fd1de17148cc9c3c0\",\"dweb:/ipfs/QmQJFvCCingXXjc7FAk6srbS27mzcWci6UgAr9JUYPeqsm\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":{\"keccak256\":\"0x586a49fbcb32c2382dff9c3075f63ca9d91196f6a3bccd6e7333a5fb5f4978ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9293ebaa7b07a21c7eb3d486e69e096c759acc81fb28e9588b99b445b6ef6eec\",\"dweb:/ipfs/QmZXxQHXmWBNnYmV5EThedC1WULBbmZdGv7qEAFbeGvbtG\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol\":{\"keccak256\":\"0x42da8099f59958af496f6c8f0d9c1ce0a929151e02f877e4be23aca4cc440cbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781b129c8102160319aeaf01b4760e50291bbe1e4ae12b97fbdb79bda38c0d3f\",\"dweb:/ipfs/QmNPDyvAPLaVBE5mS6fZJbqW4zZ93osaYdZEz2CPYRYtPU\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x89743b8a05107d361d56ffc5c5b50f5c3a9d5c5ba40c80751fd54d272488b3b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863438ae3da8d852e830b1fb72e03abd29aa115081b6eb6207d809a946d5bb18\",\"dweb:/ipfs/Qma7b2828J7LkWUPEAtWRCjwuCaTSV24qxXj1H7B46GtPy\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":{\"keccak256\":\"0xc3821e9d41b2b19b612238b308dcc8f4ab46afcd0f6b3bd174e89789bbf59e26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e31dc401f4ddf373f106ddbab972d14eee74305c8fe358a4a6eedac7b934569a\",\"dweb:/ipfs/QmQ8zCXY1UkGLkRnA346kjSqAnfj1iWWH2Q4pE4qivqW3p\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"contracts/PKDR.sol\":{\"keccak256\":\"0x6dfa0b3ff5f09f00c2e75a7f33e504cea6a41edc8ad8b192b86a57967cc57883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a6f07789aabde29e1fe0a6eb58bf3a6918900cdbfe3dfe6446532d10b356785\",\"dweb:/ipfs/QmZuFMZXWXAssNpu1UHr8U2ouQZq1BFaxYz2QiecCGXLaN\"]}},\"version\":1}"}},"contracts/Profiles.sol":{"Profiles":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"functionDebugData":{"@_6788":{"entryPoint":null,"id":6788,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220383005e24415ccac385be9057de31e3747ce3a18722cd27294686ca76accf9d464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE ADDRESS SDIV 0xE2 DIFFICULTY ISZERO 0xCC 0xAC CODESIZE JUMPDEST 0xE9 SDIV PUSH30 0xE31E3747CE3A18722CD27294686CA76ACCF9D464736F6C63430008090033 ","sourceMap":"285:123:26:-:0;;;388:17;;;;;;;;;;285:123;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220383005e24415ccac385be9057de31e3747ce3a18722cd27294686ca76accf9d464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE ADDRESS SDIV 0xE2 DIFFICULTY ISZERO 0xCC 0xAC CODESIZE JUMPDEST 0xE9 SDIV PUSH30 0xE31E3747CE3A18722CD27294686CA76ACCF9D464736F6C63430008090033 ","sourceMap":"285:123:26:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Profiles.sol\":\"Profiles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Profiles.sol\":{\"keccak256\":\"0x89106f52aba217eea042e3ebdbdfc2145bae32f44e8bc72a327250ab8d39e8b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22beb21f9b717249fa389962130675690509c2889a82c0027f3ed115c3c0f754\",\"dweb:/ipfs/QmaRxVZonftRSUA2rkMttsXbeingo1qstPf4eqrm43GHZr\"]}},\"version\":1}"}}}}}