{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getAdminAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1abe151d2f5ca8192f624eda73704791445bcd58527919f4072a29ccce778515",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "217497",
    "logsBloom": "0x
    "blockHash": "0x90807a2d17bcfcd897571cb5bcd6ef65526db4a17610e8eb9fe96ef69782d6aa",
    "transactionHash": "0x1abe151d2f5ca8192f624eda73704791445bcd58527919f4072a29ccce778515",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "217497",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e13011c0111c602a9e8dc42135a0a051",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getAdminAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Profiles.sol\":\"Profiles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Profiles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n//states variables\\n//error\\n//events\\n//modifier\\n// constructor\\n// receive\\n// fallback\\n// external\\n// public\\n// internal\\n// private\\n// view or pure\\n\\n//createProfile\\n//getVerifiedUser\\n// revokeVerifiedUser\\n// retainVerification\\ncontract Profiles {\\n    //states variables\\n    // admins array who controlled the users contract\\n    address[] private _iPkdrOrgAddresses;\\n\\n    // basic struct for users\\n    struct user {\\n        bool verificationStatus;\\n    }\\n\\n    // mapping for address to a user struct\\n    mapping(address => user) users;\\n\\n    //error\\n\\n    //events\\n\\n    //modifier\\n\\n    // constructor\\n    constructor() {\\n        //set the owner of the contract into the array\\n        _iPkdrOrgAddresses.push(msg.sender);\\n\\n        //\\n    }\\n\\n    // receive\\n\\n    // fallback\\n\\n    // external\\n\\n    // public\\n\\n    // internal\\n\\n    // private\\n\\n    // view or pure\\n\\n    function getAdminAddresses()external view returns (address[] memory){\\n        return _iPkdrOrgAddresses;\\n        \\n    }\\n}\\n\",\"keccak256\":\"0xd3e487da39f876a85e0e721b7cc200d2c11e9ca9fcf696ea1bbfd6798893236e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610224806100836000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806364ddfa2914610030575b600080fd5b61003861004e565b60405161004591906101cc565b60405180910390f35b606060008054806020026020016040519081016040528092919081815260200182805480156100d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610088575b5050505050905090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061013382610108565b9050919050565b61014381610128565b82525050565b6000610155838361013a565b60208301905092915050565b6000602082019050919050565b6000610179826100dc565b61018381856100e7565b935061018e836100f8565b8060005b838110156101bf5781516101a68882610149565b97506101b183610161565b925050600181019050610192565b5085935050505092915050565b600060208201905081810360008301526101e6818461016e565b90509291505056fea2646970667358221220da51a4ffba3f51e91e6c01590804e868da74fc7ebdbbb6f3c328e605aae2fe4a64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806364ddfa2914610030575b600080fd5b61003861004e565b60405161004591906101cc565b60405180910390f35b606060008054806020026020016040519081016040528092919081815260200182805480156100d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610088575b5050505050905090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061013382610108565b9050919050565b61014381610128565b82525050565b6000610155838361013a565b60208301905092915050565b6000602082019050919050565b6000610179826100dc565b61018381856100e7565b935061018e836100f8565b8060005b838110156101bf5781516101a68882610149565b97506101b183610161565b925050600181019050610192565b5085935050505092915050565b600060208201905081810360008301526101e6818461016e565b90509291505056fea2646970667358221220da51a4ffba3f51e91e6c01590804e868da74fc7ebdbbb6f3c328e605aae2fe4a64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Profiles.sol:Profiles",
        "label": "_iPkdrOrgAddresses",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 12,
        "contract": "contracts/Profiles.sol:Profiles",
        "label": "users",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(user)7_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(user)7_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Profiles.user)",
        "numberOfBytes": "32",
        "value": "t_struct(user)7_storage"
      },
      "t_struct(user)7_storage": {
        "encoding": "inplace",
        "label": "struct Profiles.user",
        "members": [
          {
            "astId": 6,
            "contract": "contracts/Profiles.sol:Profiles",
            "label": "verificationStatus",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}