{
  "language": "Solidity",
  "sources": {
    "contracts/Profiles.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n//states variables\n//error\n//events\n//modifier\n// constructor\n// receive\n// fallback\n// external\n// public\n// internal\n// private\n// view or pure\n\n//createProfile\n//getVerifiedUser\n// revokeVerifiedUser\n// retainVerification\ncontract Profiles {\n    //states variables\n    // admins array who controlled the users contract\n    address[] private _iPkdrOrgAddresses;\n\n    // basic struct for users\n    struct user {\n        bool verificationStatus;\n    }\n\n    // mapping for address to a user struct\n    mapping(address => user) users;\n\n    //error\n\n    //events\n\n    //modifier\n\n    // constructor\n    constructor() {\n        //set the owner of the contract into the array\n        _iPkdrOrgAddresses.push(msg.sender);\n\n        //\n    }\n\n    // receive\n\n    // fallback\n\n    // external\n\n    // public\n\n    // internal\n\n    // private\n\n    // view or pure\n\n    function getAdminAddresses()external view returns (address[] memory){\n        return _iPkdrOrgAddresses;\n        \n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}