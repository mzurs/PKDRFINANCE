/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TopUp, TopUpInterface } from "../TopUp";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ONLY_OWNER_CAN_CALL",
    type: "error",
  },
  {
    inputs: [],
    name: "TOPUP_FAILED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "amountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpCompleted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "TOPUP_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPkdrAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "topUpAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "topUpContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052670de0b6b3a764000060005534801561001c57600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516106796100886000396000818161018101528181610212015281816102d20152818161043d01526104c201526106796000f3fe60806040526004361061004e5760003560e01c80636f9fb98a146100c95780637b717a7a146100f45780639b3b20d11461011f578063c9ff4cc014610129578063d01ca486146101525761008e565b3661008e577f8056ca2d1e1630c684dc5a25a5f93f98726e05fa1c27e19e3bfd282c8e9a08223334604051610084929190610540565b60405180910390a1005b7f8056ca2d1e1630c684dc5a25a5f93f98726e05fa1c27e19e3bfd282c8e9a082233346040516100bf929190610540565b60405180910390a1005b3480156100d557600080fd5b506100de61017d565b6040516100eb9190610569565b60405180910390f35b34801561010057600080fd5b5061010961020a565b6040516101169190610569565b60405180910390f35b610127610210565b005b34801561013557600080fd5b50610150600480360381019061014b91906105b5565b6102d0565b005b34801561015e57600080fd5b50610167610439565b60405161017491906105e2565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610204576040517ffc7a106c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47905090565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610295576040517ffc7a106c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f8056ca2d1e1630c684dc5a25a5f93f98726e05fa1c27e19e3bfd282c8e9a082233346040516102c6929190610540565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517ffc7a106c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1660005460405161037d9061062e565b60006040518083038185875af1925050503d80600081146103ba576040519150601f19603f3d011682016040523d82523d6000602084013e6103bf565b606091505b50509050806103fa576040517feba90a5400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fce0ecadd083947356b2a399af2c8268bd0db00376ef30844503edf57c1d11ade8260005460405161042d929190610540565b60405180910390a15050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c0576040517ffc7a106c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610511826104e6565b9050919050565b61052181610506565b82525050565b6000819050919050565b61053a81610527565b82525050565b60006040820190506105556000830185610518565b6105626020830184610531565b9392505050565b600060208201905061057e6000830184610531565b92915050565b600080fd5b61059281610506565b811461059d57600080fd5b50565b6000813590506105af81610589565b92915050565b6000602082840312156105cb576105ca610584565b5b60006105d9848285016105a0565b91505092915050565b60006020820190506105f76000830184610518565b92915050565b600081905092915050565b50565b60006106186000836105fd565b915061062382610608565b600082019050919050565b60006106398261060b565b915081905091905056fea2646970667358221220af98b894ed264151c8533f6a83b69542181059752a4ba3a12378d11b42d3331764736f6c63430008090033";

type TopUpConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TopUpConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TopUp__factory extends ContractFactory {
  constructor(...args: TopUpConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TopUp> {
    return super.deploy(overrides || {}) as Promise<TopUp>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TopUp {
    return super.attach(address) as TopUp;
  }
  override connect(signer: Signer): TopUp__factory {
    return super.connect(signer) as TopUp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TopUpInterface {
    return new utils.Interface(_abi) as TopUpInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TopUp {
    return new Contract(address, _abi, signerOrProvider) as TopUp;
  }
}
