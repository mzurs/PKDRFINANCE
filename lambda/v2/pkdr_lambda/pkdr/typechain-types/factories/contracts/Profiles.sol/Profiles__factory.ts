/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Profiles,
  ProfilesInterface,
} from "../../../contracts/Profiles.sol/Profiles";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "USER_EXISTS_AND_VERIFIED",
    type: "error",
  },
  {
    inputs: [],
    name: "USER_NOT_EXISTS",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fallbackAmount",
        type: "uint256",
      },
    ],
    name: "AMOUNT_RECEIVED_THROUGH_FALLBACK",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "receiveAmount",
        type: "uint256",
      },
    ],
    name: "AMOUNT_RECEIVED_THROUGH_RECEIVE",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "PROFILE_CREATED",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "PROFILE_RETAINED",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "PROFILE_REVOKED",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "createProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "userPubAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "verificationStatus",
            type: "bool",
          },
        ],
        internalType: "struct IProfiles.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getVerifiedUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "retainVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "revokeVerifiedUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250600060c9553480156200004957600080fd5b506200005a6200006060201b60201c565b6200020b565b600060019054906101000a900460ff1615620000b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000aa90620001ae565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff161015620001255760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff6040516200011c9190620001ee565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200019660278362000127565b9150620001a38262000138565b604082019050919050565b60006020820190508181036000830152620001c98162000187565b9050919050565b600060ff82169050919050565b620001e881620001d0565b82525050565b6000602082019050620002056000830184620001dd565b92915050565b6080516123e86200024360003960008181610464015281816104f301528181610726015281816107b5015261086501526123e86000f3fe6080604052600436106100e05760003560e01c80638129fc1c1161007f578063b2e6b91211610059578063b2e6b9121461030c578063d117fc9914610337578063f2fde38b14610374578063f536c5201461039d57610137565b80638129fc1c146102a157806387d55ff3146102b85780638da5cb5b146102e157610137565b80634f1ef286116100bb5780634f1ef2861461020657806352d1902d146102225780636f77926b1461024d578063715018a61461028a57610137565b8062ce8e3e146101895780633659cfe6146101b4578063391a5bf0146101dd57610137565b36610137573460c960008282546100f7919061170f565b925050819055507f42100f075a78c1dac886a43652b5c7c76cca3718758e13e7b726063cd20fe02c3460405161012d9190611774565b60405180910390a1005b3460c96000828254610149919061170f565b925050819055507f6cb8a67804b99a2876f9d2f903120d1607df4c6bb33315433f4f5b9284ba15883460405161017f9190611774565b60405180910390a1005b34801561019557600080fd5b5061019e6103c6565b6040516101ab919061187f565b60405180910390f35b3480156101c057600080fd5b506101db60048036038101906101d691906118e1565b610462565b005b3480156101e957600080fd5b5061020460048036038101906101ff91906118e1565b6105eb565b005b610220600480360381019061021b9190611a54565b610724565b005b34801561022e57600080fd5b50610237610861565b6040516102449190611ac9565b60405180910390f35b34801561025957600080fd5b50610274600480360381019061026f91906118e1565b61091a565b6040516102819190611b2e565b60405180910390f35b34801561029657600080fd5b5061029f6109e4565b005b3480156102ad57600080fd5b506102b66109f8565b005b3480156102c457600080fd5b506102df60048036038101906102da91906118e1565b610b3e565b005b3480156102ed57600080fd5b506102f6610c77565b6040516103039190611b58565b60405180910390f35b34801561031857600080fd5b50610321610ca1565b60405161032e9190611b58565b60405180910390f35b34801561034357600080fd5b5061035e600480360381019061035991906118e1565b610cb8565b60405161036b9190611b82565b60405180910390f35b34801561038057600080fd5b5061039b600480360381019061039691906118e1565b610d11565b005b3480156103a957600080fd5b506103c460048036038101906103bf91906118e1565b610d95565b005b60606103d0610fad565b600060cb80548060200260200160405190810160405280929190818152602001828054801561045457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161040a575b505050505090508091505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614156104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611c20565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661053061102b565b73ffffffffffffffffffffffffffffffffffffffff1614610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d90611cb2565b60405180910390fd5b61058f81611082565b6105e881600067ffffffffffffffff8111156105ae576105ad611929565b5b6040519080825280601f01601f1916602001820160405280156105e05781602001600182028036833780820191505090505b50600061108d565b50565b6105f3610fad565b806001151560cc60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615151415610682576040517f845f7cbb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fdd8163d7c65d364e6e39c7e0fc2c8812d436ff8b4bc35e2f8db2b39c0662e2a460405160405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa90611c20565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107f261102b565b73ffffffffffffffffffffffffffffffffffffffff1614610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90611cb2565b60405180910390fd5b61085182611082565b61085d8282600161108d565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611d44565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6109226116a4565b60cc60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1615151515815250509050919050565b6109ec610fad565b6109f6600061120a565b565b60008060019054906101000a900460ff16159050808015610a295750600160008054906101000a900460ff1660ff16105b80610a565750610a38306112d0565b158015610a555750600160008054906101000a900460ff1660ff16145b5b610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611dd6565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610ad2576001600060016101000a81548160ff0219169083151502179055505b610ada6112f3565b610ae261134c565b8015610b3b5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610b329190611e48565b60405180910390a15b50565b610b46610fad565b806000151560cc60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615151415610bd5576040517f551b5fec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f511d3bd421d86e995c1e2e4b179b681f67697e06c363a32945f11569520da05260405160405180910390a25050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610cab610fad565b610cb3610c77565b905090565b600060cc60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169050919050565b610d19610fad565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8090611ed5565b60405180910390fd5b610d928161120a565b50565b610d9d610fad565b806001151560cc60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615151415610e2c576040517f845f7cbb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555090505060cb829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fafa89aec2d2fd28210e1b3f83a2862febdac7db6e14888b9913882a46fef18a560405160405180910390a25050565b610fb561139d565b73ffffffffffffffffffffffffffffffffffffffff16610fd3610c77565b73ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102090611f41565b60405180910390fd5b565b60006110597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6113a5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61108a610fad565b50565b6110b97f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b6113af565b60000160009054906101000a900460ff16156110dd576110d8836113b9565b611205565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561112357600080fd5b505afa92505050801561115457506040513d601f19601f820116820180604052508101906111519190611f8d565b60015b611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a9061202c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146111f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ef906120be565b60405180910390fd5b50611204838383611472565b5b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611342576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133990612150565b60405180910390fd5b61134a61149e565b565b600060019054906101000a900460ff1661139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139290612150565b60405180910390fd5b565b600033905090565b6000819050919050565b6000819050919050565b6113c2816112d0565b611401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f8906121e2565b60405180910390fd5b8061142e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6113a5565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61147b836114ff565b6000825111806114885750805b1561149957611497838361154e565b505b505050565b600060019054906101000a900460ff166114ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e490612150565b60405180910390fd5b6114fd6114f861139d565b61120a565b565b611508816113b9565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611559836112d0565b611598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158f90612274565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff16846040516115c0919061230e565b600060405180830381855af49150503d80600081146115fb576040519150601f19603f3d011682016040523d82523d6000602084013e611600565b606091505b5091509150611628828260405180606001604052806027815260200161238c60279139611632565b9250505092915050565b606083156116425782905061164d565b61164c8383611654565b5b9392505050565b6000825111156116675781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b9190612369565b60405180910390fd5b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061171a826116d6565b9150611725836116d6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561175a576117596116e0565b5b828201905092915050565b61176e816116d6565b82525050565b60006020820190506117896000830184611765565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e6826117bb565b9050919050565b6117f6816117db565b82525050565b600061180883836117ed565b60208301905092915050565b6000602082019050919050565b600061182c8261178f565b611836818561179a565b9350611841836117ab565b8060005b8381101561187257815161185988826117fc565b975061186483611814565b925050600181019050611845565b5085935050505092915050565b600060208201905081810360008301526118998184611821565b905092915050565b6000604051905090565b600080fd5b600080fd5b6118be816117db565b81146118c957600080fd5b50565b6000813590506118db816118b5565b92915050565b6000602082840312156118f7576118f66118ab565b5b6000611905848285016118cc565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61196182611918565b810181811067ffffffffffffffff821117156119805761197f611929565b5b80604052505050565b60006119936118a1565b905061199f8282611958565b919050565b600067ffffffffffffffff8211156119bf576119be611929565b5b6119c882611918565b9050602081019050919050565b82818337600083830152505050565b60006119f76119f2846119a4565b611989565b905082815260208101848484011115611a1357611a12611913565b5b611a1e8482856119d5565b509392505050565b600082601f830112611a3b57611a3a61190e565b5b8135611a4b8482602086016119e4565b91505092915050565b60008060408385031215611a6b57611a6a6118ab565b5b6000611a79858286016118cc565b925050602083013567ffffffffffffffff811115611a9a57611a996118b0565b5b611aa685828601611a26565b9150509250929050565b6000819050919050565b611ac381611ab0565b82525050565b6000602082019050611ade6000830184611aba565b92915050565b60008115159050919050565b611af981611ae4565b82525050565b604082016000820151611b1560008501826117ed565b506020820151611b286020850182611af0565b50505050565b6000604082019050611b436000830184611aff565b92915050565b611b52816117db565b82525050565b6000602082019050611b6d6000830184611b49565b92915050565b611b7c81611ae4565b82525050565b6000602082019050611b976000830184611b73565b92915050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000611c0a602c83611b9d565b9150611c1582611bae565b604082019050919050565b60006020820190508181036000830152611c3981611bfd565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000611c9c602c83611b9d565b9150611ca782611c40565b604082019050919050565b60006020820190508181036000830152611ccb81611c8f565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000611d2e603883611b9d565b9150611d3982611cd2565b604082019050919050565b60006020820190508181036000830152611d5d81611d21565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611dc0602e83611b9d565b9150611dcb82611d64565b604082019050919050565b60006020820190508181036000830152611def81611db3565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000611e32611e2d611e2884611df6565b611e0d565b611e00565b9050919050565b611e4281611e17565b82525050565b6000602082019050611e5d6000830184611e39565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ebf602683611b9d565b9150611eca82611e63565b604082019050919050565b60006020820190508181036000830152611eee81611eb2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611f2b602083611b9d565b9150611f3682611ef5565b602082019050919050565b60006020820190508181036000830152611f5a81611f1e565b9050919050565b611f6a81611ab0565b8114611f7557600080fd5b50565b600081519050611f8781611f61565b92915050565b600060208284031215611fa357611fa26118ab565b5b6000611fb184828501611f78565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000612016602e83611b9d565b915061202182611fba565b604082019050919050565b6000602082019050818103600083015261204581612009565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006120a8602983611b9d565b91506120b38261204c565b604082019050919050565b600060208201905081810360008301526120d78161209b565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061213a602b83611b9d565b9150612145826120de565b604082019050919050565b600060208201905081810360008301526121698161212d565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006121cc602d83611b9d565b91506121d782612170565b604082019050919050565b600060208201905081810360008301526121fb816121bf565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b600061225e602683611b9d565b915061226982612202565b604082019050919050565b6000602082019050818103600083015261228d81612251565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156122c85780820151818401526020810190506122ad565b838111156122d7576000848401525b50505050565b60006122e882612294565b6122f2818561229f565b93506123028185602086016122aa565b80840191505092915050565b600061231a82846122dd565b915081905092915050565b600081519050919050565b600061233b82612325565b6123458185611b9d565b93506123558185602086016122aa565b61235e81611918565b840191505092915050565b600060208201905081810360008301526123838184612330565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f09b12f4d9eb5bb95a8417f72f9dbaf4be462226608b1974eb560966ef877f6764736f6c63430008090033";

type ProfilesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfilesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Profiles__factory extends ContractFactory {
  constructor(...args: ProfilesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Profiles> {
    return super.deploy(overrides || {}) as Promise<Profiles>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Profiles {
    return super.attach(address) as Profiles;
  }
  override connect(signer: Signer): Profiles__factory {
    return super.connect(signer) as Profiles__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfilesInterface {
    return new utils.Interface(_abi) as ProfilesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profiles {
    return new Contract(address, _abi, signerOrProvider) as Profiles;
  }
}
